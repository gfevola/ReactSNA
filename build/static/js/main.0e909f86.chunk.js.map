{"version":3,"sources":["hocs/Navbar.tsx","pages/home.tsx","pages/dashboard/Dashboard_Home.tsx","auth/user_actions.tsx","pages/login.tsx","redux-toolkit.tsx","ToolkitApp.tsx","pages/data/data_actions.tsx","pages/data/DataImport.tsx","pages/data/ReviewImport.tsx","pages/sna/data/ReviewUpload.js","pages/data/DataUpload.js","pages/sna/sna_actions.tsx","pages/sna/modals/ModalNodeColor.js","pages/sna/modals/ModalLinkColor.js","pages/sna/functions/Pathfind.js","pages/sna/modals/ModalPathfind.js","pages/sna/modals/ModalNearbyCommunity.js","pages/sna/functions/Clusters.js","pages/sna/modals/shared items/ReviewItemsDropdown.js","pages/sna/functions/CleanString.js","pages/sna/SNAImport.tsx","pages/sna/modals/ModalImport.js","pages/sna/modals/ModalReview.js","pages/sna/modals/ModalScores.js","pages/sna/modals/ModalClusters.js","pages/sna/modals/ModalNodeDropdown.js","pages/sna/Network2D.js","pages/sna/SNAsidebar.js","pages/sna/SNABase.tsx","App.tsx","store.tsx","index.tsx"],"names":["Navbar","useState","isAuthenticated","linkstyle","logout","className","style","type","id","to","onClick","Home","Dashboard_Home","userSlice","createSlice","name","initialState","email","password","reducers","login","state","payload","loginActionCreator","actions","Login","dispatcher","useDispatch","formData","setFormData","onChange","e","target","value","loginauth","body","JSON","stringify","res","axios","post","process","headers","console","log","err","onSubmit","preventDefault","placeholder","required","minLength","todoSlice","desc","isComplete","edit","todoToEdit","find","todo","toggle","remove","index","findIndex","splice","create","reducer","push","prepare","uuid","selectedTodoSlice","select","counterSlice","extraReducers","createTodoActionCreator","editTodoActionCreator","toggleTodoActionCreator","deleteTodoActionCreator","selectTodoActionCreator","ToolkitApp","todos","useSelector","selectedTodoId","selectedTodo","editedCount","counter","newTodoInput","setNewTodoInput","editTodoInput","setEditTodoInput","isEditMode","setIsEditMode","editInput","useRef","useEffect","current","focus","handleCancelUpdate","length","htmlFor","map","i","todoId","ref","empdataSlice","empid","location","load_data","empdataActionCreator","DataImport","empData","setempData","then","data","catch","config","localStorage","getItem","get","ReviewImport","modelname","dataset","forEach","d","label","ModelKey","ModelType","setModelname","reviewFile","setReviewFile","event","dataArray","FormData","append","files","DataUpload","dataFile","setDataFile","linksInit","modelid","source","cluster","value1","value2","nodesInit","snavarsSlice","modelName","refreshData","refreshVars","nodeColor","linkColor","isHighlight","selectedNode","secondaryNode","pathInt","numClust","selectedItem","model_select","load_vars","refresh_data","refresh_var","selected_var","secondary_sel_var","path_select","reset_values","num_cluster","item_select","reviewDataSlice","ReviewItem","Summary","Description","Rating","Topic","TopicScore","reviewdata","review_delete","bigramDataSlice","Bigram_Term1","Bigram_Term2","Score","Distance","Count_Term1","Count_Term2","Term_Num1","Term_Num2","bigramdata","bigram_delete","linksSlice","createlinks","deletelinks","linksFullSlice","createlinksfull","deletelinksfull","nodesFullSlice","createnodesfull","deletenodesfull","nodesSlice","createnodes","deletenodes","pathSlice","path","add_path","delete_path","snamodelActionCreator","snavarsActionCreator","snarefreshDataActionCreator","snaselectActionCreator","snasecondaryActionCreator","pathselectActionCreator","resetvalsActionCreator","numclustersActionCreator","itemSelectActionCreator","reviewDataActionCreator","reviewdeleteActionCreator","bigramDataActionCreator","bigramdeleteActionCreator","links_createActionCreator","links_deleteActionCreator","nodes_createActionCreator","nodes_deleteActionCreator","linksfull_createActionCreator","linksfull_deleteActionCreator","nodesfull_createActionCreator","nodesfull_deleteActionCreator","pathaddActionCreator","pathdeleteActionCreator","ModalNodeColor","SNAstate","snavars","onChangeComplete","d3","_groups","cir","attributes","hex","refresh","changeVal","ModalLinkcolor","lk","Pathfind","links","selectednode","secondarynode","maxdepth","secondaryNodeLoc","ex","__data__","x","ey","y","linkloop","pathIDs","endpoint","newpaths","neighborList","foundAPath","trailingpath","indexOf","path_list","foundpaths","m","p","nextpaths","np","paths","iter","exp_paths","pl","bx","by","starting_dist","Math","pow","trimPath","pth","sort","a","b","slice","ModalPathfind","maxDepth","setMaxDepth","snanodes","sna_nodes","snalinks","sna_links","snapaths","sna_paths","scores","SubmitPaths","dlk","stroke","ScoresCreate","pathscores","ps","abs","score","round","Listvalues","default","min","max","attr","val","selectedIndex","DropdownChange","Pathing","strings","str1","ss","pInt","selectedPath","substring","ModalNearbyCommunity","radius","setRadius","svg1","ax","ay","parentnode","lower","node","cx","cy","dist","stlye","height","width","Clusters","nodes","nodegroups","nodenames","nd","s_int","t_int","changefromval","ng","k","clusterids","clustercounts","c","clustersortedIDs","clust","count","finalgroups","intg","Name","ReviewItemsDropdown","change","Reviews","Items","CleanString","replace","toLowerCase","SNAImport","reviews","snaNodes","sna_fullnodes","snaLinks","sna_fulllinks","isModal0Visible","setIsModal0Visible","datamodels","setDatamodels","callData","setCallData","itemFilter","item","desc_str","rv","String","terms","split","dd","document","getElementById","options","text","DropdownModelChg","dset","bigrams","nn","getNodesfromLinks","nn_clust","n","clustnum","nod","lnk","Modal","show","size","color","linkfieldName1","linkfieldName2","new_nodes","uniquevals","ModalImport","snanodesfull","snalinksfull","SNANodes","SNALinks","setSelectedItem","EnumerateReviews","marginTop","rev","ClickReview","xx","foundNodes","foundLinks","DropdownChg","ModalScores","line","range","bg1","bg2","ModalClusters","hasbeenrun","setHasbeenrun","colors","setColors","colors1","randomint","floor","random","svg","g","labels","link","circles","ModalNodeDropdown","Nodedropdown","nodeid","nodeSelect","transform","centernode","SNASidebar","isModal1Visible","setIsModal1Visible","isModal2Visible","setIsModal2Visible","isModal3Visible","setIsModal3Visible","isModal4Visible","setIsModal4Visible","isModal5Visible","setIsModal5Visible","isModal6Visible","setIsModal6Visible","isModal7Visible","setIsModal7Visible","isModal8Visible","setIsModal8Visible","marginLeft","iconShape","title","ModalLinkColor","ModalReview","Revlinks","forceProperties","center","charge","enabled","strength","distanceMin","distanceMax","collide","iterations","forceX","forceY","distance","simulation","ticked","alpha","dragstarted","active","alphaTarget","restart","fx","fy","dragged","dragended","zoom_handler","on","Network2D","getNodeNames","fixLinkformat","initializeSimulation","rerun","ln","ClickedNode","selID","transition","duration","updateForces","force","selectAll","enter","this","call","SNABase","App","exact","component","ReviewUpload","user","empdata","configureStore","middleware","getDefaultMiddleware","ReactDOM","render","store","StrictMode"],"mappings":"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","file":"static/js/main.0e909f86.chunk.js","sourcesContent":["import React, {useState, Fragment } from 'react';\r\n//import Navbar from './Navbar.js';\r\n//import { connect } from 'react-redux';\r\n//import {userSlice} from '../auth/user_actions';\r\nimport {Link} from 'react-router-dom'\r\nimport \"./css/Navbar.css\"\r\n\r\nconst Navbar = () => {\r\n\t\r\n\tlet [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n\t\r\n\tlet navbarstyle = {'backgroundColor': '#444444'}\r\n\tlet linkstyle = {'color': '#aaffff'}\r\n\t\r\n\tconst guestLinks = () => {\r\n\t\treturn(\r\n\t\t\t<Fragment>\r\n\t\t\t\t<li className=\"nav-item\" >\r\n\t\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/login\" style={linkstyle} >Log In</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className=\"nav-item\" >\r\n\t\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/signup\" style={linkstyle} >Sign Up</Link>\r\n\t\t\t\t</li>\t\r\n\t\t\t</Fragment>\r\n\t\t)\t\t\r\n\t};\r\n\t\r\n\tconst authLinks = () => {\r\n\t\treturn(\r\n\t\t\t<li className=\"nav-item\" >\r\n\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/Logout\" onClick={logout}>Logout</Link>\r\n\t\t\t</li>\t\r\n\t\t)\r\n\t};\r\n\t\r\n \tconst logout = () => {\r\n\t\r\n\t}; \r\n\r\n\treturn(\r\n\t\t<nav className=\"navbar navbar-expand-sm navbar-light bg-light0\" style={navbarstyle}>\r\n\t\t  <div className=\"container-fluid\">\r\n\t\t\t<button\r\n\t\t\t  className=\"navbar-toggler\"\r\n\t\t\t  type=\"button\"\r\n\t\t\t  data-mdb-toggle=\"collapse\"\r\n\t\t\t  data-mdb-target=\"#navbarNav\"\r\n\t\t\t  aria-controls=\"navbarNav\"\r\n\t\t\t  aria-expanded=\"false\"\r\n\t\t\t  aria-label=\"Toggle navigation\"\r\n\t\t\t>\r\n\t\t\t  <i className=\"fas fa-bars\"></i>\r\n\t\t\t</button>\r\n\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n\t\t\t  <ul className=\"navbar-nav\">\r\n\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/home\" style={linkstyle}>Home</Link>\r\n\t\t\t\t</li>\t\r\n\t\t\t\t\r\n\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/dashboard\" style={linkstyle}>Dashboard</Link>\r\n\t\t\t\t</li>\t\t\t\r\n\r\n\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/sna\" style={linkstyle}>Network Graph</Link>\r\n\t\t\t\t</li>\t\t\r\n\r\n\t\t\t\t{isAuthenticated ? authLinks(): guestLinks()}\r\n\t\t\t\t\r\n\t\t\t  </ul>\r\n\t\t\t</div>\r\n\t\t  </div>\r\n\t\t</nav>\r\n\t)\r\n};\r\n\r\nexport default(Navbar);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n//import axios from 'axios';\r\nimport Navbar from '../hocs/Navbar';\r\nimport \"./css/home.css\"\r\n\r\nconst Home = () => {\r\n\r\n\r\n\treturn(\r\n\t\t<div className=\"container\">\r\n\t\t\t<Navbar />\r\n\t\t\t<div className=\"wrapper\">\r\n\r\n\t\t\t\t<div className=\"home-body\">\r\n\t\t\t\t\t<h1 className='display-4'>True header</h1>\r\n\t\t\t\t\t<p className='lead'>Paragraph header</p>\r\n\t\t\t\t\t<hr className='my-4'/>\r\n\t\t\t\t\t<p>paragraph simple</p>\r\n\t\t\t\t\r\n\t\t\t\t\t<Link className='btn btn-primary btn-lg' to='/login'>Log In</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport Navbar from '../../hocs/Navbar';\r\nimport \"./css/dashboard.css\";\r\n\r\nconst Dashboard_Home = () => {\r\n\r\n\r\n\r\n\treturn(\r\n\t\t<div className=\"container\">\r\n\t\t\t<Navbar />\r\n\t\t\t<div className=\"grid-container\">\r\n\t\t\t  <header className=\"header\"></header>\r\n\t\t\t <aside className=\"sidenav\">\r\n\t\t\t  <ul className=\"sidenav__list\">\r\n\t\t\t\t<li className=\"sidenav__list-item\">Item One</li>\r\n\t\t\t\t<li className=\"sidenav__list-item\">Item Two</li>\r\n\t\t\t\t<li className=\"sidenav__list-item\">Item Three</li>\r\n\t\t\t\t<li className=\"sidenav__list-item\">Item Four</li>\r\n\t\t\t\t<li className=\"sidenav__list-item\">Item Five</li>\r\n\t\t\t  </ul>\r\n\t\t\t </aside>\r\n\t\t\t <main className=\"main\">\r\n\t\t\t\t<div className=\"main-header\">\r\n\t\t\t\t  <div className=\"main-header__heading\">Hello User</div>\r\n\t\t\t\t  <div className=\"main-header__updates\">Recent Items</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"main-overview\">\r\n\t\t\t\t  <div className=\"overviewcard\">\r\n\t\t\t\t\t<div className=\"overviewcard__icon\">Overview</div>\r\n\t\t\t\t\t<div className=\"overviewcard__info\">Card</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"overviewcard\">\r\n\t\t\t\t\t<div className=\"overviewcard__icon\">Overview</div>\r\n\t\t\t\t\t<div className=\"overviewcard__info\">Card</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"overviewcard\">\r\n\t\t\t\t\t<div className=\"overviewcard__icon\">Overview</div>\r\n\t\t\t\t\t<div className=\"overviewcard__info\">Card</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"overviewcard\">\r\n\t\t\t\t\t<div className=\"overviewcard__icon\">Overview</div>\r\n\t\t\t\t\t<div className=\"overviewcard__info\">Card</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t</main>\r\n\t\t\t  <footer className=\"footer\"></footer>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t)\r\n\r\n};\r\n\r\nexport default Dashboard_Home;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport {User} from \"../type\";\r\n\r\n\r\n/////////\r\nconst userStateInit: User = {\r\n\t\temail: '',\r\n\t\tpassword: ''\r\n};\r\n\r\n\r\n\r\nexport const userSlice = createSlice({\r\n\tname: 'user_action',\r\n\tinitialState: userStateInit,\r\n\treducers: {\r\n\t\r\n\t\tlogin: (state, {payload}: PayloadAction<{email: string, password: string}>) => {\r\n\t\t\t//uses primitive values (null, string, int, etc.), so can't mutate state directly\r\n\t\t\t//just return completely new state\r\n\t\t\treturn {\r\n\t\t\t\temail: payload.email,\r\n\t\t\t\tpassword: payload.password\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\n//manually export action creators\r\nexport const {\r\n\tlogin: loginActionCreator,\r\n} = userSlice.actions;","import React, { FormEvent, ChangeEvent, useState } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport {useDispatch} from 'react-redux';\r\n//import {useSelector} from 'react-redux';\r\nimport { loginActionCreator } from '../auth/user_actions';\r\n//import { State } from \"../type\";\r\nimport axios from 'axios';\r\n\r\nconst Login = () => {\r\n\r\n\t//react-redux functions\r\n\tconst dispatcher = useDispatch();\r\n\t//const user = useSelector((state: State) => state.user );\r\n\t\r\n\t\r\n\tconst [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\t\r\n    const { email, password } = formData;\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>):void => {\r\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\r\n\t};\r\n    \r\n\tconst onSubmit = (e: FormEvent<HTMLFormElement>):void => {\r\n        e.preventDefault();\r\n        dispatcher(loginActionCreator({email:email, password: password}));\r\n\r\n\t\tloginauth();\r\n    };\r\n\t\r\n\tconst loginauth = () => {\t\r\n\t//authentication - move to separate file\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t}\r\n\t\t};\r\n\t\tconst body = JSON.stringify({ email, password });\r\n\t\ttry {\r\n\t\t\tconst res =  axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create`, body, config);\r\n\t\t\tconsole.log(res)\r\n\t\t} catch (err){\r\n\t\t\t\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t\r\n\t\r\n\treturn(\r\n\t\t<div>\r\n\t\t  <form className='auth-form' onSubmit={e => onSubmit(e)}>\r\n                <div className='auth__form__group'>\r\n                    <input \r\n                        className='auth__form__input'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        name='email' \r\n\t\t\t\t\t\tvalue={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='auth-form'>\r\n                    <input\r\n                        className='auth__form__input'\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength={6}\r\n                    />\r\n                </div>\r\n                <button className='auth__form__button'>Login</button>\r\n            </form>\r\n\t\t</div>\r\n\t)\r\n\t\r\n};\r\n\r\nexport default Login;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport {Todo} from \"./type\";\r\nimport { v1 as uuid } from 'uuid';\r\n\r\n\r\n/////////\r\nconst todoInitialState: Todo[] = [\r\n\t{\r\n\t\tid: '1',\r\n\t\tdesc: \"Eaich treoi\",\r\n\t\tisComplete: true\r\n\t},\r\n\t{\r\n\t\tid: '2',\r\n\t\tdesc: \"etijasfni\",\r\n\t\tisComplete: false\r\n\t}\r\n];\r\n\r\n\r\nexport const todoSlice = createSlice({\r\n\tname: 'todos_action',\r\n\tinitialState: todoInitialState,\r\n\treducers: {\r\n\t\r\n\t\t//itemname: function or object\r\n\t\t//function version\r\n\t\tedit: (state, {payload}: PayloadAction<{id: string, desc: string}>) => {\r\n\t\t\tconst todoToEdit = state.find(todo => todo.id === payload.id);\r\n\t\t\tif (todoToEdit){\r\n\t\t\t\t//immer import allows mutation of state (redux toolkit only)\r\n\t\t\t\ttodoToEdit.desc = payload.desc;\r\n\t\t\t}\r\n\t\t},\r\n\t\ttoggle: (state, {payload}: PayloadAction<{id: string, isComplete: boolean }>) => {\r\n\t\t\tconst todoToEdit = state.find(todo => todo.id === payload.id);\r\n\t\t\tif (todoToEdit){\r\n\t\t\t\t//immer import allows mutation of state (redux toolkit only)\r\n\t\t\t\ttodoToEdit.isComplete = payload.isComplete;\r\n\t\t\t}\t\t\r\n\t\t},\r\n\t\tremove: (state, {payload}: PayloadAction<{id: string}>) => {\r\n\t\t\tconst index = state.findIndex(todo => todo.id === payload.id);\r\n\t\t\tif (index !== -1){\r\n\t\t\t\t//immer import allows mutation of state (redux toolkit only)\r\n\t\t\t\tstate.splice(index,1);\r\n\t\t\t}\t\t\t\r\n\t\t},\r\n\t\t//object version\r\n\t\tcreate: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<{id: string, desc: string, isComplete: boolean}>) => {\r\n\t\t\t\tstate.push() //uses immer mutability\r\n\t\t\t},\r\n\t\t\tprepare: ({desc}:{ desc: string }) => ({ //prepares payload allowing custom functions\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tid: uuid(),\r\n\t\t\t\t\tdesc: desc,\r\n\t\t\t\t\tisComplete: false\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\t//default case not necessary\r\n\t}\r\n});\r\n\r\n\r\nexport const selectedTodoSlice = createSlice({\r\n\tname: 'selectedTodo_action',\r\n\tinitialState: null as string | null,\r\n\treducers: {\r\n\t\tselect: (state, {payload}: PayloadAction<{id: string}>) => {\r\n\t\t\t//uses primitive values (null, string, int, etc.), so can't mutate state directly\r\n\t\t\t//just return completely new state\r\n\t\t\treturn payload.id\r\n\t\t}\r\n\t}\r\n});\r\n\r\n//\r\nexport const counterSlice = createSlice({\r\n\tname: 'counter_action',\r\n\tinitialState: 0,\r\n\treducers: {},\r\n\t//to accept other state's actions\r\n\textraReducers: {\r\n\t\t[todoSlice.actions.create.type]: state => state + 1,\r\n\t\t[todoSlice.actions.edit.type]: state => state + 1,\r\n\t\t[todoSlice.actions.remove.type]: state => state + 1,\r\n\t\t[todoSlice.actions.toggle.type]: state => state + 1,\r\n\t}\r\n});\r\n\r\n//manually export action creators\r\nexport const {\r\n\tcreate: createTodoActionCreator,\r\n\tedit: editTodoActionCreator,\r\n\ttoggle: toggleTodoActionCreator,\r\n\tremove: deleteTodoActionCreator,\r\n} = todoSlice.actions;\r\nexport const {\r\n\tselect: selectTodoActionCreator,\r\n} = selectedTodoSlice.actions;\r\n","import React, {\r\n  ChangeEvent,\r\n  FormEvent,\r\n  useEffect,\r\n  useRef,\r\n  useState\r\n} from \"react\";\r\nimport { State } from \"./type\";\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {createTodoActionCreator, \r\n\t\teditTodoActionCreator, \r\n\t\ttoggleTodoActionCreator, \r\n\t\tdeleteTodoActionCreator, \r\n\t\tselectTodoActionCreator} from './redux-toolkit';\r\n\r\n\r\nconst ToolkitApp = function() {\r\n\r\n\t//react-redux functions\r\n\tconst dispatcher = useDispatch();\r\n\tconst todos = useSelector((state: State) => state.todos );\r\n\tconst selectedTodoId = useSelector((state: State) => state.selectedTodo );\r\n\tconst editedCount = useSelector((state: State) => state.counter);\r\n\r\n\tconst [newTodoInput, setNewTodoInput] = useState<string>(\"\");\r\n\tconst [editTodoInput, setEditTodoInput] = useState<string>(\"\");\r\n\tconst [isEditMode, setIsEditMode] = useState<boolean>(false);\r\n\tconst editInput = useRef<HTMLInputElement>(null);\r\n\r\n\tconst selectedTodo =\r\n\t(selectedTodoId && todos.find(todo => todo.id === selectedTodoId)) || null;\r\n\t\r\n\t//event handlers\r\n\tconst handleNewInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n\t\tsetNewTodoInput(e.target.value);\r\n\t};\r\n\r\n\tconst handleEditInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n\t\tsetEditTodoInput(e.target.value);\r\n\t};\r\n\t\r\n\tconst handleCreateNewTodo = (e: FormEvent<HTMLFormElement>): void => {\r\n\t\te.preventDefault();\r\n\t\tif (!newTodoInput.length) return;\r\n\t\tconsole.log(newTodoInput);\r\n\t\tdispatcher(createTodoActionCreator({desc: newTodoInput}));\r\n\t\tsetNewTodoInput(\"\");\r\n\t};\r\n\r\n\tconst handleSelectTodo = (todoId: string) => (): void => {\r\n\t\tdispatcher(selectTodoActionCreator({id: todoId }));\r\n\t};\r\n\r\n\tconst handleEdit = (): void => {\r\n\t\tif (!selectedTodo) return;\r\n\t\tsetEditTodoInput(selectedTodo.desc);\r\n\t\tsetIsEditMode(true);\r\n\t};\r\n\t\r\n\r\n\tconst handleUpdate = (e: FormEvent<HTMLFormElement>): void => {\r\n\t\te.preventDefault();\r\n\t\tif (!editTodoInput.length || !selectedTodoId) { \r\n\t\t\thandleCancelUpdate() ;\r\n\t\t\treturn \r\n\t\t};\r\n\t\t\r\n\t\tdispatcher(editTodoActionCreator({id: selectedTodoId, desc: editTodoInput}));\r\n\t\t//zero out the text box after submitting\r\n\t\tsetIsEditMode(false);\r\n\t\tsetEditTodoInput(\"\");\r\n\t\t\r\n\t};\r\n\r\n\tconst handleToggle = (): void => {\r\n\t\tif (!selectedTodoId || !selectedTodo) return;\r\n\t\t\r\n\t\tdispatcher(toggleTodoActionCreator({id: selectedTodoId, isComplete: !selectedTodo.isComplete }));\r\n\t};\r\n\r\n\tconst handleDelete = (): void => {\r\n\t\tif (!selectedTodoId) return;\r\n\t\t\r\n\t\tdispatcher(deleteTodoActionCreator({id: selectedTodoId }));\r\n\t\t\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\tif (isEditMode) {\r\n\t  editInput?.current?.focus();\r\n\t}\r\n\t}, [isEditMode]);\r\n\r\n\r\n\tconst handleCancelUpdate = (\r\n\t\te?: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n\t): void => {\r\n\t\te?.preventDefault();\r\n\t\tsetIsEditMode(false);\r\n\t\tsetEditTodoInput(\"\");\r\n\t};\r\n\r\n\treturn (\r\n\t<div className=\"App1\">\r\n\t  <div className=\"App__counter\">Todos Updated Count: {editedCount}</div>\r\n\t  <div className=\"App__header\">\r\n\t\t<h1>Todo: Redux vs RTK Edition</h1>\r\n\t\t<form onSubmit={handleCreateNewTodo}>\r\n\t\t  <label htmlFor=\"new-todo\">Add new:</label>\r\n\t\t  <input\r\n\t\t\tonChange={handleNewInputChange}\r\n\t\t\tid=\"new-todo\"\r\n\t\t\tvalue={newTodoInput}\r\n\t\t  />\r\n\t\t  <button type=\"submit\">Create</button>\r\n\t\t</form>\r\n\t  </div>\r\n\t  <div className=\"App__body\">\r\n\t\t<ul className=\"App__list\">\r\n\t\t  <h2>My Todos:</h2>\r\n\t\t  {todos.map((todo, i) => (\r\n\t\t\t<li\r\n\t\t\t  className={`${todo.isComplete ? \"done\" : \"\"} ${\r\n\t\t\t\ttodo.id === selectedTodoId ? \"active\" : \"\"\r\n\t\t\t  }`}\r\n\t\t\t  key={todo.id}\r\n\t\t\t  onClick={handleSelectTodo(todo.id)}\r\n\t\t\t>\r\n\t\t\t  <span className=\"list-number\">{i + 1})</span> {todo.desc}\r\n\t\t\t</li>\r\n\t\t  ))}\r\n\t\t</ul>\r\n\t\t<div className=\"App_todo-info\">\r\n\t\t  <h2>Selected Todo:</h2>\r\n\t\t  {selectedTodo === null ? (\r\n\t\t\t<span className=\"empty-state\">No Todo Selected</span>\r\n\t\t  ) : !isEditMode ? (\r\n\t\t\t<>\r\n\t\t\t  <span\r\n\t\t\t\tclassName={`todo-desc ${\r\n\t\t\t\t  selectedTodo?.isComplete ? \"done\" : \"\"\r\n\t\t\t\t}`}\r\n\t\t\t  >\r\n\t\t\t\t{selectedTodo.desc}\r\n\t\t\t  </span>\r\n\t\t\t  <div className=\"todo-actions\">\r\n\t\t\t\t<button onClick={handleEdit}>Edit</button>\r\n\t\t\t\t<button onClick={handleToggle}>Toggle</button>\r\n\t\t\t\t<button onClick={handleDelete}>Delete</button>\r\n\t\t\t  </div>\r\n\t\t\t</>\r\n\t\t  ) : (\r\n\t\t\t<form onSubmit={handleUpdate}>\r\n\t\t\t  <label htmlFor=\"edit-todo\">Edit:</label>\r\n\t\t\t  <input\r\n\t\t\t\tref={editInput}\r\n\t\t\t\tonChange={handleEditInputChange}\r\n\t\t\t\tvalue={editTodoInput}\r\n\t\t\t  />\r\n\t\t\t  <button type=\"submit\">Update</button>\r\n\t\t\t  <button onClick={handleCancelUpdate}>Cancel</button>\r\n\t\t\t</form>\r\n\t\t  )}\r\n\t\t</div>\r\n\t  </div>\r\n\t</div>\r\n\t);\r\n};\r\n\r\nexport default ToolkitApp;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport {Emp} from \"../../type\";\r\n\r\n\r\n/////////\r\nconst empStateInit: Emp[] = [\r\n\t{\r\n\t\tname: '',\r\n\t\tempid: '',\r\n\t\tlocation: '',\r\n\t},\r\n];\r\n\r\n\r\nexport const empdataSlice = createSlice({\r\n\tname: 'empdata_action',\r\n\tinitialState: empStateInit,\r\n\treducers: {\r\n\t\r\n\t\tload_data: {\r\n\t\t\t//uses primitive values (null, string, int, etc.), so can't mutate state directly\r\n\t\t\t//just return completely new state\r\n\t\t\treducer: (state, {payload}: PayloadAction<{name: string, empid: string, location: string}>) => {\r\n\t\t\t\tstate.push() //uses immer mutability\r\n\t\t\t},\r\n\t\t\tprepare: ({name, empid, location}:{ name: string, empid: string, location: string }) => ({ //prepares payload allowing custom functions\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t\tempid: empid,\r\n\t\t\t\t\tlocation: location\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n});\r\n\r\n//manually export action creators\r\nexport const {\r\n\tload_data: empdataActionCreator,\r\n} = empdataSlice.actions;","import React, {useState, ChangeEvent} from 'react';\r\nimport axios from 'axios';\r\nimport { empdataActionCreator } from './data_actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport {Emp} from \"../../type\";\r\n \r\nconst DataImport = () => {\r\n\r\n\tconst [formData, setFormData] = useState({\r\n\t\tlocation: 'N/A',\r\n\t});\r\n\tconst { location } = formData;\r\n\tconst dispatcher = useDispatch();\r\n\tconst [empData, setempData] = useState<Emp[]>([]);\r\n\r\n\tconst handleFormChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n\t\tsetFormData({location: e.target.value});\r\n\t};\r\n\r\n\t//------using POST\r\n    const dataretrieve_post = () => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\t\t//axios call\r\n        axios.post<Emp[]>(`${process.env.REACT_APP_API_URL}/api/data/datapost`, {location}, config)\r\n        .then(res => {\r\n\r\n\t\t    setempData(res.data);\r\n\t\t\tdispatcher(empdataActionCreator(empData[0]));\r\n\t\t\t\r\n\t\t\t\r\n\t\t   //const {name, empid, location} = res.data[0]\r\n\t\t  // const linedata = {name:\"\",empid:\"\",location:\"\"}\r\n\t\t   //dispatcher(empdataActionCreator(linedata));\r\n        })\r\n        .catch(err => {\r\n\t\t\tconsole.log('data error');\r\n        })\r\n    };\r\n\t\r\n\t//------using GET\r\n    const dataretrieve_get = () => {\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//axios call\r\n        axios.get<Emp[]>(`${process.env.REACT_APP_API_URL}/api/data/data`, config)\r\n        .then(res => {\r\n           console.log(res.data);\r\n\t\t   /* const {name, empid, location} = res.data.results[0]\r\n\t\t   const linedata = {name:\"\",empid:\"\",location:\"\"}\r\n\t\t   \r\n\t\t   dispatcher(empdataActionCreator(linedata)); */\r\n        })\r\n        .catch(err => {\r\n\t\t\tconsole.log('data error');\r\n        })\r\n    };\r\n\r\n    return (\r\n       <div>\r\n\t\t   Data Page\r\n\r\n\t\t\t  <label> Location </label>\r\n\t\t\t  <input\r\n\t\t\t\tonChange={handleFormChange}\r\n\t\t\t\tvalue={formData.location}\r\n\t\t\t  />\r\n\t\t\t  <button onClick={dataretrieve_post}>Post</button>\r\n\t\t\t  <button onClick={dataretrieve_get}>Get</button>\r\n\r\n\t   </div>\r\n    );\r\n};\r\n\r\n\r\nexport default DataImport;\r\n","import React, {useState, ChangeEvent} from 'react';\r\nimport axios from 'axios';\r\n//import { empdataActionCreator } from './data_actions';\r\n//import { useDispatch } from 'react-redux';\r\nimport {ReviewModel_Review, AxiosPost} from \"../../type\";\r\n//import {Review} from \"../../type\";\r\n\r\nconst ReviewImport = () => {\r\n\r\n\tconst [formData, setFormData] = useState({\r\n\t\tmodelname: 'xx'\r\n\t});\r\n\tconst { modelname } = formData;\r\n\t//const [revData, setrevData] = useState<Review[]>();\r\n\t\r\n\tconst handleFormChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n\t\tsetFormData({modelname: e.target.value});\r\n\t};\r\n\tinterface ModelDataType {\r\n\t\tlabel: string;\r\n\t\tvalue: string;\r\n\t};\r\n\t\r\n\tconst dataset: ModelDataType[] = []\r\n\t\t\t\t\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t}\r\n\t};\r\n\r\n\t//------list of models\r\n    const reviewmodelretrieve_post = () => {\r\n\r\n\t\t//axios call\r\n        axios.post<ReviewModel_Review[]>(`${process.env.REACT_APP_API_URL}/api/reviews/models/`, {modelname}, config)\r\n        .then(res => {\r\n\t\t\tres.data.forEach(d => {\r\n\t\t\t\tdataset.push({label : d.ModelKey, value: d.ModelType})\r\n\t\t\t})\r\n\t\t\tconsole.log(dataset)\r\n        })\r\n        .catch(err => {\r\n\t\t\tconsole.log('data error');\r\n        })\r\n    };\r\n\t\r\n\t//------chosen model data\r\n    const reviewretrieve_post = () => {\r\n\t\t\r\n\t\treviewmodelretrieve_post()\r\n\t\t\r\n\t\t//axios call\r\n        axios.post<AxiosPost[]>(`${process.env.REACT_APP_API_URL}/api/reviews/review/`, {modelname}, config)\r\n        .then((res) => {\r\n\t\t\t//let xx:any = res.data[0];\r\n\t\t\t//let rr: Review[] = xx.reviews;\r\n\t\t    //setrevData(rr);\r\n        })\r\n        .catch(err => {\r\n\t\t\tconsole.log('data error');\r\n        })\r\n    };\r\n\r\n    return (\r\n       <div>\r\n\t\t   Data Page\r\n\t\t  \r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={ modelname }\r\n\t\t\t\tonChange = { handleFormChange }\r\n\t\t\t/>\r\n\t\t\t<button type=\"submit\" onClick={reviewretrieve_post}>Get Data</button>\r\n\r\n\t   </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ReviewImport;\r\n","import React, {useState, ChangeEvent} from 'react';\r\nimport axios from 'axios';\r\n\r\n//import {Review} from \"../../type\";\r\n\r\nconst ReviewImport = () => {\r\n\r\n\tconst [modelname, setModelname] = useState('xx');\r\n\tconst [reviewFile, setReviewFile] = useState([]);\r\n\t\t\t\t\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'multipart/form-data'\r\n\t\t}\r\n\t};\r\n\t\r\n\t//submit to backend\r\n    const review_posttobackend = (event) => {\r\n\t\tconsole.log(modelname);\r\n\t\tconsole.log(reviewFile);\r\n\t\t\r\n\t\tevent.preventDefault()\r\n\t\t\r\n\t\tlet dataArray = new FormData();\r\n\t\tdataArray.append(\"modelname\",modelname);\r\n\t\tdataArray.append(\"reviewFile\",reviewFile);\r\n\t\t\r\n\t\t//axios call\r\n        axios.post(`${process.env.REACT_APP_API_URL}/api/reviews/upload/`, \r\n\t\t\t\t\t//{modelname: modelname, reviewFile: reviewFile}, \r\n\t\t\t\t\tdataArray,\r\n\t\t\t\t\tconfig\r\n\t\t\t\t)\r\n        .then(res => {\r\n\t\t\tconsole.log('posted data')\r\n        })\r\n        .catch(err => {\r\n\t\t\tconsole.log('data error');\r\n        })\r\n    };\r\n\t\r\n\tconst csrf = async () => {\r\n\t\tconst response = await axios.get('/getCSRFToken');\r\n\t\t\r\n\t\taxios.defaults.headers.post['X-CSRF-Token'] = response.data.CSRFToken ;\r\n\t};\r\n\t\r\n    return (\r\n       <div>\r\n\t\t   Review Page1\r\n\t\t\r\n\t\t\t<label> Reviews File </label>\r\n\t\t\t<form onSubmit={review_posttobackend}>\r\n\t\t\t\t<input type=\"file\" name=\"reviewFile\" onChange={e => setReviewFile(e.target.files[0])}/>\r\n\t\t\t\t<label> model name </label>\r\n\t\t\t\t<input type=\"text\" name=\"modelname\" onChange={e => setModelname(e.target.value)}/>\r\n\t\t\t\t\r\n\t\t\t\t<button type=\"submit\" >Get Data</button>\r\n\t\t\t</form>\t\r\n\t   </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ReviewImport;\r\n","import React, {useState, ChangeEvent} from 'react';\r\nimport axios from 'axios';\r\n\r\n//import {Review} from \"../../type\";\r\n\r\nconst DataUpload = () => {\r\n\r\n\tconst [dataFile, setDataFile] = useState([]);\r\n\t\t\t\t\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'multipart/form-data'\r\n\t\t\t//'Content-Type': 'application/json'\r\n\t\t}\r\n\t};\r\n\t\r\n\t//submit to backend\r\n    const data_posttobackend = (event) => {\r\n\r\n\t\tevent.preventDefault()\r\n\t\t\r\n\t\tconsole.log(dataFile);\t\t\r\n\t\tlet dataArray = new FormData();\r\n\t\tdataArray.append(\"datafile\",dataFile);\r\n\t\t\r\n\t\t//axios call\r\n        axios.post(`${process.env.REACT_APP_API_URL}/api/reviews/dataupload/`, \r\n\t\t\t\t\tdataArray,\r\n\t\t\t\t\tconfig\r\n\t\t\t\t)\r\n        .then(res => {\r\n\t\t\tconsole.log('posted data')\r\n        })\r\n        .catch(err => {\r\n\t\t\tconsole.log('data error');\r\n        })\r\n    };\r\n\t\r\n\tconst csrf = async () => {\r\n\t\tconst response = await axios.get('/getCSRFToken');\r\n\t\t\r\n\t\taxios.defaults.headers.post['X-CSRF-Token'] = response.data.CSRFToken ;\r\n\t};\r\n\t\r\n    return (\r\n       <div>\r\n\t\t   Data Page1\r\n\t\t\r\n\t\t\t<label> Data File </label>\r\n\t\t\t<form onSubmit={data_posttobackend}>\r\n\t\t\t\t<input type=\"file\" name=\"dataFile\" onChange={e => setDataFile(e.target.files[0])}/>\r\n\r\n\t\t\t\t<button type=\"submit\" >Get Data</button>\r\n\t\t\t</form>\t\r\n\t   </div>\r\n    );\r\n};\r\n\r\n\r\nexport default DataUpload;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport {SNAvars, Review, ReviewBigram, SNA_Link, SNA_Node, Path} from \"../../type\";\r\n\r\n\r\n/////////\r\nconst snaInit: SNAvars = \r\n\t{\r\n\t\tmodelName: '',\r\n\t\trefreshData: true,\r\n\t\trefreshVars: true,\r\n\t\tnodeColor: '#880e4f',\r\n\t\tlinkColor: '#006064',\r\n\t\tisHighlight: false,\r\n\t\tselectedNode: \"\",\r\n\t\tsecondaryNode: \"\",\r\n\t\tpathInt: 0,\r\n\t\tnumClust: 0,\r\n\t\tselectedItem:'',\r\n\t};\r\n\r\nconst reviewInit: Review[] = [{ \r\n\tModelKey: '',\r\n\tReviewItem: '',\r\n\tSummary: '',\r\n\tDescription: '',\r\n\tRating: 0,\r\n\tTopic: '',\r\n\tTopicScore: 0,\r\n}]\r\n\r\nconst bigramInit: ReviewBigram[] = [{\r\n\t\tid:0,\r\n\t\tModelKey: '',\r\n\t\tBigram_Term1: '',\r\n\t\tBigram_Term2: '',\r\n\t\tScore: 1,\r\n\t\tDistance: 1,\r\n\t\tCount_Term1: 1,\r\n\t\tCount_Term2: 1,\r\n\t\tTerm_Num1: 1,\r\n\t\tTerm_Num2: 1,\t\t\r\n\t}];\r\n\t\r\nconst linksInit: SNA_Link[] = [\r\n\t{\r\n\t\tmodelid: 'tuhjbsi988',\r\n\t\tid: '0',\r\n\t\tsource: 'Import Data Model',\r\n\t\ttarget: 'Select Model Name',\r\n\t\tcluster: 1,\r\n\t\tvalue1: 1,\r\n\t\tvalue2: 0,\r\n\t},\r\n\t{\r\n\t\tmodelid: 'tuhjbsi988',\r\n\t\tid: '1',\r\n\t\tsource: 'Get Data',\r\n\t\ttarget: 'Import Data Model',\r\n\t\tcluster: 1,\r\n\t\tvalue1: 3,\r\n\t\tvalue2: 4,\r\n\t},\r\n\t{\r\n\t\tmodelid: 'tuhjbsi988',\r\n\t\tid: '2',\r\n\t\tsource: 'Adjust Settings',\r\n\t\ttarget: 'As Necessary',\r\n\t\tcluster: 2,\r\n\t\tvalue1: 5,\r\n\t\tvalue2: 5,\r\n\t},\t\r\n]\r\n\r\nconst nodesInit: SNA_Node[] = [\r\n\t\r\n\t{\r\n\t\tid: 'Notes',\r\n\t\tname: 'Notes',\r\n\t\tcluster: 3\r\n\t},\t\r\n\t{\r\n\t\tid: 'Import Data Model',\r\n\t\tname: 'Import Data Model',\r\n\t\tcluster: 1\r\n\t},\r\n\t{\r\n\t\tid: 'Select Model Name',\r\n\t\tname: 'Select Model Name',\r\n\t\tcluster: 1\r\n\t},\r\n\t{\r\n\t\tid: 'Get Data',\r\n\t\tname: 'Get Data',\r\n\t\tcluster: 1\r\n\t},\t\r\n\t{\r\n\t\tid: 'Adjust Settings',\r\n\t\tname: 'Adjust Settings',\r\n\t\tcluster: 2\r\n\t},\t\r\n\t{\r\n\t\tid: 'As Necessary',\r\n\t\tname: 'As Necessary',\r\n\t\tcluster: 2\r\n\t},\t\r\n]\r\n\r\nconst pathInit: Path[] = [{\r\n\t\tpath: '',\r\n}]\r\n\r\n\r\nexport const snavarsSlice = createSlice({\r\n\tname: 'snavar_action',\r\n\tinitialState: snaInit,\r\n\treducers: {\r\n\t\tmodel_select: (state, {payload}: PayloadAction<{modelName: string}>) => {\r\n\t\t\tstate.modelName = payload.modelName\r\n\t\t},\r\n\t\tload_vars: (state, {payload}: PayloadAction<{refreshData: boolean, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trefreshVars: boolean, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnodeColor: string, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlinkColor: string, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisHighlight: boolean,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedNode: string,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}>) => {\r\n\t\t\t\t//immer import allows mutation of state (redux toolkit only)\r\n\t\t\t\tstate.refreshData = payload.refreshData;\r\n\t\t\t\tstate.refreshVars = payload.refreshVars;\r\n\t\t\t\tstate.nodeColor = payload.nodeColor;\r\n\t\t\t\tstate.linkColor = payload.linkColor;\r\n\t\t\t\tstate.isHighlight = payload.isHighlight;\r\n\t\t},\r\n\t\trefresh_data: (state, {payload}: PayloadAction<{refreshData: boolean}>) => {\r\n\t\t\tstate.refreshData = payload.refreshData\r\n\t\t},\r\n\t\trefresh_var: (state, {payload}: PayloadAction<{refreshVars: boolean}>) => {\r\n\t\t\tstate.refreshVars = payload.refreshVars\r\n\t\t},\r\n\t\tselected_var: (state, {payload}: PayloadAction<{selectedNode: string}>) => {\t\t\r\n\t\t\tstate.selectedNode = payload.selectedNode\r\n\t\t},\r\n\t\tsecondary_sel_var: (state, {payload}: PayloadAction<{secondaryNode: string}>) => {\r\n\t\t\tstate.secondaryNode = payload.secondaryNode\r\n\t\t},\r\n\t\tpath_select: (state, {payload}: PayloadAction<{pathInt: number}>) => {\r\n\t\t\tstate.pathInt = payload.pathInt\r\n\t\t},\r\n\t\treset_values: (state, {payload}: PayloadAction<{}>) => {\r\n\t\t\tstate.pathInt = 0;\r\n\t\t\tstate.selectedNode = '';\r\n\t\t\tstate.secondaryNode = '';\r\n\t\t},\r\n\t\tnum_cluster: (state, {payload}: PayloadAction<{numClust: number}>) => {\r\n\t\t\tstate.numClust = payload.numClust;\r\n\t\t},\r\n\t\titem_select: (state, {payload}: PayloadAction<{selectedItem: string}>) => {\r\n\t\t\tstate.selectedItem = payload.selectedItem;\r\n\t\t},\r\n\t}\r\n});\r\n\r\n//reviews\r\nexport const reviewDataSlice = createSlice({\r\n\tname: 'reviewdata_action',\r\n\tinitialState: reviewInit,\r\n\treducers: {\r\n\t\treviewdata: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<Review>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({ModelKey, ReviewItem, Summary, Description, Rating, Topic, TopicScore}: Review) => ({ \r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tModelKey: ModelKey,\r\n\t\t\t\t\tReviewItem: ReviewItem,\r\n\t\t\t\t\tSummary: Summary,\r\n\t\t\t\t\tDescription: Description,\r\n\t\t\t\t\tRating: Rating,\r\n\t\t\t\t\tTopic: Topic,\r\n\t\t\t\t\tTopicScore: TopicScore,\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\treview_delete: (state, {payload}: PayloadAction<{}>) => {\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t},\r\n\t}\r\n});\r\n\r\n//review bigrams\r\nexport const bigramDataSlice = createSlice({\r\n\tname: 'bigramdata_action',\r\n\tinitialState: bigramInit,\r\n\treducers: {\r\n\t\tbigramdata: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<ReviewBigram>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({id, ModelKey, Bigram_Term1, Bigram_Term2, Score, Distance, Count_Term1, Count_Term2, Term_Num1, Term_Num2}:\r\n\t\t\t\t\t\tReviewBigram) => ({ //prepares payload allowing custom functions\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\tModelKey: ModelKey,\r\n\t\t\t\t\t\tBigram_Term1: Bigram_Term1,\r\n\t\t\t\t\t\tBigram_Term2: Bigram_Term2,\r\n\t\t\t\t\t\tScore: Score,\r\n\t\t\t\t\t\tDistance: Distance,\r\n\t\t\t\t\t\tCount_Term1: Count_Term1,\r\n\t\t\t\t\t\tCount_Term2: Count_Term2,\r\n\t\t\t\t\t\tTerm_Num1: Term_Num1,\r\n\t\t\t\t\t\tTerm_Num2: Term_Num2,\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\tbigram_delete: (state, {payload}: PayloadAction<{}>) => {\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t},\r\n\t}\r\n});\r\n\r\n//----------------------------------\r\n//links - from bigrams\r\nexport const linksSlice = createSlice({\r\n\tname: 'links_action',\r\n\tinitialState: linksInit,\r\n\treducers: {\r\n\t\tcreatelinks: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<SNA_Link>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({modelid, id, source, target, cluster, value1, value2}:\r\n\t\t\t\t\t\tSNA_Link) => ({ //prepares payload allowing custom functions\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\t\tmodelid: modelid,\r\n\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\tsource: source,\r\n\t\t\t\t\t\ttarget: target,\r\n\t\t\t\t\t\tcluster: cluster,\r\n\t\t\t\t\t\tvalue1: value1,\r\n\t\t\t\t\t\tvalue2: value2,\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\tdeletelinks: (state, {payload}: PayloadAction<{}>) => {\r\n\t\t\t//delete all\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport const linksFullSlice = createSlice({\r\n\tname: 'linksfull_action',\r\n\tinitialState: linksInit,\r\n\treducers: {\r\n\t\tcreatelinksfull: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<SNA_Link>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({modelid, id, source, target, cluster, value1, value2}:\r\n\t\t\t\t\t\tSNA_Link) => ({ //prepares payload allowing custom functions\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\t\tmodelid: modelid,\r\n\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\tsource: source,\r\n\t\t\t\t\t\ttarget: target,\r\n\t\t\t\t\t\tcluster: cluster,\r\n\t\t\t\t\t\tvalue1: value1,\r\n\t\t\t\t\t\tvalue2: value2,\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\tdeletelinksfull: (state, {payload}: PayloadAction<{}>) => {\r\n\t\t\t//delete all\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\n//nodes full - from bigrams\r\nexport const nodesFullSlice = createSlice({\r\n\tname: 'nodesfull_action',\r\n\tinitialState: nodesInit,\r\n\treducers: {\r\n\t\tcreatenodesfull: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<SNA_Node>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t\t//console.log(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({id, name, cluster}: SNA_Node) => ({ //prepares payload allowing custom functions\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\tcluster: cluster,\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\tdeletenodesfull: (state, {payload}: PayloadAction<{}>) => {\r\n\t\t\t//delete all\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t}\r\n\t}\r\n})\r\n\r\n//nodes - from bigrams\r\nexport const nodesSlice = createSlice({\r\n\tname: 'nodes_action',\r\n\tinitialState: nodesInit,\r\n\treducers: {\r\n\t\tcreatenodes: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<SNA_Node>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t\t//console.log(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({id, name, cluster}: SNA_Node) => ({ //prepares payload allowing custom functions\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\tcluster: cluster,\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\tdeletenodes: (state, {payload}: PayloadAction<{}>) => {\r\n\t\t\t//delete all\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t}\r\n\t}\r\n})\r\n\r\n\r\nexport const pathSlice = createSlice({\r\n\tname: 'path_action',\r\n\tinitialState: pathInit,\r\n\treducers: {\r\n\t\tadd_path: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<Path>) => {\r\n\t\t\t\tstate.push(payload)\r\n\t\t\t},\r\n\t\t\tprepare: ({path}: Path) => ({ //prepares payload allowing custom functions\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\t\tpath: path\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\t\r\n\t\tdelete_path: (state, {payload}: PayloadAction<{}>) => {\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t}\r\n\t}\r\n})\r\n\r\n//manually export action creators\r\nexport const {\r\n\tmodel_select: snamodelActionCreator,\r\n\tload_vars: snavarsActionCreator,\r\n\trefresh_data: snarefreshDataActionCreator,\r\n\trefresh_var: snarefreshVarsActionCreator,\r\n\tselected_var: snaselectActionCreator,\r\n\tsecondary_sel_var: snasecondaryActionCreator,\r\n\tpath_select: pathselectActionCreator,\r\n\treset_values: resetvalsActionCreator,\r\n\tnum_cluster: numclustersActionCreator,\r\n\titem_select: itemSelectActionCreator,\r\n} = snavarsSlice.actions;\r\n\r\n\r\nexport const {\r\n\treviewdata: reviewDataActionCreator,\r\n\treview_delete: reviewdeleteActionCreator,\r\n} = reviewDataSlice.actions;\r\nexport const {\r\n\tbigramdata: bigramDataActionCreator,\r\n\tbigram_delete: bigramdeleteActionCreator,\r\n} = bigramDataSlice.actions;\r\n\r\n//nodes&links\r\nexport const {\r\n\tcreatelinks: links_createActionCreator,\r\n\tdeletelinks: links_deleteActionCreator,\r\n} = linksSlice.actions;\r\nexport const {\r\n\tcreatenodes: nodes_createActionCreator,\r\n\tdeletenodes: nodes_deleteActionCreator,\r\n} = nodesSlice.actions;\r\nexport const {\r\n\tcreatelinksfull: linksfull_createActionCreator,\r\n\tdeletelinksfull: linksfull_deleteActionCreator,\r\n} = linksFullSlice.actions;\r\nexport const {\r\n\tcreatenodesfull: nodesfull_createActionCreator,\r\n\tdeletenodesfull: nodesfull_deleteActionCreator,\r\n} = nodesFullSlice.actions;\r\n\r\nexport const {\r\n\tadd_path: pathaddActionCreator,\r\n\tdelete_path: pathdeleteActionCreator,\r\n} = pathSlice.actions;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { snavarsActionCreator } from '../sna_actions';\r\nimport  {SwatchesPicker} from 'react-color';\r\nimport * as d3 from 'd3';\r\n\r\n\r\nconst ModalNodeColor = () => {\r\n\t\r\n\tconst SNAstate = useSelector((state) => state.snavars);\r\n\r\n\tconst dispatcher = useDispatch();\r\n\t\r\n\tconst changeVal = (e) => {\r\n\r\n\t\td3.selectAll(\".circle1\")._groups[0].forEach(cir => {\r\n\t\t\tcir.attributes.style.value = \"stroke: \" + e.hex;\r\n\t\t})\r\n\t\t\r\n\t\tdispatcher(snavarsActionCreator({\r\n\t\t\t\t\t\trefresh: SNAstate.refresh,\r\n\t\t\t\t\t\tnodeColor:e.hex, \r\n\t\t\t\t\t\tlinkColor:SNAstate.linkColor, \r\n\t\t\t\t\t\tisHighlight: SNAstate.isHighlight\r\n\t\t}))\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"modalPopup\">\r\n\t\t\tClick to Change Node Color\r\n\t\t\t<SwatchesPicker onChangeComplete={e=> changeVal(e)}/>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default ModalNodeColor;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { snavarsActionCreator } from '../sna_actions';\r\nimport  {SwatchesPicker} from 'react-color';\r\nimport * as d3 from 'd3';\r\n\r\nconst ModalLinkcolor = () => {\r\n\t\r\n\tconst SNAstate = useSelector((state) => state.snavars);\r\n\t//const {nodecolor, linkcolor, highlight} = SNAstate;\r\n\r\n\tconst dispatcher = useDispatch();\r\n\t\r\n\tconst changeVal = (e) => {\r\n\t\r\n\t\td3.selectAll(\".snalinks\")._groups[0].forEach(lk => {\r\n\t\t\tlk.attributes.style.value = \"stroke: \"+e.hex;\r\n\t\t})\r\n\t\r\n\t\tdispatcher(snavarsActionCreator({\r\n\t\t\t\t\t\trefresh: SNAstate.refresh,\r\n\t\t\t\t\t\tnodeColor:SNAstate.nodeColor, \r\n\t\t\t\t\t\tlinkColor:e.hex, \r\n\t\t\t\t\t\tisHighlight: SNAstate.isHighlight\r\n\t\t\t\t}))\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"modalPopup\">\r\n\t\t\tClick to Change Link Color\r\n\t\t\t<SwatchesPicker onChangeComplete={e=> changeVal(e)}/>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default ModalLinkcolor;","import * as d3 from 'd3';\r\n\r\n\r\nconst Pathfind = (links, selectednode, secondarynode, maxdepth) => {\r\n\t\r\n\t//locations of end node\r\n\tlet secondaryNodeLoc = d3.select(\"#\" + secondarynode)._groups[0]\r\n\tlet ex = secondaryNodeLoc[0].__data__.x;\r\n\tlet ey = secondaryNodeLoc[0].__data__.y;\t\r\n\r\n\t//single iteration - create list of adjacent node IDs\r\n\tconst linkloop = (id, pathIDs, endpoint) => {\r\n\t\tlet newpaths = [];\r\n\t\tlet neighborList = []; //prevent duplicate pathing\r\n\t\tlet foundAPath = false\t\r\n\t\t\r\n\t\tif(pathIDs[pathIDs.length - 1]!==endpoint) { //path hasn't ended, iterate\r\n\t\t\t\r\n\t\t\tlinks.forEach(lk => {\r\n\t\t\t\tlet trailingpath = [...pathIDs]\r\n\t\t\t\t\tif (lk.source === id & pathIDs.indexOf(lk.target)===-1 & neighborList.indexOf(lk.target)===-1){\r\n\t\t\t\t\t\ttrailingpath.push(lk.target)\r\n\t\t\t\t\t\tnewpaths.push(trailingpath)\r\n\t\t\t\t\t\tneighborList.push(lk.target)\r\n\t\t\t\t\t\tfoundAPath = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (lk.target === id & pathIDs.indexOf(lk.source)===-1 & neighborList.indexOf(lk.source)===-1){\r\n\t\t\t\t\t\ttrailingpath.push(lk.source)\r\n\t\t\t\t\t\tnewpaths.push(trailingpath)\r\n\t\t\t\t\t\tneighborList.push(lk.source)\r\n\t\t\t\t\t\tfoundAPath = true\r\n\t\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (!foundAPath){ return [pathIDs] }\r\n\t\treturn(newpaths)\r\n\t}\r\n\t\r\n\t//after iterations, trim out paths\r\n\tconst trimPath = (paths, iter) => {\r\n\t\tlet exp_paths = []\r\n\r\n\t\t\tpaths.forEach(pl => {\r\n\t\t\t\t\tif (pl.length > iter - 3){ //dead end\r\n\t\t\t\t\t\tif (pl.length >= 5 & paths.length > 100){\r\n\t\t\t\t\t\t\t//must be getting closer within last 5 steps\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tlet bx = d3.select(\"#\" + pl[pl.length-5])._groups[0][0].__data__.x;\r\n\t\t\t\t\t\t\t\tlet by = d3.select(\"#\" + pl[pl.length-5])._groups[0][0].__data__.y;\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tlet x = d3.select(\"#\" + pl[pl.length-1])._groups[0][0].__data__.x;\r\n\t\t\t\t\t\t\t\tlet y = d3.select(\"#\" + pl[pl.length-1])._groups[0][0].__data__.y;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tlet starting_dist = Math.pow(Math.pow(bx - ex,2)+Math.pow(by - ey,2),.5)\r\n\t\t\t\t\t\t\t\tlet dist = Math.pow(Math.pow(x - ex,2)+Math.pow(y - ey,2),.5)\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (dist < starting_dist){ //is closer, pass to next\r\n\t\t\t\t\t\t\t\t\texp_paths.push(pl);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\t\tconsole.log(\"Cant find\")\r\n\t\t\t\t\t\t\t\tconsole.log(pl[pl.length - 5])\r\n\t\t\t\t\t\t\t\tconsole.log(pl[pl.length - 1])\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t//other criteria (too short) - pass through\r\n\t\t\t\t\t\t\tif ( pl.length < 6 | paths.length <= 100  | pl[pl.length-1]===secondarynode) { \r\n\t\t\t\t\t\t\t\texp_paths.push(pl) \r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\t\r\n\t\t\t});\r\n\t\treturn(exp_paths)\r\n\t}\r\n\r\n\tlet path_list = [];\t\r\n\tlet foundpaths = 0\r\n\tpath_list.push(selectednode);\r\n\tpath_list = linkloop(selectednode,path_list);\r\n\t//console.log(path_list);\r\n\t\r\n\t for (let m = 0; m <= maxdepth; m++){\r\n\t\tlet newpaths = [];\r\n\t\tif (foundpaths < 15){\r\n\t\t\tpath_list = path_list.map((p,i) => {\r\n\t\t\t\t\t\t\t\t\tlet nextpaths = linkloop(p[p.length-1], p, secondarynode);\r\n\t\t\t\t\t\t\t\t\tif (nextpaths.length===1){\r\n\t\t\t\t\t\t\t\t\t\tnextpaths = nextpaths[0];\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\tif (typeof(nextpaths[0])===\"object\"){\r\n\t\t\t\t\t\t\t\t\t\tnextpaths.forEach(np => {\r\n\t\t\t\t\t\t\t\t\t\t\tnewpaths.push(np);\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tnewpaths.push(nextpaths);\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\treturn(nextpaths);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\tpath_list = newpaths;\t\r\n\t\t\tpath_list = trimPath(path_list, m)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\tpath_list.forEach(p => {\r\n\t\t\t\tif (p[p.length-1]===secondarynode){\r\n\t\t\t\t\tfoundpaths += 1\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t} \r\n\t\r\n\t//trim down on paths leading elsewhere\r\n\tlet paths = [];\r\n\tpath_list.forEach(pth => {\r\n\t\tif (pth[pth.length-1]===secondarynode){\r\n\t\t\tpaths.push(pth);\r\n\t\t}\r\n\t});\r\n\r\n\tpaths = paths.sort(function(a,b){\r\n\t\t\t\treturn a.length - b.length;\r\n\t\t\t})\r\n\t\r\n\tpaths = paths.slice(0,15)\r\n\t\r\n\tconsole.log(paths);\r\n\r\n\t\r\n\treturn(paths); \r\n\r\n};\r\n\r\nexport default Pathfind;","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {snasecondaryActionCreator, \r\n\t\tpathaddActionCreator, pathdeleteActionCreator, pathselectActionCreator} from '../sna_actions';\r\nimport Pathfind from '../functions/Pathfind';\r\nimport * as d3 from 'd3';\r\n\r\n\r\nconst ModalPathfind = () => {\r\n\t\r\n\tconst [maxDepth, setMaxDepth] = useState(10);\r\n\tconst dispatcher = useDispatch();\r\n\tconst snanodes = useSelector((state) => state.sna_nodes);\r\n\tconst snalinks = useSelector((state) => state.sna_links);\r\n\tconst snavars = useSelector((state) => state.snavars);\r\n\tconst snapaths = useSelector((state) => state.sna_paths);\r\n\t\r\n\tlet scores = [];\r\n\t\r\n\tconst DropdownChange = (e) => {\r\n\t\ttry {\r\n\t\t\tif (snavars.secondaryNode){\r\n\t\t\t\td3.select(\"#\"+snavars.secondaryNode).attr(\"fill\",\"black\")\r\n\t\t\t}\r\n\t\t\tlet val = snanodes[e.target.selectedIndex - 1];\r\n\t\t\tdispatcher(snasecondaryActionCreator({secondaryNode: val['id']}));\r\n\t\t\td3.select(\"#\"+val['id']).attr('fill','lightgreen');\r\n\t\t\r\n\t\t} catch(err){ console.log(\"Node does not exist\")}\r\n\t\t\r\n\t}\r\n\r\n\t//\r\n\tconst SubmitPaths = () => {\r\n\t\tif (snavars.selectedNode!==\"\" & snavars.secondaryNode!==\"\"){\r\n\t\t\tlet paths = Pathfind(snalinks,snavars.selectedNode, snavars.secondaryNode, maxDepth);\r\n\t\t\t\r\n\t\t\tdispatcher(pathdeleteActionCreator({}));\r\n\t\t\tpaths.forEach((p,i) => {\r\n\t\t\t\tdispatcher(pathaddActionCreator({path: p}));\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\td3.selectAll(\".snalinks\")._groups[0].forEach(dlk => {\t\r\n\t\t\t\tdlk.style.stroke = snavars.linkColor; //reset color\r\n\t\t\t})\r\n\r\n\t\t\tScoresCreate()\r\n\t\t}\r\n\t}\r\n\r\n\t//path is selected, change link colors\r\n\tconst selectedPath = (e) => {\r\n\t\t\r\n\t\tlet pInt = e.target.attributes.value.value;\r\n\t\tdispatcher(pathselectActionCreator({pathInt: pInt}))\r\n\t\t\r\n\t\tsnapaths[pInt].path.forEach((lk,i) => {\r\n\t\t\td3.selectAll(\".snalinks\")._groups[0].forEach(dlk => {\t\r\n\t\t\t\tif (i < snapaths[pInt].path.length){\r\n\t\t\t\t\tif (lk + \"--\" + snapaths[pInt].path[i+1] === dlk.attributes.id.value |  snapaths[pInt].path[i+1] + \"--\" + lk === dlk.attributes.id.value){\r\n\t\t\t\t\t\tdlk.style.stroke = \"red\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\t\r\n\tconst ScoresCreate = () => {\r\n\t\t\t//scores\r\n\t\tlet pathscores = [];\r\n\t\tsnapaths.forEach(path => {\r\n\t\t\tlet ps = [];\r\n\t\t\tsnalinks.forEach(lk => {\r\n\t\t\t\tif (path.indexOf(lk['source'])>-1 & path.indexOf(lk['target'])>-1 & Math.abs(path.indexOf(lk['source']) - path.indexOf(lk['target']))===1){\r\n\t\t\t\t\t//found link\r\n\t\t\t\t\tps.push(lk['value1']);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tlet score = 0;\r\n\t\t\tps.forEach(p => {\r\n\t\t\t\tscore += +p\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tpathscores.push(Math.round(score/ps.length,3));\r\n\t\t})\r\n\t\tconsole.log(pathscores);\r\n\t\tscores = pathscores;\r\n\t\t\r\n\t}\r\n\t\r\n\tconst Listvalues = () => {\r\n\t\tif (snalinks.length > 1){\r\n\t\t\treturn(\t\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input type=\"number\" name=\"max_depth\" default=\"10\" min=\"1\" max=\"50\" value={maxDepth} onChange={e=>setMaxDepth(e.target.value)} />\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{/* dropdown */}\r\n\t\t\t\t\t<select id=\"modaldropdown\" onChange={e=>DropdownChange(e)} >\t\t\r\n\t\t\t\t\t\t<option key='1'  >\r\n\t\t\t\t\t\t\tSelect A Node\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tsnanodes.map((d,i) => {\r\n\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t<option key={\"b\"+i} value = {d['id']} >\r\n\t\t\t\t\t\t\t\t\t\t{d.id}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<button type=\"submit\" onClick={SubmitPaths}> Submit </button>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn(<div></div>)\r\n\t\t}\r\n\t}\r\n\t\r\n\t//add path strings to modal for selection\r\n\tconst Pathing = () => {\r\n\r\n\t\tif (snapaths.length > 0){\r\n\t\t\tif (snapaths[0].path !==\"\"){\r\n\t\t\t\tlet strings = snapaths.map((pth,i) => { \r\n\t\t\t\t\tlet str1 = \"Path \" + i + \" (\"+ pth.path.length +\") [\" + scores[i] + \"] :   \"\r\n\t\t\t\t\tpth.path.forEach((p,i) => { if (i<8){ str1 = str1 + p + \" - \" } })\r\n\t\t\t\t\treturn(str1)\r\n\t\t\t\t})\r\n\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tstrings.map((ss,i) => (\r\n\t\t\t\t\t\t\t\t<div key={i} className=\"modal_pathway\" value={i} onClick={e => selectedPath(e)}>\r\n\t\t\t\t\t\t\t\t\t{ss.substring(0,80)} ...\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\treturn(<div></div>)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn(<div>No Paths</div>)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"modalPopup\">\r\n\t\t\tSelect Secondary Node\r\n\t\t\t<br />\r\n\t\t\tPrimary Node:  {snavars.selectedNode}\r\n\t\t\t<Listvalues />\r\n\t\t\t<Pathing />\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default ModalPathfind;","import React, {useState} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport * as d3 from 'd3';\r\n\r\nconst ModalNearbyCommunity = () => {\r\n\r\n\tconst [radius, setRadius] = useState(15)\r\n\tconst snavars = useSelector((state) => state.snavars);\r\n\r\n\tconst applyNeighborhood = () => {\r\n\t\t\r\n\t\tif (snavars.selectedNode!==''){\r\n\t\t\t\r\n\t\t\tlet svg1 = d3.select(\"#\" + snavars.selectedNode)._groups[0]\r\n\t\t\tlet ax = svg1[0].__data__.x;\r\n\t\t\tlet ay = svg1[0].__data__.y;\r\n\t\t\t\r\n\t\t\tlet parentnode = d3.select(\"#node_\"+snavars.selectedNode)\r\n\t\t\tparentnode.lower();\r\n\t\t\t\r\n\t\t\tlet xx = parentnode.append(\"circle\")\r\n\t\t\t\t.attr(\"class\",\"circle2\")\r\n\t\t\t\t.attr(\"id\",\"neighborhood_circle\")\r\n\t\t\t\t.attr(\"r\", radius * 10)\r\n\t\t\t    .attr(\"fill\", \"grey\")\r\n\t\t\t    .attr(\"fill-opacity\", .3)\r\n\t\t\t\t.attr(\"cx\",ax)\r\n\t\t\t\t.attr(\"cy\",ay);\r\n\t\t\txx.lower();\r\n\t\t\t\r\n\t\t\t//nodesinrange\r\n\t\t\td3.selectAll(\".circle1\")._groups[0].forEach(node => {\r\n\t\t\t\tlet x = node.attributes.cx.value\r\n\t\t\t\tlet y = node.attributes.cy.value\r\n\t\t\t\tlet dist = Math.pow(Math.pow(x - ax,2)+Math.pow(y-ay,2),.5)\r\n\t\t\t\tif (dist < radius * 10){\r\n\t\t\t\t\tconsole.log(node.attributes.name.value + \" \" + dist)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst clearCircle = () => {\r\n\t\td3.selectAll(\"#neighborhood_circle\").remove();\r\n\t\t\t\r\n\t}\r\n\t\r\n\treturn(\r\n\t\t<div className=\"modalPopup\">\r\n\t\t\tSelected Node: {snavars.selectedNode}\r\n\t\t\t<br />\r\n\t\t\tradius: <input type=\"number\" name=\"comm_radius\" default=\"15\" min=\"1\" max=\"50\" value={radius} onChange={e=>setRadius(e.target.value)} />\r\n\t\t\t<button onClick={applyNeighborhood}>Submit </button>\r\n\t\t\t<div stlye={{height:'20px', width: '100%'}}></div>\r\n\t\t\t<button onClick={clearCircle}> Remove </button>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default ModalNearbyCommunity;","\r\nconst Clusters = (nodes, links) => {\r\n\t\r\n\tlet nodegroups = [];\r\n\tlet nodenames = [];\r\n\r\n\tnodes.forEach((nd,i) => {\r\n\t\tnodenames.push(nd['Name'])\r\n\t\tnodegroups.push(i)\r\n\t});\r\n\t\r\n\tlinks.forEach(lk => {\r\n\t\tlet s_int = nodenames.indexOf(lk['Bigram_Term1'])\r\n\t\tlet t_int = nodenames.indexOf(lk['Bigram_Term2'])\r\n\t\tlet changefromval = nodegroups[t_int]\r\n\t\t\r\n\t\tnodegroups.forEach((ng,k) => {\r\n\t\t\tif (ng === changefromval){\r\n\t\t\t\tnodegroups[k] = nodegroups[s_int];\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\tlet clusterids = [];\r\n\tnodegroups.forEach((ng,i) => {\r\n\t\tif (clusterids.indexOf(ng)===-1){\r\n\t\t\tclusterids.push(ng)\r\n\t\t}\r\n\t}); \r\n\tlet clustercounts = clusterids.map(c => 0);\r\n\tnodegroups.forEach(ng => {\r\n\t\tclustercounts[clusterids.indexOf(ng)] += 1\r\n\t});\r\n\tlet clustermap = clusterids.map((clust,c) => {\r\n\t\treturn { id: clust, count: clustercounts[c] }\r\n\t}).sort(function(a,b){\r\n\t\treturn b.count - a.count\r\n\t});\r\n\tlet clustersortedIDs = clustermap.map(c => {\r\n\t\treturn c.id\r\n\t})\r\n\t\r\n\tlet finalgroups = [];\t\r\n\tnodes.forEach((nd,i) => {\r\n\t\tlet intg = clustersortedIDs.indexOf(nodegroups[i])\r\n\t\tfinalgroups.push({id: nd.Name, cluster: intg})\r\n\t});\r\n\r\n\treturn(finalgroups)\r\n};\r\n\r\nexport default Clusters;","import { useSelector } from 'react-redux';\r\n\r\nconst ReviewItemsDropdown = (change) => {\r\n\t\r\n\tconst Reviews = useSelector((state) => state.reviewdata);\r\n\tlet Items = [];\r\n\t\t\r\n\treturn(\r\n\t\t<select id=\"dropdown_models\" onChange={change.change} >\t\t\r\n\t\t\t<option key='1'  >\r\n\t\t\t\tSelect Item Name\r\n\t\t\t</option>\r\n\t\t\t{\r\n\t\t\t\tReviews.map((d,i) => {\r\n\t\t\t\tif (Items.indexOf(d.ReviewItem)=== -1){\r\n\t\t\t\t\tItems.push(d.ReviewItem);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<option key={\"r\"+i}  value={d.ReviewItem}>\r\n\t\t\t\t\t\t\t{d.ReviewItem}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</select>\t\r\n\t)\t\t\t\r\n};\r\nexport default ReviewItemsDropdown;","\r\n\r\nconst CleanString = (str1) => {\r\n\treturn(\r\n\t\tstr1.replace( /(<([^>]+)>)/ig ,\"\").replace(\"/\",\" \").replace(/[.,/#!^():']/g,\"\").toLowerCase()\r\n\t)\r\n};\r\n\r\nexport default CleanString;\r\n","import React, {useState, ChangeEvent} from 'react';\r\nimport axios from 'axios';\r\nimport {ReviewBigram, ReviewModel_Review, ReviewModel_Bigram, Review} from \"../../type\";\r\nimport {snarefreshDataActionCreator,\r\n\t\tbigramdeleteActionCreator, bigramDataActionCreator,\r\n\t\tlinks_createActionCreator, links_deleteActionCreator,\r\n\t\tlinksfull_createActionCreator, linksfull_deleteActionCreator,\r\n\t\tnodes_createActionCreator, nodes_deleteActionCreator,\r\n\t\tnodesfull_createActionCreator, nodesfull_deleteActionCreator,\r\n\t\tsnamodelActionCreator, reviewDataActionCreator, \r\n\t\treviewdeleteActionCreator, pathdeleteActionCreator,\r\n\t\tnumclustersActionCreator, itemSelectActionCreator} from \"./sna_actions\";\r\nimport Clusters from './functions/Clusters';\r\nimport {Modal} from 'react-bootstrap'; \r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {SNA_Node, SNA_Link} from '../../type';\r\nimport ReviewItemsDropdown from \"./modals/shared items/ReviewItemsDropdown\"; \r\nimport CleanString from './functions/CleanString';\r\n\r\nconst SNAImport = () => {\r\n\r\n\t//const snavars: SNAvars = useSelector((state: any) => state.snavars);\r\n\tconst reviews: Review[] = useSelector((state: any) => state.reviewdata);\r\n\tconst snaNodes: SNA_Node[] = useSelector((state: any) => state.sna_fullnodes);\r\n\tconst snaLinks: SNA_Link[] = useSelector((state: any) => state.sna_fulllinks);\r\n\tconst [formData, setFormData] = useState({  modelname: 'tt' });\r\n\tconst [isModal0Visible,setIsModal0Visible] = useState(false);\r\n\tconst clicked0 = () => { setIsModal0Visible(true) };\r\n\tconst close0 = () => { setIsModal0Visible(false) };\r\n\r\n\tinterface ModelDataType {\r\n\t\tlabel: string;\r\n\t\tvalue: string;\r\n\t};\r\n\r\n\tconst [datamodels, setDatamodels] = useState<ModelDataType[]>([])\r\n\tconst [callData, setCallData] = useState(false)  //to prevent rerun of model import\r\n\tconst { modelname } = formData;\r\n\tconst dispatcher = useDispatch();\r\n\tconst Items: any = [];\r\n\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t}\r\n\t};\r\n\r\n\tconst DropdownModelChg = (e: ChangeEvent<EventTarget>):void => {\r\n\t\tconsole.log(e)\r\n\t\tlet dd: any = document.getElementById(\"dropdown_models\");\r\n\t\tconsole.log(dd.options[dd.selectedIndex].text);\r\n\t\tsetFormData({modelname: dd.options[dd.selectedIndex].text});\r\n\t};\r\n\r\n\tconst itemSelect = (e: ChangeEvent<HTMLSelectElement>) => {\r\n\t\tif (Items.length < 1){\r\n\t\t\treviews.map((d,i) => {\r\n\t\t\t\t\tif (Items.indexOf(d.ReviewItem)=== -1){\r\n\t\t\t\t\t\tItems.push(d.ReviewItem);\r\n\t\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\t\tdispatcher(itemSelectActionCreator({ selectedItem: Items[e.target.selectedIndex - 1] }));\r\n\t\titemFilter(Items[e.target.selectedIndex - 1]);\t\r\n\t};\r\n\t\r\n\t\r\n\tconst itemFilter = (item: string) => {\r\n\t\t//create items list - only provided with selectedindex from child node\r\n\t\tlet desc_str: string = \"\";\r\n\t\treviews.forEach(rv => {\r\n\t\t\tif (rv.ReviewItem===item){\r\n\t\t\t\tconsole.log(rv.Description);\r\n\t\t\t\tdesc_str = desc_str + String(rv.Description)\r\n\t\t\t};\r\n\t\t});\r\n\t\tdispatcher(nodes_deleteActionCreator({}));\r\n\t\tdispatcher(links_deleteActionCreator({}));\r\n\t\t\r\n\t\tlet terms = CleanString(desc_str).split(\" \");\r\n\t\tconsole.log(item);\r\n\t\tconsole.log(terms);\r\n\r\n\r\n\t\t//apply full nodes/links to sample nodes/links\r\n\t\tsnaNodes.forEach((d:SNA_Node) => {\r\n\t\t\tif (terms.indexOf(d['id'])>-1){\r\n\t\t\t\tdispatcher(nodes_createActionCreator(d));\r\n\t\t\t};\t\r\n\t\t});\r\n \t\tsnaLinks.forEach((d:SNA_Link) => {\r\n\t\t\tif ( (terms.indexOf(d['source'])>-1 && terms.indexOf(d['target'])>-1)){\r\n\t\t\t\tdispatcher(links_createActionCreator(d));\r\n\t\t\t};\r\n\t\t}); \r\n\t\t//reset 'refresh' to true\r\n\t\tdispatcher(snarefreshDataActionCreator({refreshData: true}))\r\n\t};\r\n\r\n\t//------list of models\r\n    const reviewmodelretrieve = () => {\r\n\t\tsetCallData(true); //only run once\r\n\r\n\t\t//axios call\r\n        axios.post<ReviewModel_Review[]>(`${process.env.REACT_APP_API_URL}/api/reviews/models/`, {modelname}, config)\r\n        .then(res => {\r\n\r\n\t\t\tconst dataset: ModelDataType[] = []\r\n\t\t\tres.data.forEach(d => {\r\n\t\t\t\tdataset.push({label : d.ModelKey, value: d.ModelType})\r\n\t\t\t})\r\n\t\t\tsetDatamodels(dataset);\r\n        })\r\n        .catch(err => {\r\n\t\t\tconsole.log('data error - Model');\r\n        })\r\n    };\r\n\t\r\n\r\n\t//------chosen model data\r\n    const reviews_retrieve = () => {\r\n\t\t\r\n\t\tdispatcher(snamodelActionCreator({modelName: modelname}));\r\n\t\t//need to delete previous instance\r\n\t\tdispatcher(nodesfull_deleteActionCreator({}))\r\n\t\tdispatcher(linksfull_deleteActionCreator({}))\r\n\t\tdispatcher(pathdeleteActionCreator({}))\r\n\t\tdispatcher(reviewdeleteActionCreator({}))\r\n\t\tdispatcher(bigramdeleteActionCreator({}))\r\n\t\tdispatcher(nodes_deleteActionCreator({}));\r\n\t\tdispatcher(links_deleteActionCreator({}));\r\n\t\t\t\t\r\n\t\t//axios call - reviews from particular model\r\n\t     axios.post<ReviewModel_Review[]>(`${process.env.REACT_APP_API_URL}/api/reviews/review/`, {modelname}, config)\r\n         .then(res => {\t\r\n\t\t\tconst dataset: ReviewModel_Review[] = res.data\r\n\t\t\tconst dset: Review[] = dataset[0].reviews\r\n\t\t\tdset.forEach(rv => {\r\n\t\t\t\tdispatcher(reviewDataActionCreator(rv))\r\n\t\t\t})\r\n\t\t })\r\n\t\t .catch(err => {\r\n\t\t\tconsole.log('data error - Review');\r\n         });\r\n\t\t \r\n\t\t \r\n\t\t//axios call - review bigrams for particular model\r\n\t\taxios.post<ReviewModel_Bigram[]>(`${process.env.REACT_APP_API_URL}/api/reviews/bigram/`, {modelname}, config)\r\n        .then(res => {\r\n\t\t\t\r\n\t\t\tconst dataset: ReviewModel_Bigram[] = res.data\r\n\t\t\tconst dset: ReviewBigram[] = dataset[0].bigrams\r\n\t\t\tconsole.log(dset)\r\n\t\t\tlet nn:any = getNodesfromLinks(dset,\"Bigram_Term1\",\"Bigram_Term2\")\r\n\t\t\tlet nn_clust = Clusters(nn,dset)\r\n\t\t\tlet nodenames = nn_clust.map(n => n['id']);\r\n\t\t\t\r\n\t\t\t//nodes----------\r\n\t\t\tlet clustnum:string[] = [];\r\n\t\t\tnn_clust.forEach((d:any) => {\r\n\t\t\t\t//store all nodes or just a portion\r\n\t\t\t\tlet nod: SNA_Node = {\r\n\t\t\t\t\tid: d['id'],\r\n\t\t\t\t\tname: d['id'],\r\n\t\t\t\t\tcluster: d['cluster']\r\n\t\t\t\t}\r\n\t\t\t\tdispatcher(nodesfull_createActionCreator(nod))\r\n\t\t\t\tdispatcher(nodes_createActionCreator(nod))\r\n\t\t\t\tif (clustnum.indexOf(d['cluster'])===-1){\r\n\t\t\t\t\tclustnum.push(d['cluster']);\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\tdispatcher(numclustersActionCreator({numClust: clustnum.length}))\t\t\t\r\n\t\t\t\r\n\t\t\t//links----\r\n\t\t\tdset.forEach(d => {\r\n\t\t\t    if (d['Bigram_Term1'] !== d['Bigram_Term2']){  //prevent single loops\t\t\t\t\r\n\t\t\t\t\tlet clust: number = nn_clust[nodenames.indexOf(d['Bigram_Term1'])]['cluster']\r\n\t\t\t\t\tlet lnk: SNA_Link = {\r\n\t\t\t\t\t\tmodelid: String(d[\"ModelKey\"]), \r\n\t\t\t\t\t\tid: String(d[\"id\"]), \r\n\t\t\t\t\t\tsource: d[\"Bigram_Term1\"], \r\n\t\t\t\t\t\ttarget: d[\"Bigram_Term2\"],\r\n\t\t\t\t\t\tcluster: clust,\r\n\t\t\t\t\t\tvalue1: d[\"Score\"],\r\n\t\t\t\t\t\tvalue2: d[\"Distance\"],\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdispatcher(bigramDataActionCreator(d));\t\t\t\t\r\n\t\t\t\t\t//store all links or just a portion\r\n\t\t\t\t\tdispatcher(linksfull_createActionCreator(lnk));\r\n\t\t\t\t\tdispatcher(links_createActionCreator(lnk));\r\n\t\t\t\t}\r\n\t\t\t}) \r\n\t\t\t//itemFilter()\t\r\n\t\t//reset 'refresh' to true\r\n\t\tdispatcher(snarefreshDataActionCreator({refreshData: true}))\t\t\t\r\n        })\r\n\t\t.catch(err => {\r\n\t\t\tconsole.log('data error - Bigram');\r\n        });\r\n    };\r\n\r\n\tconst DeleteModel = () => {\r\n\r\n\t\taxios.post(`${process.env.REACT_APP_API_URL}/api/reviews/delete/`, {modelname}, config)\r\n        .then(res => {\r\n\t\t\tconsole.log('deleted ' + modelname);\r\n        })\r\n        .catch(err => {\r\n\t\t\tconsole.log('data error - Model');\r\n        });\r\n\t\r\n\t};\r\n\r\n\tif (callData===false){\r\n\t\treviewmodelretrieve() //run just once on open\r\n\t};\r\n    return (\r\n       <div>\r\n\t\t\t<div onChange={e=>DropdownModelChg(e)} >\r\n\t\t\t\t<select id=\"dropdown_models\" >\t\t\r\n\t\t\t\t\t\t\t<option key='1'>\r\n\t\t\t\t\t\t\t\tSelect Model Name\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdatamodels.map((d,i) => {\r\n\t\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t\t<option key={\"b\"+i}  value={d.label}>\r\n\t\t\t\t\t\t\t\t\t\t\t{d.label}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t</select>\r\n\t\t\t\t<button type=\"submit\" onClick={reviews_retrieve}>Get Data</button>\r\n\t\t\t</div>\r\n\t\t\t<ReviewItemsDropdown change={itemSelect}/>\r\n\t\t\t<br />\r\n\r\n\t\t\t<div onClick={clicked0} style={{'border': '2px solid', 'width': '150px', 'marginTop':'3px', 'cursor':'pointer'}} > \r\n\t\t\t\tDelete selected? \r\n\t\t\t</div>\r\n\t\t\t<Modal show={isModal0Visible} size='sm' >\r\n\t\t\t\t<div style={{color: 'red'}}>\r\n\t\t\t\t\tThis will permanently delete the model from the data\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<button type=\"submit\" onClick={DeleteModel}> Delete </button>\r\n\t\t\t\t\t<button onClick={close0}> Close </button>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t   </div>\r\n    );\r\n};\r\n\r\nexport default SNAImport;\r\n\r\n//////////helper functions/////////////\r\n///get nodes from links\r\nconst getNodesfromLinks = (data: any, linkfieldName1: string, linkfieldName2: string) => {\r\n\tlet new_nodes: any = [];\r\n\tlet uniquevals: any = [];\r\n\tdata.forEach((d:any) => {\r\n\t\tif (uniquevals.indexOf(d[linkfieldName1])===-1){\r\n\t\t\tuniquevals.push(d[linkfieldName1])\r\n\t\t\tnew_nodes.push({Name: d[linkfieldName1], id: d[linkfieldName1]})\r\n\t\t}\r\n\t\tif (uniquevals.indexOf(d[linkfieldName2])===-1){\r\n\t\t\tuniquevals.push(d[linkfieldName2])\r\n\t\t\tnew_nodes.push({Name: d[linkfieldName2], id: d[linkfieldName2]})\r\n\t\t}\r\n\t})\r\n\t\r\n\treturn new_nodes;\r\n};","import SNAImport from '../SNAImport';\r\nimport {useSelector} from 'react-redux';\r\n\r\nconst ModalImport = () => {\r\n\r\n\tconst snavars = useSelector((state) => state.snavars);\t\r\n\tconst snanodes = useSelector((state) => state.sna_nodes)\r\n\tconst snanodesfull = useSelector((state) => state.sna_fullnodes)\r\n\tconst snalinks = useSelector((state) => state.sna_links)\r\n\tconst snalinksfull = useSelector((state) => state.sna_fulllinks)\r\n\tconst reviews = useSelector((state) => state.reviewdata)\r\n\r\n\treturn (\r\n       <div className=\"modalPopup\">\r\n\t\t\t<SNAImport />\r\n\t\t\t<br />\r\n\t\t\t\r\n\t\t\t<div> Model Facts: </div>\r\n\t\t\t<div> # Nodes: {snanodesfull.length} </div>\r\n\t\t\t<div> # Links: {snalinksfull.length} </div>\r\n\t\t\t<div> # Reviews: {reviews.length} </div>\r\n\t\t\t<div> # Distinct Clusters: {snavars.numClust} </div>\r\n\t\t\t<div> Filtered Nodes: {snanodes.length} </div>\r\n\t\t\t<div> Filtered Links: {snalinks.length} </div>\r\n\t\t\tItems: \r\n\r\n\t   </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ModalImport;\r\n","import React, {useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport * as d3 from 'd3';\r\nimport ReviewItemsDropdown from \"./shared items/ReviewItemsDropdown\";\r\nimport CleanString from \"../functions/CleanString\";\r\n\r\n\r\nconst ModalLinkcolor = () => {\r\n\t\r\n\tconst Reviews = useSelector((state) => state.reviewdata);\r\n\tconst SNANodes = useSelector((state) => state.sna_nodes);\r\n\tconst SNALinks = useSelector((state) => state.sna_links);\r\n\r\n\tconst [selectedItem, setSelectedItem] = useState('');\r\n\t//const [selectedReview, setSelectedReview] = useState('');\r\n\tlet Items = [];\r\n\r\n\tfunction DropdownChg(e){\r\n\t\tif (Items.length < 1){\r\n\t\t\tReviews.map((d,i) => {\r\n\t\t\t\t\tif (Items.indexOf(d.ReviewItem)=== -1){\r\n\t\t\t\t\t\tItems.push(d.ReviewItem);\r\n\t\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tsetSelectedItem(Items[e.target.selectedIndex - 1]);\r\n\r\n\t};\r\n\r\n\tconst EnumerateReviews = () => {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div style={{marginTop: \"15px\"}}> \r\n\t\t\t\t{\t\r\n\t\t\t\t\tReviews.map((rev,i) => {\r\n\t\t\t\t\t\tif (rev.ReviewItem === selectedItem){\r\n\t\t\t\t\t\tlet str1 = rev.Summary\t\r\n\t\t\t\t\t\tif (rev.Summary.length > 30){ let str1 = rev.Summary.substring(0,30)+\"...\"} \r\n\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t<div className=\"Modal_ReviewItems\" key={i} value={i} onClick={e=> ClickReview(e)} >\r\n\t\t\t\t\t\t\t\t\tReview  {i}: \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tScore: {rev.Rating} - Summary: {str1} \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tconst ClickReview = (e) => {\r\n\t\tlet xx = e.target.attributes.value.value\r\n\t\tlet terms = CleanString(Reviews[xx].Description).split(\" \");\r\n\t\tlet foundNodes = [];\r\n\t\t\r\n\t\tSNANodes.forEach(nd => {\r\n\t\t\td3.select(\"#\"+nd['id']).attr('fill','black'); //reset to black\r\n\t\t\tif (terms.indexOf(nd['id']) > -1){\r\n\t\t\t\tfoundNodes.push(nd['id']);\r\n\t\t\t}\r\n\t\t})\r\n\t\tconsole.log(foundNodes)\r\n\t\tfoundNodes.forEach(nd => {\r\n\t\t\td3.select(\"#\"+nd).attr('fill','orange').attr(\"r\",10);\r\n\t\t})\r\n\t\t\r\n\t\tlet foundLinks = [];\r\n\t\tSNALinks.forEach(lk => {\r\n\t\t\t//not directly next to, but if both are contained\r\n\t\t\tif (foundNodes.indexOf(lk['source'])>-1 & foundNodes.indexOf(lk['target'])>-1){\r\n\t\t\t\tconsole.log(\"found link - \" + lk['source'] + \"-\" + lk['target'])\r\n\t\t\t\t//is directly next to\r\n\t\t\t\tif (Math.abs(foundNodes.indexOf(lk['source']) - foundNodes.indexOf(lk['target'])) === 1){\r\n\t\t\t\t\tconsole.log(\"direct \" + lk['source'] + \"-\" + lk['target'])\r\n\t\t\t\t\tfoundLinks.push(lk);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t})\r\n\t\tconsole.log(foundLinks); \r\n\t\t\r\n\t\t//add links to diagram?\r\n\t\t//console.log(d3.select(\"#linksg\"))\r\n\t\t\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"modalPopup\">\r\n\t\t\tItems: \r\n\t\t\t<ReviewItemsDropdown change={e => DropdownChg(e)} />\r\n\r\n\t\t\t<br />\r\n\t\t\t<EnumerateReviews />\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default ModalLinkcolor;","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport * as d3 from 'd3';\r\n\r\n\r\nconst ModalScores = () => {\r\n\r\n\tconst snalinks = useSelector((state) => state.sna_links);\r\n\r\n\tconst ScoreColors = () => {\r\n\t\tsnalinks.forEach(lk => {\r\n\t\t\t\tlet line = d3.select(\"#\"+lk['source']+\"--\"+lk['target'])._groups[0][0]\r\n\r\n\t\t\t\tlet range = [4,5]\r\n\t\t\t\tlet bg1 = Math.min( ((lk.value1-range[0])/(range[1]-range[0]))*255, 255)\r\n\t\t\t\tlet bg2 = Math.max(255 - ((lk.value1 - range[0])/(range[1]-range[0]))*255, 0)\r\n\t\t\t\t\r\n\t\t\t\tline.attributes.style.value = \"stroke: rgb(0,\" + bg1 + \",\" + bg2 +\")\"\r\n\t\t})\r\n\t\t\t\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"modalPopup\">\r\n\t\t\tApply score colors to links\r\n\t\t\t<button onClick={ScoreColors} > Scores </button>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default ModalScores;","import {useState} from 'react';\r\nimport {useSelector} from 'react-redux';\r\n//import {nodes_deleteActionCreator, links_deleteActionCreator} from '../sna_actions';\r\nimport * as d3 from 'd3';\r\n\r\nconst ModalClusters = () => {\r\n\t//const snanodes = useSelector((state) => state.sna_nodes);\r\n\t//const snalinks = useSelector((state) => state.sna_links);\r\n\tconst snavars = useSelector((state) => state.snavars);\r\n\tconst [hasbeenrun, setHasbeenrun] = useState(false);\r\n\tconst [colors, setColors] = useState([]);\r\n\r\n\t//let dispatcher = useDispatch();\r\n\t\r\n\tif (hasbeenrun === false){\r\n\t\tlet colors1 = [];\r\n\t\tfor (var c=1; c<=snavars.numClust; c++){\r\n\t\t\tcolors1.push(\"rgb(\" + randomint() + \",\" + randomint() + \",\" + randomint() + \")\");\r\n\t\t}\r\n\t\tsetColors(colors1);\r\n\t\tsetHasbeenrun(true);\r\n\t}\r\n\tconst runClustColors = () => {\r\n\t\t\r\n\t\td3.selectAll(\".circle1\")._groups[0].forEach(cir => {\r\n\t\t\tcir.attributes.style.value = \"stroke: \"+ colors[cir.attributes.cluster.value];\r\n\t\t});\r\n\t\t\r\n\t};\r\n\t\r\n\tconst DropdownChange = (e) => {\r\n\r\n\t\td3.selectAll(\".circle1\")._groups[0].forEach(cir => {\r\n\t\t\tif (cir.attributes.cluster.value !== e.target.value){\r\n\t\t\t\tcir.attributes.style.value = \"stroke: #FFFFFF\";\r\n\t\t\t} else {\r\n\t\t\t\tcir.attributes.style.value = \"stroke: \" + colors[cir.attributes.cluster.value];\r\n\t\t\t}\r\n\t\t});\r\n\t\td3.selectAll(\".snalinks\")._groups[0].forEach(lnk => {\r\n\t\t\tif (lnk.attributes.cluster.value !== e.target.value){\r\n\t\t\t\tlnk.attributes.style.value = \"stroke: #FFFFFF\";\r\n\t\t\t} else {\r\n\t\t\t\tlnk.attributes.style.value = \"stroke: \" + snavars.linkColor;\r\n\t\t\t}\r\n\t\t});\t \r\n\t\t\r\n\t};\r\n\t\r\n\treturn(\r\n\t\t<div className=\"modalPopup\">\r\n\t\t\tColor Nodes by Cluster\r\n\t\t\t<button onClick={runClustColors}>Color Nodes</button>\r\n\t\t\t\r\n\t\t\t<div> Filter Cluster </div>\r\n\t\t\t<select id=\"modaldropdown\" onChange={e=>DropdownChange(e)} >\t\t\r\n\t\t\t\t\t<option key='1'  >\r\n\t\t\t\t\t\tSelect A Node\r\n\t\t\t\t\t</option>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcolors.map((d,i) => {\r\n\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t<option key={\"c\"+i} value = {i} style={{color: colors[i]}}>\r\n\t\t\t\t\t\t\t\t\tCluster {i}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t</select>\r\n\t\t\t<button >Select</button>\r\n\t\t</div>\r\n\t)\r\n};\r\nexport default ModalClusters;\r\n\r\n\r\nfunction randomint(){\r\n\treturn Math.floor(Math.random()*255);\r\n}","import {useSelector} from 'react-redux';\r\nimport * as d3 from 'd3';\r\n\r\n\r\nconst ModalNodeDropdown = () => {\r\n\t\r\n\tconst snanodes = useSelector((state) => state.sna_nodes);\r\n\t//const dispatcher = useDispatch();\r\n\t\r\n\tconst centernode = (e) => {\r\n\t\ttry {\r\n\t\tlet nodeid = snanodes[e.target.selectedIndex].id;\t\t\r\n\t\tlet nodeSelect = d3.select(\"#\"+nodeid)._groups[0][0]\r\n\t\t\r\n\t\tlet cx = +nodeSelect.attributes.cx.value  - 850/2\r\n\t\tlet cy = +nodeSelect.attributes.cx.value  - 750/2\r\n\t\td3.select(\"#g_focus\")._groups[0][0].attributes.transform.value = \"translate(\" + -cx + \",\" + -cy + \")\"\r\n\t\td3.select(\"#\"+nodeid).attr('fill','blue');\r\n\t\t} catch(err){\r\n\t\t\tconsole.log('node not found');\r\n\t\t}\r\n\t};\r\n\t\t\r\n\tconst Nodedropdown = () => {\r\n\t\t\r\n\t\tif (snanodes.length > 1){\r\n\t\t\treturn(\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<select onChange = {e => centernode(e)}>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tsnanodes.map((d,i) => {\r\n\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t<option key={\"b\"+i} value = {d['id']} >\r\n\t\t\t\t\t\t\t\t\t\t{d.id}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn(<div></div>);\r\n\t\t}\r\n\t};\r\n\t\r\n\treturn(\r\n\t\t\t<div className=\"modalPopup\">\r\n\t\t\t\t<Nodedropdown />\r\n\t\t\t</div>\r\n\t\t)\r\n};\r\n\r\nexport default ModalNodeDropdown;","import * as d3 from 'd3';\r\nimport {useEffect} from 'react';\r\nimport {useSelector, useDispatch } from 'react-redux';\r\nimport {snavarsActionCreator, snaselectActionCreator, \r\n\t\tpathdeleteActionCreator, resetvalsActionCreator} from './sna_actions';\r\n\r\nconst Network2D = () => {\r\n\t\r\n\tlet dispatcher = useDispatch();\r\n\tlet SNAstate = useSelector((state) => state.snavars);\r\n\r\n\t//before creating nodes via backend\r\n\t\tconst getNodeNames = (data, linkfieldName1, linkfieldName2) => {\r\n\t\t\tlet new_nodes = [];\r\n\t\t\tlet uniquevals = [];\r\n\t\t\tdata.forEach(d => {\r\n\t\t\t\tif (uniquevals.indexOf(d[linkfieldName1])===-1){\r\n\t\t\t\t\tuniquevals.push(d[linkfieldName1])\r\n\t\t\t\t\tnew_nodes.push({name: d[linkfieldName1], id: d[linkfieldName1], cluster: d['cluster']})\r\n\t\t\t\t};\r\n\t\t\t\tif (uniquevals.indexOf(d[linkfieldName2])===-1){\r\n\t\t\t\t\tuniquevals.push(d[linkfieldName2])\r\n\t\t\t\t\tnew_nodes.push({name: d[linkfieldName2], id: d[linkfieldName2], cluster: d['cluster']})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\treturn new_nodes;\r\n\t\t};\r\n\tlet links = useSelector((state) => state.sna_links);\r\n\tlet nodes = getNodeNames(links,\"source\",\"target\");\r\n\t//let nodes = useSelector((state) => state.sna_nodes);\r\n\t\r\n\t//code begin\r\n\tuseEffect(() => {\r\n\t\tif (SNAstate.refreshData){\r\n\t\t\tconsole.log('refresh sna');\r\n\t\t\td3.selectAll(\"#sna_svg\").remove()\r\n\r\n\t\t\tsvg = d3.select(\"#SVGContainer\")\r\n\t\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t\t.attr(\"id\",\"sna_svg\")\r\n\t\t\t\t\t\t.attr(\"width\", width)\r\n\t\t\t\t\t\t.attr(\"height\", height)\r\n\t\t\t\t\t\t.attr(\"style\", \"outline: thin solid black\");\r\n\r\n\t\t\tg = svg.append(\"g\").attr(\"id\",\"g_focus\").attr(\"transform\",\"translate(0,0)\"); //requried to prevent zoom/drag from crashing svg parent\r\n\t\t\t\r\n\t\t\tfixLinkformat();\r\n\t\t\tinitializeSimulation();\r\n\t\t\trerun();\r\n\t\t\t\r\n\t\t\t//apply defaults\r\n\t\t\tcircles.style(\"stroke\",SNAstate.nodeColor).attr(\"stroke-width\", 2)\r\n\t\t\tlink.style(\"stroke\",SNAstate.linkColor)\t\t\r\n\t\t};\r\n\t});\r\n\r\n\t//edit data to be readable by force network\r\n\tconst fixLinkformat = () => {\r\n\t\tRevlinks = [];\r\n\t\tlinks.forEach((ln) => {\r\n\t\t\tRevlinks.push({id: ln.source + \"-\" + ln.target, \r\n\t\t\t\t\t\t\tsource: ln.source, \r\n\t\t\t\t\t\t\ttarget: ln.target,\r\n\t\t\t\t\t\t\tvalue: ln.value,\r\n\t\t\t\t\t\t\tcluster: ln.cluster})\r\n\t\t})\r\n\t};\r\n\t\r\n\t// set up the simulation and event to update locations after each tick\r\n\tconst initializeSimulation = () => {\r\n\t  simulation.nodes(nodes);\r\n\t  simulation.on(\"tick\", ticked);\r\n\t};\r\n\t\r\n\t// add forces to the simulation\r\n\tconst initializeForces = () => {\r\n\t\t// add forces and associate each with a name\r\n\t\tsimulation\r\n\t\t\t.force(\"link\", d3.forceLink())\r\n\t\t\t.force(\"charge\", d3.forceManyBody())\r\n\t\t\t.force(\"collide\", d3.forceCollide())\r\n\t\t\t.force(\"center\", d3.forceCenter())\r\n\t\t\t.force(\"forceX\", d3.forceX())\r\n\t\t\t.force(\"forceY\", d3.forceY());\r\n\t\t// apply properties to each of the forces\r\n\t\tupdateForces();\r\n\t\tzoom_handler(svg);  \r\n\t};\r\n\t\r\n\t\r\n\tconst initializeNodeDisplay = () => {\r\n\t  // set the data and properties of node circles\r\n\t\tnode = g.append(\"g\")\r\n\t\t\t\t.attr(\"class\", \"nodes\")\r\n\t\t\t\t.selectAll(\"g\")\r\n\t\t\t\t.data(nodes)\r\n\t\t\t\t.enter().append(\"g\")\r\n\t\t\t\t.attr(\"name\",function(d){ return d.name })\r\n\t\t\t\t.attr(\"id\",function(d){ return \"node_\"+d.id });\r\n\t\t\t\t\r\n\t\tcircles = node.append(\"circle\")\r\n\t\t\t\t.attr(\"class\",\"circle1\")\r\n\t\t\t\t.attr(\"id\",function(d){ return d.id })\r\n\t\t\t    .attr(\"name\",function(d){ return d.name })\r\n\t\t\t    .attr(\"cluster\",function(d){ return d.cluster })\r\n\t\t\t\t.attr(\"r\", 5)\r\n\t\t\t    .attr(\"fill\", \"black\")\r\n\t\t\t    .attr(\"stroke-opacity\", 1)\r\n\t\t\t    .call(d3.drag()\r\n\t\t\t\t  .on(\"start\", dragstarted)\r\n\t\t\t\t  .on(\"drag\", dragged)\r\n\t\t\t\t  .on(\"end\", dragended))\r\n\t\t\t\t.on(\"mouseover\",function(d){\r\n\t\t\t\t\td3.select(this).transition().duration(50).attr('r',8);\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"mouseout\",function(d){\r\n\t\t\t\t\td3.select(this).transition().duration(50).attr('r',5);\r\n\t\t\t\t})\r\n\t\t\t    .on(\"click\",function(d){\r\n\t\t\t\t\tClickedNode( d3.select(this).attr(\"id\"));\t\t\t\t\t\r\n\t\t\t\t});\r\n\r\n\t  // node tooltip\r\n\t  node.append(\"title\")\r\n\t\t  .text(function(d) { return d.name; });\r\n\t  \r\n\t  // visualize the graph\r\n\t\tlabels = node.append(\"text\")\r\n\t\t\t  .text(function(d) {\r\n\t\t\t\treturn d.name;\r\n\t\t\t  })\r\n\t\t\t  .attr(\"font-size\",8)\r\n\t\t\t  .attr('x', 8)\r\n\t\t\t  .attr('y', 6);\r\n\t};\r\n\r\n\tconst ClickedNode = (selID) => {\r\n\t\t//reset variables, coloring\t\t\r\n\t\tdispatcher(pathdeleteActionCreator({}))\r\n\t\tdispatcher(resetvalsActionCreator({}))\r\n\t\tdispatcher(snaselectActionCreator({selectedNode: selID}))\r\n\t\r\n\t\td3.selectAll(\".snalinks\")._groups[0].forEach(dlk => {\t\r\n\t\t\tdlk.style.stroke = SNAstate.linkColor; //reset color\r\n\t\t})\r\n\t\td3.selectAll(\".circle1\").attr(\"fill\",\"black\").attr(\"r\",5); \r\n\t\t\r\n\t\tif (SNAstate.secondaryNode){\r\n\t\t\td3.select(\"#\" + SNAstate.secondaryNode).attr(\"fill\",\"lightgreen\");\r\n\t\t}\r\n\t\td3.select(\"#\"+selID).transition().duration(50).attr('fill','yellow');\r\n\r\n\t};\r\n\r\n\t// generate the svg objects and force simulation\r\n\tconst initializeLinkDisplay = () => {\r\n\r\n\t\t  // set the data and properties of link lines\r\n\t\t  link = g.append(\"g\")\r\n\t\t\t\t\t.attr(\"id\",\"linksg\")\r\n\t\t\t\t\t.selectAll(\"line\")\r\n\t\t\t\t\t.data(Revlinks)\r\n\t\t\t\t\t.enter().append(\"line\")\r\n\t\t\t\t\t.attr(\"class\", \"snalinks\")\r\n\t\t\t\t\t.attr(\"stroke-opacity\", 1)\r\n\t\t\t\t\t.attr(\"stroke-width\", 2)\r\n\t\t\t\t\t.attr(\"id\",function(d,i){ return d.source + \"--\" + d.target; })\r\n\t\t\t\t\t.attr(\"title\",function(d){return \"Title\"})\r\n\t\t\t\t\t.attr(\"source\",function(d){ return d.source })\r\n\t\t\t\t\t.attr(\"target\",function(d){ return d.target })\r\n\t\t\t\t\t.attr(\"cluster\",function(d){ return d.cluster })\r\n\t\t\t\t\t.attr(\"stroke-opacity\",d => {return 1- 1/(+d.value)})\r\n\t\t\t\t\t.attr(\"data-tip\",\"\")\r\n\t\t\t\t\t.attr(\"data-for\",\"registerTip\")\r\n\t\t\t\t\t.on(\"mouseover\",function(d){\r\n\t\t\t\t\t\td3.select(this).transition().duration(50).attr('stroke-width',5);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.on(\"mouseout\",function(d){\r\n\t\t\t\t\t\td3.select(this).transition().duration(20).attr('stroke-width',2);\r\n\t\t\t\t\t});\r\n\r\n\t\t  link.append(\"title\")\r\n\t\t\t  .text(function(d) { //console.log(d3.select(this)._groups[0][0].__data__); \r\n\t\t\t\t\treturn d.source + \" - \" + d.target; \r\n\t\t\t  }) \t\r\n\t\t  \r\n\t};\t\r\n\t\r\n\t// apply new force properties\r\n\tconst updateForces = () => {\r\n\t\t// get each force by name and update the properties\r\n\t\tsimulation.force(\"center\")\r\n\t\t\t.x(width * forceProperties.center.x)\r\n\t\t\t.y(height * forceProperties.center.y);\r\n\t\tsimulation.force(\"charge\")\r\n\t\t\t.strength(forceProperties.charge.strength * forceProperties.charge.enabled)\r\n\t\t\t.distanceMin(forceProperties.charge.distanceMin)\r\n\t\t\t.distanceMax(forceProperties.charge.distanceMax);\r\n\t\tsimulation.force(\"collide\")\r\n\t\t\t.strength(forceProperties.collide.strength * forceProperties.collide.enabled)\r\n\t\t\t.radius(forceProperties.collide.radius)\r\n\t\t\t.iterations(forceProperties.collide.iterations);\r\n\t\tsimulation.force(\"forceX\")\r\n\t\t\t.strength(forceProperties.forceX.strength * forceProperties.forceX.enabled)\r\n\t\t\t.x(width * forceProperties.forceX.x);\r\n\t\tsimulation.force(\"forceY\")\r\n\t\t\t.strength(forceProperties.forceY.strength * forceProperties.forceY.enabled)\r\n\t\t\t.y(height * forceProperties.forceY.y);\r\n\t\tsimulation.force(\"link\")\r\n\t\t\t.id(function(d) { return d.id;})\r\n\t\t\t.distance(forceProperties.link.distance)\r\n\t\t\t.iterations(forceProperties.link.iterations)\r\n\t\t\t.links(forceProperties.link.enabled ? Revlinks : []);\r\n\r\n\t\t// updates ignored until this is run\r\n\t\t// restarts the simulation (important if simulation has already slowed down)\r\n\t\tsimulation.alpha(1).restart();\r\n\r\n\t};\r\n\t\r\n\tconst rerun = () => {\r\n\r\n\t\tinitializeLinkDisplay();\r\n\t\tinitializeNodeDisplay();\r\n\t\tinitializeForces();\r\n\t\tupdateForces();\r\n\t\t\r\n\t\tdispatcher(snavarsActionCreator({\r\n\t\t\t\t\t\trefreshData: false,\r\n\t\t\t\t\t\tnodeColor:SNAstate.nodeColor, \r\n\t\t\t\t\t\tlinkColor:SNAstate.linkColor, \r\n\t\t\t\t\t\tisHighlight: SNAstate.isHighlight,\r\n\t\t\t\t}))\r\n\t};\t\t\r\n\t\r\n\r\n\treturn(\r\n\t\t<div id=\"SVGContainer\" ></div>\r\n\t)\r\n};\r\n\r\n/////variables///////\r\nlet width = 850,\r\n\theight = 750;\r\nlet svg;\r\nlet g; \r\nlet labels;\r\nlet Revlinks = []; //holding array for formatted link data\r\n\r\n// values for all forces\r\nvar forceProperties = {\r\n    center: {\r\n        x: 0.5,\r\n        y: 0.5\r\n    },\r\n    charge: {\r\n        enabled: true,\r\n        strength: -30,\r\n        distanceMin: 1,\r\n        distanceMax: 1000\r\n    },\r\n    collide: {\r\n        enabled: true,\r\n        strength: .7,\r\n        iterations: 1,\r\n        radius: 5\r\n    },\r\n    forceX: {\r\n        enabled: false,\r\n        strength: .1,\r\n        x: .5\r\n    },\r\n    forceY: {\r\n        enabled: false,\r\n        strength: .1,\r\n        y: .5\r\n    },\r\n    link: {\r\n        enabled: true,\r\n        distance: 30,\r\n        iterations: 1\r\n    }\r\n}\r\n\r\n// svg objects\r\nvar link, node, circles;\r\n\r\n// force simulation\r\nvar simulation = d3.forceSimulation();\r\n\r\n// update the display positions after each simulation tick\r\nconst ticked = () => {\r\n\r\n\t\tlink\r\n\t\t\t.attr(\"x1\", function(d) { return d.source.x; })\r\n\t\t\t.attr(\"y1\", function(d) { return d.source.y; })\r\n\t\t\t.attr(\"x2\", function(d) { return d.target.x; })\r\n\t\t\t.attr(\"y2\", function(d) { return d.target.y; });\r\n\r\n\t\tnode\r\n\t\t\t.attr(\"cx\", function(d) { return d.x; })\r\n\t\t\t.attr(\"cy\", function(d) { return d.y; });\r\n\r\n\t\tcircles\r\n\t\t\t.attr(\"cx\", function(d) { return d.x; })\r\n\t\t\t.attr(\"cy\", function(d) { return d.y; });\r\n\r\n\t\tlabels\r\n\t\t\t.attr(\"x\", function(d) { return d.x+4; })\r\n\t\t\t.attr(\"y\", function(d) { return d.y-3; });\r\n\r\n\t\td3.select('#alpha_value').style('flex-basis', (simulation.alpha()*100) + '%');\r\n\r\n}\r\n\r\n//////////// UI EVENTS ////////////\r\n\r\nfunction dragstarted(event,d) {\r\n  if (!event.active) simulation.alphaTarget(0.1).restart();\r\n  d.fx = d.x;\r\n  d.fy = d.y;\r\n}\r\n\r\nfunction dragged(event,d) {\r\n  d.fx = event.x;\r\n  d.fy = event.y;\r\n}\r\n\r\nfunction dragended(event,d) {\r\n  if (!event.active) simulation.alphaTarget(0.0001);\r\n  d.fx = null;\r\n  d.fy = null;\r\n}\r\n\r\n\r\n//add zoom capabilities \r\nvar zoom_handler = d3.zoom()\r\n    .on(\"zoom\", zoom_actions);\r\n\r\nfunction zoom_actions(event){\r\n    g.attr(\"transform\", event.transform)\r\n}\r\n\r\nexport default Network2D;","import {useState} from 'react';\r\nimport { ProSidebar, Menu, MenuItem, SubMenu, SidebarHeader } from 'react-pro-sidebar';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport './css/sidebar.css'\r\n//import {Link} from 'react-router-dom';\r\nimport {Modal} from 'react-bootstrap';\r\nimport ModalNodeColor from './modals/ModalNodeColor';\r\nimport ModalLinkColor from './modals/ModalLinkColor';\r\nimport ModalPathfind from './modals/ModalPathfind';\r\nimport ModalNearbyCommunity from './modals/ModalNearbyCommunity';\r\nimport ModalImport from './modals/ModalImport';\r\nimport ModalReview from './modals/ModalReview';\r\nimport ModalScores from './modals/ModalScores';\r\nimport ModalClusters from './modals/ModalClusters';\r\nimport ModalNodeDropdown from './modals/ModalNodeDropdown';\r\n\r\n\r\nconst SNASidebar = () => {\r\n\r\n\tlet [isModal0Visible,setIsModal0Visible] = useState(false);\r\n\tlet [isModal1Visible,setIsModal1Visible] = useState(false);\r\n\tlet [isModal2Visible,setIsModal2Visible] = useState(false);\r\n\tlet [isModal3Visible,setIsModal3Visible] = useState(false);\r\n\tlet [isModal4Visible,setIsModal4Visible] = useState(false);\r\n\tlet [isModal5Visible,setIsModal5Visible] = useState(false);\r\n\tlet [isModal6Visible,setIsModal6Visible] = useState(false);\r\n\tlet [isModal7Visible,setIsModal7Visible] = useState(false);\r\n\tlet [isModal8Visible,setIsModal8Visible] = useState(false);\r\n\r\n\r\n\tconst clicked0 = () => { setIsModal0Visible(true) };\r\n\tconst close0 = () => { isModal0Visible ? setIsModal0Visible(false) : setIsModal0Visible(true) };\t\r\n\t\r\n\tconst clicked1 = () => { isModal1Visible ? setIsModal1Visible(false) : setIsModal1Visible(true) };\r\n\tconst clicked2 = () => { isModal2Visible ? setIsModal2Visible(false) : setIsModal2Visible(true) };\r\n\t\r\n\tconst clicked3 = () => { setIsModal3Visible(true) };\r\n\tconst close3 = () => { setIsModal3Visible(false) };\t\t\r\n\t\r\n\tconst clicked4 = () => { setIsModal4Visible(true) };\r\n\tconst close4 = () => { setIsModal4Visible(false) };\r\n\t\r\n\tconst clicked5 = () => { setIsModal5Visible(true) };\r\n\tconst close5 = () => { setIsModal5Visible(false) };\r\n\t\r\n\tconst clicked6 = () => { setIsModal6Visible(true) };\r\n\tconst close6 = () => { setIsModal6Visible(false) };\r\n\r\n\tconst clicked7 = () => { setIsModal7Visible(true) };\r\n\tconst close7 = () => { setIsModal7Visible(false) };\r\n\t\t\r\n\tconst clicked8 = () => { setIsModal8Visible(true) };\r\n\tconst close8 = () => { setIsModal8Visible(false) };\r\n\t\t\r\n\treturn(\r\n\t\t<div className=\"sidebar\">\r\n\t\t\t<ProSidebar>\r\n\t\t\t   <SidebarHeader>\r\n\t\t\t\t\t<div style={{color: 'white', marginLeft: '20px'}}> X Options </div>\r\n\t\t\t   </SidebarHeader>\r\n\t\t\t  <Menu iconShape=\"square\">\r\n\r\n\t\t\t\t<div className=\"box\" > \r\n\t\t\t\t\t<MenuItem className=\"menu-item\"  onClick = {clicked0} >\r\n\t\t\t\t\t\tImport Data Model\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t<Modal show={isModal0Visible} >\r\n\t\t\t\t\t\t<ModalImport />\r\n\t\t\t\t\t<button onClick={close0}> Close </button>\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t</div>\r\n\t\t\t  \r\n\t\t\t\t<div className=\"box\"> \r\n\t\t\t\t\t<SubMenu title=\"Color\" >\r\n\t\t\t\t\t\t<MenuItem className=\"menu-item\" onClick = {clicked1}>\r\n\t\t\t\t\t\t\tNode Color\r\n\t\t\t\t\t\t\t<Modal show={isModal1Visible} >\r\n\t\t\t\t\t\t\t\t<ModalNodeColor />\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<MenuItem className=\"menu-item\" onClick = {clicked2} >\r\n\t\t\t\t\t\t\tLink Color\r\n\t\t\t\t\t\t\t<Modal show={isModal2Visible}>\r\n\t\t\t\t\t\t\t\t<ModalLinkColor />\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t</SubMenu>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t{/* Selected Actions Dropdown  */}\r\n\t\t\t\t<div className=\"box\"> \r\n\t\t\t\t\t<SubMenu title=\"Selected Actions\" >\r\n\t\t\t\t\t\t<MenuItem className=\"menu-item\" onClick = {clicked3} >\r\n\t\t\t\t\t\t\tPathfinding\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t<Modal show={isModal3Visible} >\r\n\t\t\t\t\t\t\t<ModalPathfind />\r\n\t\t\t\t\t\t\t<button onClick={close3}> Close </button>\r\n\t\t\t\t\t\t</Modal>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<MenuItem className=\"menu-item\" onClick = {clicked4} >\r\n\t\t\t\t\t\t\t\tNearby Community\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t<Modal show={isModal4Visible} >\r\n\t\t\t\t\t\t\t\t<ModalNearbyCommunity />\r\n\t\t\t\t\t\t\t\t<button onClick={close4}> Close </button>\r\n\t\t\t\t\t\t</Modal>\t\r\n\r\n\t\t\t\t\t\t<MenuItem className=\"menu-item\" onClick = {clicked8} >\r\n\t\t\t\t\t\t\t\tFind Node\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t<Modal show={isModal8Visible} >\r\n\t\t\t\t\t\t\t\t<ModalNodeDropdown />\r\n\t\t\t\t\t\t\t\t<button onClick={close8}> Close </button>\r\n\t\t\t\t\t\t</Modal>\t\t\t\t  \r\n\t\t\t\t\t</SubMenu>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"box\"> \r\n\t\t\t\t\t<SubMenu title=\"Groupings\" >\r\n\t\t\t\t\t\t<MenuItem className=\"menu-item\" onClick = {clicked5} >\r\n\t\t\t\t\t\t\tReviews\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t<Modal show={isModal5Visible} size={'lg'}>\r\n\t\t\t\t\t\t\t<ModalReview />\r\n\t\t\t\t\t\t\t<button onClick={close5}> Close </button>\r\n\t\t\t\t\t\t</Modal>\t\r\n\t\t\t\t\t  \r\n\t\t\t\t\t    <MenuItem className=\"menu-item\" onClick = {clicked6} >\r\n\t\t\t\t\t\t\tScores\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t<Modal show={isModal6Visible} size={'md'}>\r\n\t\t\t\t\t\t\t<ModalScores />\r\n\t\t\t\t\t\t\t<button onClick={close6}> Close </button>\r\n\t\t\t\t\t\t</Modal>\t\r\n\r\n\t\t\t\t\t    <MenuItem className=\"menu-item\" onClick = {clicked7} >\r\n\t\t\t\t\t\t\tClusters\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t<Modal show={isModal7Visible} size={'md'}>\r\n\t\t\t\t\t\t\t<ModalClusters />\r\n\t\t\t\t\t\t\t<button onClick={close7}> Close </button>\r\n\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t</SubMenu>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t  </Menu>\r\n\t\t\t  \t\r\n\t\t\t</ProSidebar>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default SNASidebar;","import React from 'react';\r\nimport SNASidebar from \"./SNAsidebar\";\r\nimport Network2D from \"./Network2D\";\r\nimport {useSelector } from 'react-redux';\r\nimport Navbar from '../../hocs/Navbar';\r\n\r\nimport './css/snaCSS.css';\r\n\r\nconst SNABase = () => {\r\n\t\r\n\t//need tsx notation\r\n\tlet SNAstate = useSelector((state: any) => state.snavars);\r\n\r\n    return (\r\n\t\t\r\n\t<div>\t\r\n\t\t<Navbar />\r\n       <div id=\"networkpage\">\r\n\r\n\t\t\t<SNASidebar />\r\n\t\t\t\t<div className=\"importbar\"> \r\n\t\t\t\t\t<h2>Social Network Analysis: {SNAstate.modelName} </h2> \r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t<Network2D />\r\n\t   </div>\r\n\t   </div>\r\n    );\r\n};\r\n\r\n\r\nexport default SNABase;\r\n","import React from 'react';\nimport  {BrowserRouter, Route, Switch } from 'react-router-dom';\n\n//import Layout from './hocs/Layout'\nimport Home from './pages/home';\nimport Dashboard_Home from './pages/dashboard/Dashboard_Home';\nimport Login from './pages/login';\nimport ToolkitApp from './ToolkitApp';\nimport DataImport from './pages/data/DataImport';\nimport ReviewImport from './pages/data/ReviewImport';\nimport ReviewUpload from './pages/sna/data/ReviewUpload.js';\nimport DataUpload from './pages/data/DataUpload.js';\nimport SNABase from './pages/sna/SNABase';\n\n\n/*import Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Activate from './pages/Activate';\nimport ResetPassword from './pages/ResetPassword';\nimport ResetPasswordConfirm from './pages/ResetPasswordConfirm';\n */\n//import ErrorBoundary from './errorboundary';\n\n\nfunction App() {\n  return (\n\t\t<BrowserRouter >\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/home' component={Home}/>\n\t\t\t\t\t<Route exact path='/toolkit' component={ToolkitApp}/>\n\t\t\t\t\t<Route exact path='/data' component={DataImport}/>\n\t\t\t\t\t<Route exact path='/login' component={Login}/>\n\t\t\t\t\t<Route exact path='/review' component={ReviewImport}/>\n\t\t\t\t\t<Route exact path='/sna' component={SNABase}/>\n\t\t\t\t\t<Route exact path='/dashboard' component={Dashboard_Home}/>\n\t\t\t\t\t<Route exact path='/reviewupload' component={ReviewUpload}/>\n\t\t\t\t\t<Route exact path='/dataupload' component={DataUpload}/>\n\t\t\t\t\t\n\t\t\t\t</Switch>\n\t\t</BrowserRouter>\n  );\n}\n\nexport default App;\n\n\n/* \n\t\t\t\t\t<Route exact path='/login' component={Login}/>\n\t\t\t\t\t<Route exact path='/signup' component={Signup}/>\n\t\t\t\t\t<Route exact path='/reset-password' component={ResetPassword}/>\n\t\t\t\t\t<Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm}/>\n\t\t\t\t\t<Route exact path='/activate/:uid/:token' component={Activate}/> */","import {todoSlice, selectedTodoSlice, counterSlice} from './redux-toolkit'\r\nimport {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\r\n//import {logger} from 'redux-logger';\r\nimport {userSlice} from './auth/user_actions'\r\nimport {empdataSlice} from './pages/data/data_actions'\r\nimport {snavarsSlice, reviewDataSlice, bigramDataSlice, \r\n\t\tlinksSlice, nodesSlice, linksFullSlice, nodesFullSlice, pathSlice} from './pages/sna/sna_actions'\r\n\r\n\r\n\r\n//combines reducers - toolkit will understand object\r\nconst reducer = {\r\n\ttodos: todoSlice.reducer,\r\n\tselectedTodo: selectedTodoSlice.reducer,\r\n\tcounter: counterSlice.reducer,\r\n\tuser: userSlice.reducer,\r\n\tempdata: empdataSlice.reducer,\r\n\treviewdata: reviewDataSlice.reducer,\r\n\tbigramdata: bigramDataSlice.reducer,\r\n\tsnavars: snavarsSlice.reducer,\r\n\tsna_nodes: nodesSlice.reducer,\r\n\tsna_fullnodes: nodesFullSlice.reducer,\r\n\tsna_links: linksSlice.reducer,\r\n\tsna_fulllinks: linksFullSlice.reducer,\r\n\tsna_paths: pathSlice.reducer,\r\n};\r\n\r\n\r\n//store: comes with redux-thunk & devtools\r\nexport default configureStore({\r\n\treducer,\r\n\tmiddleware: [...getDefaultMiddleware(), \r\n\t\t\t\t//logger\r\n\t\t\t\t]\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n\t  <React.StrictMode>\n\t\t<App />\n\t  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}