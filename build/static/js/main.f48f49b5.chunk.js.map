{"version":3,"sources":["hocs/Navbar.tsx","pages/home.tsx","pages/dashboard/Dashboard_Home.tsx","auth/user_actions.tsx","pages/login.tsx","redux-toolkit.tsx","ToolkitApp.tsx","pages/data/data_actions.tsx","pages/data/DataImport.tsx","pages/data/DataUpload.js","pages/sna/sna_actions.tsx","pages/sna/modals/ModalNodeColor.js","pages/sna/modals/ModalLinkColor.js","pages/sna/functions/Pathfind.js","pages/sna/modals/ModalPathfind.js","pages/sna/modals/ModalNearbyCommunity.js","pages/data/Reviews/reviews_actions.tsx","pages/sna/modals/shared items/ReviewItemsDropdown.js","pages/sna/functions/CleanString.js","pages/data/Reviews/ReviewImport.tsx","pages/sna/functions/Clusters.js","pages/data/Reviews/ReviewBigramsImport.tsx","pages/sna/SNAImport.tsx","pages/sna/modals/ModalImport.js","pages/sna/modals/ModalReview.js","pages/sna/modals/ModalScores.js","pages/sna/modals/ModalClusters.js","pages/sna/modals/ModalNodeDropdown.js","pages/sna/Network2D.js","pages/sna/SNAsidebar.js","pages/sna/SNABase.tsx","pages/data/Reviews/DeleteModel.js","pages/data/Reviews/ReviewModelSelector.tsx","pages/data/Reviews/ReviewUpload.js","pages/data/Reviews/ReviewExplorer.tsx","hocs/d3/BarchartTest.js","pages/data/Reviews/functions/DescStringParse.js","pages/data/Reviews/ReviewAnalyze.tsx","App.tsx","store.tsx","index.tsx"],"names":["Navbar","useState","isAuthenticated","linkstyle","logout","className","style","type","id","to","onClick","Home","Dashboard_Home","userSlice","createSlice","name","initialState","email","password","reducers","login","state","payload","loginActionCreator","actions","Login","dispatcher","useDispatch","formData","setFormData","onChange","e","target","value","loginauth","body","JSON","stringify","res","axios","post","process","headers","console","log","err","onSubmit","preventDefault","placeholder","required","minLength","todoSlice","desc","isComplete","edit","todoToEdit","find","todo","toggle","remove","index","findIndex","splice","create","reducer","push","prepare","uuid","selectedTodoSlice","select","counterSlice","extraReducers","createTodoActionCreator","editTodoActionCreator","toggleTodoActionCreator","deleteTodoActionCreator","selectTodoActionCreator","ToolkitApp","todos","useSelector","selectedTodoId","selectedTodo","editedCount","counter","newTodoInput","setNewTodoInput","editTodoInput","setEditTodoInput","isEditMode","setIsEditMode","editInput","useRef","useEffect","current","focus","handleCancelUpdate","length","htmlFor","map","i","todoId","ref","empdataSlice","empid","location","load_data","empdataActionCreator","DataImport","empData","setempData","then","data","catch","config","localStorage","getItem","get","DataUpload","dataFile","setDataFile","event","dataArray","FormData","append","files","linksInit","modelid","source","cluster","value1","value2","nodesInit","snavarsSlice","modelName","refreshData","refreshVars","nodeColor","linkColor","isHighlight","selectedNode","secondaryNode","pathInt","numClust","selectedItem","model_select","load_vars","refresh_data","refresh_var","selected_var","secondary_sel_var","path_select","reset_values","num_cluster","item_select","bigramDataSlice","ModelKey","Bigram_Term1","Bigram_Term2","Score","Distance","Count_Term1","Count_Term2","Term_Num1","Term_Num2","bigramdata","bigram_delete","linksSlice","createlinks","deletelinks","linksFullSlice","createlinksfull","deletelinksfull","nodesFullSlice","createnodesfull","deletenodesfull","nodesSlice","createnodes","deletenodes","pathSlice","path","add_path","delete_path","snamodelActionCreator","snavarsActionCreator","snarefreshDataActionCreator","snaselectActionCreator","snasecondaryActionCreator","pathselectActionCreator","resetvalsActionCreator","numclustersActionCreator","itemSelectActionCreator","bigramDataActionCreator","bigramdeleteActionCreator","links_createActionCreator","links_deleteActionCreator","nodes_createActionCreator","nodes_deleteActionCreator","linksfull_createActionCreator","linksfull_deleteActionCreator","nodesfull_createActionCreator","nodesfull_deleteActionCreator","pathaddActionCreator","pathdeleteActionCreator","ModalNodeColor","SNAstate","snavars","onChangeComplete","d3","_groups","forEach","cir","attributes","hex","refresh","changeVal","ModalLinkcolor","lk","Pathfind","links","selectednode","secondarynode","maxdepth","secondaryNodeLoc","ex","__data__","x","ey","y","linkloop","pathIDs","endpoint","newpaths","neighborList","foundAPath","trailingpath","indexOf","path_list","foundpaths","m","p","nextpaths","np","paths","iter","exp_paths","pl","bx","by","starting_dist","Math","pow","trimPath","pth","sort","a","b","slice","ModalPathfind","maxDepth","setMaxDepth","snanodes","sna_nodes","snalinks","sna_links","snapaths","sna_paths","scores","SubmitPaths","dlk","stroke","ScoresCreate","pathscores","ps","abs","score","round","Listvalues","default","min","max","attr","val","selectedIndex","DropdownChange","d","Pathing","strings","str1","ss","pInt","selectedPath","substring","ModalNearbyCommunity","radius","setRadius","svg1","ax","ay","parentnode","lower","node","cx","cy","dist","stlye","height","width","converttoNumArry","arr1","replaceAll","split","t","converttoStrArry","reviewDataSlice","ReviewItem","Summary","Description","Rating","Topic","TopicScore","Rating_Estimate","SentimentTrend","WordTrend","reviewdata","review_delete","reviewDataActionCreator","reviewdeleteActionCreator","ReviewItemsDropdown","change","Reviews","Items","CleanString","replace","toLowerCase","ImportReviews","modelname","dset","reviews","rv","Clusters","nodes","nodegroups","nodenames","nd","s_int","t_int","changefromval","ng","k","clusterids","clustercounts","c","clustersortedIDs","clust","count","finalgroups","intg","Name","ReviewBigramsImport","bigrams","nn","getNodesfromLinks","nn_clust","n","clustnum","nod","lnk","String","linkfieldName1","linkfieldName2","new_nodes","uniquevals","SNAImport","snaNodes","sna_fullnodes","snaLinks","sna_fulllinks","isModal0Visible","setIsModal0Visible","datamodels","setDatamodels","callData","setCallData","itemFilter","item","desc_str","terms","dataset","label","ModelType","dd","document","getElementById","options","text","DropdownModelChg","ReviewImport","Modal","show","size","color","ModalImport","snanodesfull","snalinksfull","SNANodes","SNALinks","setSelectedItem","EnumerateReviews","marginTop","rev","ClickReview","xx","foundNodes","foundLinks","DropdownChg","ModalScores","line","range","bg1","bg2","ModalClusters","hasbeenrun","setHasbeenrun","colors","setColors","colors1","randomint","floor","random","svg","g","labels","link","circles","ModalNodeDropdown","Nodedropdown","nodeid","nodeSelect","transform","centernode","SNASidebar","isModal1Visible","setIsModal1Visible","isModal2Visible","setIsModal2Visible","isModal3Visible","setIsModal3Visible","isModal4Visible","setIsModal4Visible","isModal5Visible","setIsModal5Visible","isModal6Visible","setIsModal6Visible","isModal7Visible","setIsModal7Visible","isModal8Visible","setIsModal8Visible","marginLeft","iconShape","title","ModalLinkColor","ModalReview","Revlinks","forceProperties","center","charge","enabled","strength","distanceMin","distanceMax","collide","iterations","forceX","forceY","distance","simulation","ticked","alpha","dragstarted","active","alphaTarget","restart","fx","fy","dragged","dragended","zoom_handler","on","Network2D","getNodeNames","fixLinkformat","initializeSimulation","rerun","ln","ClickedNode","selID","transition","duration","updateForces","force","selectAll","enter","this","call","SNABase","DeleteModel","props","alertMsg","setAlertMsg","defaultStyle","backgroundColor","importedReviews","setimportedReviews","importedBigrams","setimportedBigrams","buttonRstyle","setButtonRstyle","buttonBstyle","setButtonBstyle","setModelname","reviewFile","setReviewFile","ReviewExplorer","ReviewModelSelector","ReviewUpload","BarchartTest","pars","bardata","margin","padding","domain","mina","bandwidth","DescStringParse","cmax","cmin","review","transformvals","wrd","onMouseOver","mouseoverWord","ReviewAnalyze","selectedReview","setSelectedReview","isclicked_I","setIsclicked_I","isclicked_R","setIsclicked_R","senttrend","setSenttrend","SingleItemReviews","rstyle","GroupItems","ClickedItem","GroupReviews","Number","trendvals","sen","ClickedReview","ReviewPage","App","exact","component","user","empdata","configureStore","middleware","getDefaultMiddleware","ReactDOM","render","store","StrictMode"],"mappings":"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","file":"static/js/main.f48f49b5.chunk.js","sourcesContent":["import React, {useState, Fragment } from 'react';\r\n//import Navbar from './Navbar.js';\r\n//import { connect } from 'react-redux';\r\n//import {userSlice} from '../auth/user_actions';\r\nimport {Link} from 'react-router-dom'\r\nimport \"./css/Navbar.css\"\r\n\r\nconst Navbar = () => {\r\n\t\r\n\tlet [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n\t\r\n\tlet navbarstyle = {'backgroundColor': '#444444'}\r\n\tlet linkstyle = {'color': '#aaffff'}\r\n\t\r\n\tconst guestLinks = () => {\r\n\t\treturn(\r\n\t\t\t<Fragment>\r\n\t\t\t\t<li className=\"nav-item\" >\r\n\t\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/login\" style={linkstyle} >Log In</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className=\"nav-item\" >\r\n\t\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/signup\" style={linkstyle} >Sign Up</Link>\r\n\t\t\t\t</li>\t\r\n\t\t\t</Fragment>\r\n\t\t)\t\t\r\n\t};\r\n\t\r\n\tconst authLinks = () => {\r\n\t\treturn(\r\n\t\t\t<li className=\"nav-item\" >\r\n\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/Logout\" onClick={logout}>Logout</Link>\r\n\t\t\t</li>\t\r\n\t\t)\r\n\t};\r\n\t\r\n \tconst logout = () => {\r\n\t\r\n\t}; \r\n\r\n\treturn(\r\n\t\t<nav className=\"navbar navbar-expand-sm navbar-light bg-light0\" style={navbarstyle}>\r\n\t\t  <div className=\"container-fluid\">\r\n\t\t\t<button\r\n\t\t\t  className=\"navbar-toggler\"\r\n\t\t\t  type=\"button\"\r\n\t\t\t  data-mdb-toggle=\"collapse\"\r\n\t\t\t  data-mdb-target=\"#navbarNav\"\r\n\t\t\t  aria-controls=\"navbarNav\"\r\n\t\t\t  aria-expanded=\"false\"\r\n\t\t\t  aria-label=\"Toggle navigation\"\r\n\t\t\t>\r\n\t\t\t  <i className=\"fas fa-bars\"></i>\r\n\t\t\t</button>\r\n\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n\t\t\t  <ul className=\"navbar-nav\">\r\n\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\" style={linkstyle}>Home</Link>\r\n\t\t\t\t</li>\t\r\n\r\n\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/reviews\" style={linkstyle}>Reviews</Link>\r\n\t\t\t\t</li>\t\r\n\t\t\t\t\r\n\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/dashboard\" style={linkstyle}>Dashboard</Link>\r\n\t\t\t\t</li>\t\t\t\r\n\r\n\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/sna\" style={linkstyle}>Network Graph</Link>\r\n\t\t\t\t</li>\t\t\r\n\r\n\t\t\t\t{isAuthenticated ? authLinks(): guestLinks()}\r\n\t\t\t\t\r\n\t\t\t  </ul>\r\n\t\t\t</div>\r\n\t\t  </div>\r\n\t\t</nav>\r\n\t)\r\n};\r\n\r\nexport default(Navbar);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n//import axios from 'axios';\r\nimport Navbar from '../hocs/Navbar';\r\nimport \"./css/home.css\"\r\n\r\nconst Home = () => {\r\n\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<Navbar />\r\n\t\t\t<div className=\"wrapper\">\r\n\r\n\t\t\t\t<div className=\"home-body\">\r\n\t\t\t\t\t<h1 className='display-4'>True header</h1>\r\n\t\t\t\t\t<p className='lead'>Paragraph header</p>\r\n\t\t\t\t\t<hr className='my-4'/>\r\n\t\t\t\t\t<p>paragraph simple</p>\r\n\t\t\t\t\r\n\t\t\t\t\t<Link className='btn btn-primary btn-lg' to='/login'>Log In</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport Navbar from '../../hocs/Navbar';\r\nimport \"./css/dashboard.css\";\r\n\r\nconst Dashboard_Home = () => {\r\n\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<Navbar />\r\n\t\t\t<div className=\"grid-container\">\r\n\t\t\t  <header className=\"header\"></header>\r\n\t\t\t <aside className=\"sidenav\">\r\n\t\t\t  <ul className=\"sidenav__list\">\r\n\t\t\t\t<li className=\"sidenav__list-item\">Item One</li>\r\n\t\t\t\t<li className=\"sidenav__list-item\">Item Two</li>\r\n\t\t\t\t<li className=\"sidenav__list-item\">Item Three</li>\r\n\t\t\t\t<li className=\"sidenav__list-item\">Item Four</li>\r\n\t\t\t\t<li className=\"sidenav__list-item\">Item Five</li>\r\n\t\t\t  </ul>\r\n\t\t\t </aside>\r\n\t\t\t <main className=\"main\">\r\n\t\t\t\t<div className=\"main-header\">\r\n\t\t\t\t  <div className=\"main-header__heading\">Hello User</div>\r\n\t\t\t\t  <div className=\"main-header__updates\">Recent Items</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"main-overview\">\r\n\t\t\t\t  <div className=\"overviewcard\">\r\n\t\t\t\t\t<div className=\"overviewcard__icon\">Overview</div>\r\n\t\t\t\t\t<div className=\"overviewcard__info\">Card</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"overviewcard\">\r\n\t\t\t\t\t<div className=\"overviewcard__icon\">Overview</div>\r\n\t\t\t\t\t<div className=\"overviewcard__info\">Card</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"overviewcard\">\r\n\t\t\t\t\t<div className=\"overviewcard__icon\">Overview</div>\r\n\t\t\t\t\t<div className=\"overviewcard__info\">Card</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t  <div className=\"overviewcard\">\r\n\t\t\t\t\t<div className=\"overviewcard__icon\">Overview</div>\r\n\t\t\t\t\t<div className=\"overviewcard__info\">Card</div>\r\n\t\t\t\t  </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t</main>\r\n\t\t\t  <footer className=\"footer\"></footer>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t)\r\n\r\n};\r\n\r\nexport default Dashboard_Home;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport {User} from \"../type\";\r\n\r\n\r\n/////////\r\nconst userStateInit: User = {\r\n\t\temail: '',\r\n\t\tpassword: ''\r\n};\r\n\r\n\r\n\r\nexport const userSlice = createSlice({\r\n\tname: 'user_action',\r\n\tinitialState: userStateInit,\r\n\treducers: {\r\n\t\r\n\t\tlogin: (state, {payload}: PayloadAction<{email: string, password: string}>) => {\r\n\t\t\t//uses primitive values (null, string, int, etc.), so can't mutate state directly\r\n\t\t\t//just return completely new state\r\n\t\t\treturn {\r\n\t\t\t\temail: payload.email,\r\n\t\t\t\tpassword: payload.password\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\n//manually export action creators\r\nexport const {\r\n\tlogin: loginActionCreator,\r\n} = userSlice.actions;","import React, { FormEvent, ChangeEvent, useState } from 'react';\r\n//import { Link } from 'react-router-dom';\r\nimport {useDispatch} from 'react-redux';\r\n//import {useSelector} from 'react-redux';\r\nimport { loginActionCreator } from '../auth/user_actions';\r\n//import { State } from \"../type\";\r\nimport axios from 'axios';\r\n\r\nconst Login = () => {\r\n\r\n\t//react-redux functions\r\n\tconst dispatcher = useDispatch();\r\n\t//const user = useSelector((state: State) => state.user );\r\n\t\r\n\t\r\n\tconst [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\t\r\n    const { email, password } = formData;\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>):void => {\r\n\t\tsetFormData({ ...formData, [e.target.name]: e.target.value });\r\n\t};\r\n    \r\n\tconst onSubmit = (e: FormEvent<HTMLFormElement>):void => {\r\n        e.preventDefault();\r\n        dispatcher(loginActionCreator({email:email, password: password}));\r\n\r\n\t\tloginauth();\r\n    };\r\n\t\r\n\tconst loginauth = () => {\t\r\n\t//authentication - move to separate file\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t}\r\n\t\t};\r\n\t\tconst body = JSON.stringify({ email, password });\r\n\t\ttry {\r\n\t\t\tconst res =  axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create`, body, config);\r\n\t\t\tconsole.log(res)\r\n\t\t} catch (err){\r\n\t\t\t\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t\r\n\t\r\n\treturn(\r\n\t\t<div>\r\n\t\t  <form className='auth-form' onSubmit={e => onSubmit(e)}>\r\n                <div className='auth__form__group'>\r\n                    <input \r\n                        className='auth__form__input'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        name='email' \r\n\t\t\t\t\t\tvalue={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className='auth-form'>\r\n                    <input\r\n                        className='auth__form__input'\r\n                        type='password'\r\n                        placeholder='Password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={e => onChange(e)}\r\n                        minLength={6}\r\n                    />\r\n                </div>\r\n                <button className='auth__form__button'>Login</button>\r\n            </form>\r\n\t\t</div>\r\n\t)\r\n\t\r\n};\r\n\r\nexport default Login;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport {Todo} from \"./type\";\r\nimport { v1 as uuid } from 'uuid';\r\n\r\n\r\n/////////\r\nconst todoInitialState: Todo[] = [\r\n\t{\r\n\t\tid: '1',\r\n\t\tdesc: \"Eaich treoi\",\r\n\t\tisComplete: true\r\n\t},\r\n\t{\r\n\t\tid: '2',\r\n\t\tdesc: \"etijasfni\",\r\n\t\tisComplete: false\r\n\t}\r\n];\r\n\r\n\r\nexport const todoSlice = createSlice({\r\n\tname: 'todos_action',\r\n\tinitialState: todoInitialState,\r\n\treducers: {\r\n\t\r\n\t\t//itemname: function or object\r\n\t\t//function version\r\n\t\tedit: (state, {payload}: PayloadAction<{id: string, desc: string}>) => {\r\n\t\t\tconst todoToEdit = state.find(todo => todo.id === payload.id);\r\n\t\t\tif (todoToEdit){\r\n\t\t\t\t//immer import allows mutation of state (redux toolkit only)\r\n\t\t\t\ttodoToEdit.desc = payload.desc;\r\n\t\t\t}\r\n\t\t},\r\n\t\ttoggle: (state, {payload}: PayloadAction<{id: string, isComplete: boolean }>) => {\r\n\t\t\tconst todoToEdit = state.find(todo => todo.id === payload.id);\r\n\t\t\tif (todoToEdit){\r\n\t\t\t\t//immer import allows mutation of state (redux toolkit only)\r\n\t\t\t\ttodoToEdit.isComplete = payload.isComplete;\r\n\t\t\t}\t\t\r\n\t\t},\r\n\t\tremove: (state, {payload}: PayloadAction<{id: string}>) => {\r\n\t\t\tconst index = state.findIndex(todo => todo.id === payload.id);\r\n\t\t\tif (index !== -1){\r\n\t\t\t\t//immer import allows mutation of state (redux toolkit only)\r\n\t\t\t\tstate.splice(index,1);\r\n\t\t\t}\t\t\t\r\n\t\t},\r\n\t\t//object version\r\n\t\tcreate: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<{id: string, desc: string, isComplete: boolean}>) => {\r\n\t\t\t\tstate.push() //uses immer mutability\r\n\t\t\t},\r\n\t\t\tprepare: ({desc}:{ desc: string }) => ({ //prepares payload allowing custom functions\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tid: uuid(),\r\n\t\t\t\t\tdesc: desc,\r\n\t\t\t\t\tisComplete: false\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\t//default case not necessary\r\n\t}\r\n});\r\n\r\n\r\nexport const selectedTodoSlice = createSlice({\r\n\tname: 'selectedTodo_action',\r\n\tinitialState: null as string | null,\r\n\treducers: {\r\n\t\tselect: (state, {payload}: PayloadAction<{id: string}>) => {\r\n\t\t\t//uses primitive values (null, string, int, etc.), so can't mutate state directly\r\n\t\t\t//just return completely new state\r\n\t\t\treturn payload.id\r\n\t\t}\r\n\t}\r\n});\r\n\r\n//\r\nexport const counterSlice = createSlice({\r\n\tname: 'counter_action',\r\n\tinitialState: 0,\r\n\treducers: {},\r\n\t//to accept other state's actions\r\n\textraReducers: {\r\n\t\t[todoSlice.actions.create.type]: state => state + 1,\r\n\t\t[todoSlice.actions.edit.type]: state => state + 1,\r\n\t\t[todoSlice.actions.remove.type]: state => state + 1,\r\n\t\t[todoSlice.actions.toggle.type]: state => state + 1,\r\n\t}\r\n});\r\n\r\n//manually export action creators\r\nexport const {\r\n\tcreate: createTodoActionCreator,\r\n\tedit: editTodoActionCreator,\r\n\ttoggle: toggleTodoActionCreator,\r\n\tremove: deleteTodoActionCreator,\r\n} = todoSlice.actions;\r\nexport const {\r\n\tselect: selectTodoActionCreator,\r\n} = selectedTodoSlice.actions;\r\n","import React, {\r\n  ChangeEvent,\r\n  FormEvent,\r\n  useEffect,\r\n  useRef,\r\n  useState\r\n} from \"react\";\r\nimport { State } from \"./type\";\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {createTodoActionCreator, \r\n\t\teditTodoActionCreator, \r\n\t\ttoggleTodoActionCreator, \r\n\t\tdeleteTodoActionCreator, \r\n\t\tselectTodoActionCreator} from './redux-toolkit';\r\n\r\n\r\nconst ToolkitApp = function() {\r\n\r\n\t//react-redux functions\r\n\tconst dispatcher = useDispatch();\r\n\tconst todos = useSelector((state: State) => state.todos );\r\n\tconst selectedTodoId = useSelector((state: State) => state.selectedTodo );\r\n\tconst editedCount = useSelector((state: State) => state.counter);\r\n\r\n\tconst [newTodoInput, setNewTodoInput] = useState<string>(\"\");\r\n\tconst [editTodoInput, setEditTodoInput] = useState<string>(\"\");\r\n\tconst [isEditMode, setIsEditMode] = useState<boolean>(false);\r\n\tconst editInput = useRef<HTMLInputElement>(null);\r\n\r\n\tconst selectedTodo =\r\n\t(selectedTodoId && todos.find(todo => todo.id === selectedTodoId)) || null;\r\n\t\r\n\t//event handlers\r\n\tconst handleNewInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n\t\tsetNewTodoInput(e.target.value);\r\n\t};\r\n\r\n\tconst handleEditInputChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n\t\tsetEditTodoInput(e.target.value);\r\n\t};\r\n\t\r\n\tconst handleCreateNewTodo = (e: FormEvent<HTMLFormElement>): void => {\r\n\t\te.preventDefault();\r\n\t\tif (!newTodoInput.length) return;\r\n\t\tconsole.log(newTodoInput);\r\n\t\tdispatcher(createTodoActionCreator({desc: newTodoInput}));\r\n\t\tsetNewTodoInput(\"\");\r\n\t};\r\n\r\n\tconst handleSelectTodo = (todoId: string) => (): void => {\r\n\t\tdispatcher(selectTodoActionCreator({id: todoId }));\r\n\t};\r\n\r\n\tconst handleEdit = (): void => {\r\n\t\tif (!selectedTodo) return;\r\n\t\tsetEditTodoInput(selectedTodo.desc);\r\n\t\tsetIsEditMode(true);\r\n\t};\r\n\t\r\n\r\n\tconst handleUpdate = (e: FormEvent<HTMLFormElement>): void => {\r\n\t\te.preventDefault();\r\n\t\tif (!editTodoInput.length || !selectedTodoId) { \r\n\t\t\thandleCancelUpdate() ;\r\n\t\t\treturn \r\n\t\t};\r\n\t\t\r\n\t\tdispatcher(editTodoActionCreator({id: selectedTodoId, desc: editTodoInput}));\r\n\t\t//zero out the text box after submitting\r\n\t\tsetIsEditMode(false);\r\n\t\tsetEditTodoInput(\"\");\r\n\t\t\r\n\t};\r\n\r\n\tconst handleToggle = (): void => {\r\n\t\tif (!selectedTodoId || !selectedTodo) return;\r\n\t\t\r\n\t\tdispatcher(toggleTodoActionCreator({id: selectedTodoId, isComplete: !selectedTodo.isComplete }));\r\n\t};\r\n\r\n\tconst handleDelete = (): void => {\r\n\t\tif (!selectedTodoId) return;\r\n\t\t\r\n\t\tdispatcher(deleteTodoActionCreator({id: selectedTodoId }));\r\n\t\t\r\n\t};\r\n\r\n\r\n\r\n\tuseEffect(() => {\r\n\tif (isEditMode) {\r\n\t  editInput?.current?.focus();\r\n\t}\r\n\t}, [isEditMode]);\r\n\r\n\r\n\tconst handleCancelUpdate = (\r\n\t\te?: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n\t): void => {\r\n\t\te?.preventDefault();\r\n\t\tsetIsEditMode(false);\r\n\t\tsetEditTodoInput(\"\");\r\n\t};\r\n\r\n\treturn (\r\n\t<div className=\"App1\">\r\n\t  <div className=\"App__counter\">Todos Updated Count: {editedCount}</div>\r\n\t  <div className=\"App__header\">\r\n\t\t<h1>Todo: Redux vs RTK Edition</h1>\r\n\t\t<form onSubmit={handleCreateNewTodo}>\r\n\t\t  <label htmlFor=\"new-todo\">Add new:</label>\r\n\t\t  <input\r\n\t\t\tonChange={handleNewInputChange}\r\n\t\t\tid=\"new-todo\"\r\n\t\t\tvalue={newTodoInput}\r\n\t\t  />\r\n\t\t  <button type=\"submit\">Create</button>\r\n\t\t</form>\r\n\t  </div>\r\n\t  <div className=\"App__body\">\r\n\t\t<ul className=\"App__list\">\r\n\t\t  <h2>My Todos:</h2>\r\n\t\t  {todos.map((todo, i) => (\r\n\t\t\t<li\r\n\t\t\t  className={`${todo.isComplete ? \"done\" : \"\"} ${\r\n\t\t\t\ttodo.id === selectedTodoId ? \"active\" : \"\"\r\n\t\t\t  }`}\r\n\t\t\t  key={todo.id}\r\n\t\t\t  onClick={handleSelectTodo(todo.id)}\r\n\t\t\t>\r\n\t\t\t  <span className=\"list-number\">{i + 1})</span> {todo.desc}\r\n\t\t\t</li>\r\n\t\t  ))}\r\n\t\t</ul>\r\n\t\t<div className=\"App_todo-info\">\r\n\t\t  <h2>Selected Todo:</h2>\r\n\t\t  {selectedTodo === null ? (\r\n\t\t\t<span className=\"empty-state\">No Todo Selected</span>\r\n\t\t  ) : !isEditMode ? (\r\n\t\t\t<>\r\n\t\t\t  <span\r\n\t\t\t\tclassName={`todo-desc ${\r\n\t\t\t\t  selectedTodo?.isComplete ? \"done\" : \"\"\r\n\t\t\t\t}`}\r\n\t\t\t  >\r\n\t\t\t\t{selectedTodo.desc}\r\n\t\t\t  </span>\r\n\t\t\t  <div className=\"todo-actions\">\r\n\t\t\t\t<button onClick={handleEdit}>Edit</button>\r\n\t\t\t\t<button onClick={handleToggle}>Toggle</button>\r\n\t\t\t\t<button onClick={handleDelete}>Delete</button>\r\n\t\t\t  </div>\r\n\t\t\t</>\r\n\t\t  ) : (\r\n\t\t\t<form onSubmit={handleUpdate}>\r\n\t\t\t  <label htmlFor=\"edit-todo\">Edit:</label>\r\n\t\t\t  <input\r\n\t\t\t\tref={editInput}\r\n\t\t\t\tonChange={handleEditInputChange}\r\n\t\t\t\tvalue={editTodoInput}\r\n\t\t\t  />\r\n\t\t\t  <button type=\"submit\">Update</button>\r\n\t\t\t  <button onClick={handleCancelUpdate}>Cancel</button>\r\n\t\t\t</form>\r\n\t\t  )}\r\n\t\t</div>\r\n\t  </div>\r\n\t</div>\r\n\t);\r\n};\r\n\r\nexport default ToolkitApp;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport {Emp} from \"../../type\";\r\n\r\n\r\n/////////\r\nconst empStateInit: Emp[] = [\r\n\t{\r\n\t\tname: '',\r\n\t\tempid: '',\r\n\t\tlocation: '',\r\n\t},\r\n];\r\n\r\n\r\nexport const empdataSlice = createSlice({\r\n\tname: 'empdata_action',\r\n\tinitialState: empStateInit,\r\n\treducers: {\r\n\t\r\n\t\tload_data: {\r\n\t\t\t//uses primitive values (null, string, int, etc.), so can't mutate state directly\r\n\t\t\t//just return completely new state\r\n\t\t\treducer: (state, {payload}: PayloadAction<{name: string, empid: string, location: string}>) => {\r\n\t\t\t\tstate.push() //uses immer mutability\r\n\t\t\t},\r\n\t\t\tprepare: ({name, empid, location}:{ name: string, empid: string, location: string }) => ({ //prepares payload allowing custom functions\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t\tempid: empid,\r\n\t\t\t\t\tlocation: location\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n});\r\n\r\n//manually export action creators\r\nexport const {\r\n\tload_data: empdataActionCreator,\r\n} = empdataSlice.actions;","import React, {useState, ChangeEvent} from 'react';\r\nimport axios from 'axios';\r\nimport { empdataActionCreator } from './data_actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport {Emp} from \"../../type\";\r\n \r\nconst DataImport = () => {\r\n\r\n\tconst [formData, setFormData] = useState({\r\n\t\tlocation: 'N/A',\r\n\t});\r\n\tconst { location } = formData;\r\n\tconst dispatcher = useDispatch();\r\n\tconst [empData, setempData] = useState<Emp[]>([]);\r\n\r\n\tconst handleFormChange = (e: ChangeEvent<HTMLInputElement>): void => {\r\n\t\tsetFormData({location: e.target.value});\r\n\t};\r\n\r\n\t//------using POST\r\n    const dataretrieve_post = () => {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        };\r\n\t\t//axios call\r\n        axios.post<Emp[]>(`${process.env.REACT_APP_API_URL}/api/data/datapost`, {location}, config)\r\n        .then(res => {\r\n\r\n\t\t    setempData(res.data);\r\n\t\t\tdispatcher(empdataActionCreator(empData[0]));\r\n\t\t\t\r\n\t\t\t\r\n\t\t   //const {name, empid, location} = res.data[0]\r\n\t\t  // const linedata = {name:\"\",empid:\"\",location:\"\"}\r\n\t\t   //dispatcher(empdataActionCreator(linedata));\r\n        })\r\n        .catch(err => {\r\n\t\t\tconsole.log('data error');\r\n        })\r\n    };\r\n\t\r\n\t//------using GET\r\n    const dataretrieve_get = () => {\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//axios call\r\n        axios.get<Emp[]>(`${process.env.REACT_APP_API_URL}/api/data/data`, config)\r\n        .then(res => {\r\n           console.log(res.data);\r\n\t\t   /* const {name, empid, location} = res.data.results[0]\r\n\t\t   const linedata = {name:\"\",empid:\"\",location:\"\"}\r\n\t\t   \r\n\t\t   dispatcher(empdataActionCreator(linedata)); */\r\n        })\r\n        .catch(err => {\r\n\t\t\tconsole.log('data error');\r\n        })\r\n    };\r\n\r\n    return (\r\n       <div>\r\n\t\t   Data Page\r\n\r\n\t\t\t  <label> Location </label>\r\n\t\t\t  <input\r\n\t\t\t\tonChange={handleFormChange}\r\n\t\t\t\tvalue={formData.location}\r\n\t\t\t  />\r\n\t\t\t  <button onClick={dataretrieve_post}>Post</button>\r\n\t\t\t  <button onClick={dataretrieve_get}>Get</button>\r\n\r\n\t   </div>\r\n    );\r\n};\r\n\r\n\r\nexport default DataImport;\r\n","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\n\r\n//import {Review} from \"../../type\";\r\n\r\nconst DataUpload = () => {\r\n\r\n\tconst [dataFile, setDataFile] = useState([]);\r\n\t\t\t\t\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'multipart/form-data'\r\n\t\t\t//'Content-Type': 'application/json'\r\n\t\t}\r\n\t};\r\n\t\r\n\t//submit to backend\r\n    const data_posttobackend = (event) => {\r\n\r\n\t\tevent.preventDefault()\r\n\t\t\r\n\t\tconsole.log(dataFile);\t\t\r\n\t\tlet dataArray = new FormData();\r\n\t\tdataArray.append(\"datafile\",dataFile);\r\n\t\t\r\n\t\t//axios call\r\n        axios.post(`${process.env.REACT_APP_API_URL}/api/reviews/dataupload/`, \r\n\t\t\t\t\tdataArray,\r\n\t\t\t\t\tconfig\r\n\t\t\t\t)\r\n        .then(res => {\r\n\t\t\tconsole.log('posted data')\r\n        })\r\n        .catch(err => {\r\n\t\t\tconsole.log('data error');\r\n        })\r\n    };\r\n\t\r\n/* \tconst csrf = async () => {\r\n\t\tconst response = await axios.get('/getCSRFToken');\r\n\t\t\r\n\t\taxios.defaults.headers.post['X-CSRF-Token'] = response.data.CSRFToken ;\r\n\t}; */\r\n\t\r\n    return (\r\n       <div>\r\n\t\t   Data Page1\r\n\t\t\r\n\t\t\t<label> Data File </label>\r\n\t\t\t<form onSubmit={data_posttobackend}>\r\n\t\t\t\t<input type=\"file\" name=\"dataFile\" onChange={e => setDataFile(e.target.files[0])}/>\r\n\r\n\t\t\t\t<button type=\"submit\" >Get Data</button>\r\n\t\t\t</form>\t\r\n\t   </div>\r\n    );\r\n};\r\n\r\n\r\nexport default DataUpload;\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport {SNAvars, ReviewBigram, SNA_Link, SNA_Node, Path} from \"../../type\";\r\n\r\n\r\n/////////\r\nconst snaInit: SNAvars = \r\n\t{\r\n\t\tmodelName: '',\r\n\t\trefreshData: true,\r\n\t\trefreshVars: true,\r\n\t\tnodeColor: '#880e4f',\r\n\t\tlinkColor: '#006064',\r\n\t\tisHighlight: false,\r\n\t\tselectedNode: \"\",\r\n\t\tsecondaryNode: \"\",\r\n\t\tpathInt: 0,\r\n\t\tnumClust: 0,\r\n\t\tselectedItem:'',\r\n\t};\r\n\r\nconst bigramInit: ReviewBigram[] = [{\r\n\t\tid:0,\r\n\t\tModelKey: '',\r\n\t\tBigram_Term1: '',\r\n\t\tBigram_Term2: '',\r\n\t\tScore: 1,\r\n\t\tDistance: 1,\r\n\t\tCount_Term1: 1,\r\n\t\tCount_Term2: 1,\r\n\t\tTerm_Num1: 1,\r\n\t\tTerm_Num2: 1,\t\t\r\n\t}];\r\n\t\r\nconst linksInit: SNA_Link[] = [\r\n\t{\r\n\t\tmodelid: 'tuhjbsi988',\r\n\t\tid: '0',\r\n\t\tsource: 'Import Data Model',\r\n\t\ttarget: 'Select Model Name',\r\n\t\tcluster: 1,\r\n\t\tvalue1: 1,\r\n\t\tvalue2: 0,\r\n\t},\r\n\t{\r\n\t\tmodelid: 'tuhjbsi988',\r\n\t\tid: '1',\r\n\t\tsource: 'Get Data',\r\n\t\ttarget: 'Import Data Model',\r\n\t\tcluster: 1,\r\n\t\tvalue1: 3,\r\n\t\tvalue2: 4,\r\n\t},\r\n\t{\r\n\t\tmodelid: 'tuhjbsi988',\r\n\t\tid: '2',\r\n\t\tsource: 'Adjust Settings',\r\n\t\ttarget: 'As Necessary',\r\n\t\tcluster: 2,\r\n\t\tvalue1: 5,\r\n\t\tvalue2: 5,\r\n\t},\t\r\n]\r\n\r\nconst nodesInit: SNA_Node[] = [\r\n\t\r\n\t{\r\n\t\tid: 'Notes',\r\n\t\tname: 'Notes',\r\n\t\tcluster: 3\r\n\t},\t\r\n\t{\r\n\t\tid: 'Import Data Model',\r\n\t\tname: 'Import Data Model',\r\n\t\tcluster: 1\r\n\t},\r\n\t{\r\n\t\tid: 'Select Model Name',\r\n\t\tname: 'Select Model Name',\r\n\t\tcluster: 1\r\n\t},\r\n\t{\r\n\t\tid: 'Get Data',\r\n\t\tname: 'Get Data',\r\n\t\tcluster: 1\r\n\t},\t\r\n\t{\r\n\t\tid: 'Adjust Settings',\r\n\t\tname: 'Adjust Settings',\r\n\t\tcluster: 2\r\n\t},\t\r\n\t{\r\n\t\tid: 'As Necessary',\r\n\t\tname: 'As Necessary',\r\n\t\tcluster: 2\r\n\t},\t\r\n]\r\n\r\nconst pathInit: Path[] = [{\r\n\t\tpath: '',\r\n}]\r\n\r\n\r\nexport const snavarsSlice = createSlice({\r\n\tname: 'snavar_action',\r\n\tinitialState: snaInit,\r\n\treducers: {\r\n\t\tmodel_select: (state, {payload}: PayloadAction<{modelName: string}>) => {\r\n\t\t\tstate.modelName = payload.modelName\r\n\t\t\tconsole.log(payload.modelName);\r\n\t\t},\r\n\t\tload_vars: (state, {payload}: PayloadAction<{refreshData: boolean, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trefreshVars: boolean, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnodeColor: string, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlinkColor: string, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisHighlight: boolean,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedNode: string,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}>) => {\r\n\t\t\t\t//immer import allows mutation of state (redux toolkit only)\r\n\t\t\t\tstate.refreshData = payload.refreshData;\r\n\t\t\t\tstate.refreshVars = payload.refreshVars;\r\n\t\t\t\tstate.nodeColor = payload.nodeColor;\r\n\t\t\t\tstate.linkColor = payload.linkColor;\r\n\t\t\t\tstate.isHighlight = payload.isHighlight;\r\n\t\t},\r\n\t\trefresh_data: (state, {payload}: PayloadAction<{refreshData: boolean}>) => {\r\n\t\t\tstate.refreshData = payload.refreshData\r\n\t\t},\r\n\t\trefresh_var: (state, {payload}: PayloadAction<{refreshVars: boolean}>) => {\r\n\t\t\tstate.refreshVars = payload.refreshVars\r\n\t\t},\r\n\t\tselected_var: (state, {payload}: PayloadAction<{selectedNode: string}>) => {\t\t\r\n\t\t\tstate.selectedNode = payload.selectedNode\r\n\t\t},\r\n\t\tsecondary_sel_var: (state, {payload}: PayloadAction<{secondaryNode: string}>) => {\r\n\t\t\tstate.secondaryNode = payload.secondaryNode\r\n\t\t},\r\n\t\tpath_select: (state, {payload}: PayloadAction<{pathInt: number}>) => {\r\n\t\t\tstate.pathInt = payload.pathInt\r\n\t\t},\r\n\t\treset_values: (state, {payload}: PayloadAction<{}>) => {\r\n\t\t\tstate.pathInt = 0;\r\n\t\t\tstate.selectedNode = '';\r\n\t\t\tstate.secondaryNode = '';\r\n\t\t},\r\n\t\tnum_cluster: (state, {payload}: PayloadAction<{numClust: number}>) => {\r\n\t\t\tstate.numClust = payload.numClust;\r\n\t\t},\r\n\t\titem_select: (state, {payload}: PayloadAction<{selectedItem: string}>) => {\r\n\t\t\tstate.selectedItem = payload.selectedItem;\r\n\t\t},\r\n\t}\r\n});\r\n\r\n//review bigrams\r\nexport const bigramDataSlice = createSlice({\r\n\tname: 'bigramdata_action',\r\n\tinitialState: bigramInit,\r\n\treducers: {\r\n\t\tbigramdata: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<ReviewBigram>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({id, ModelKey, Bigram_Term1, Bigram_Term2, Score, Distance, Count_Term1, Count_Term2, Term_Num1, Term_Num2}:\r\n\t\t\t\t\t\tReviewBigram) => ({ //prepares payload allowing custom functions\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\tModelKey: ModelKey,\r\n\t\t\t\t\t\tBigram_Term1: Bigram_Term1,\r\n\t\t\t\t\t\tBigram_Term2: Bigram_Term2,\r\n\t\t\t\t\t\tScore: Score,\r\n\t\t\t\t\t\tDistance: Distance,\r\n\t\t\t\t\t\tCount_Term1: Count_Term1,\r\n\t\t\t\t\t\tCount_Term2: Count_Term2,\r\n\t\t\t\t\t\tTerm_Num1: Term_Num1,\r\n\t\t\t\t\t\tTerm_Num2: Term_Num2,\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\tbigram_delete: (state, {payload}: PayloadAction<{}>) => {\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t},\r\n\t}\r\n});\r\n\r\n//----------------------------------\r\n//links - from bigrams\r\nexport const linksSlice = createSlice({\r\n\tname: 'links_action',\r\n\tinitialState: linksInit,\r\n\treducers: {\r\n\t\tcreatelinks: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<SNA_Link>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({modelid, id, source, target, cluster, value1, value2}:\r\n\t\t\t\t\t\tSNA_Link) => ({ //prepares payload allowing custom functions\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\t\tmodelid: modelid,\r\n\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\tsource: source,\r\n\t\t\t\t\t\ttarget: target,\r\n\t\t\t\t\t\tcluster: cluster,\r\n\t\t\t\t\t\tvalue1: value1,\r\n\t\t\t\t\t\tvalue2: value2,\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\tdeletelinks: (state, {payload}: PayloadAction<{}>) => {\r\n\t\t\t//delete all\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t}\r\n\t}\r\n});\r\n\r\nexport const linksFullSlice = createSlice({\r\n\tname: 'linksfull_action',\r\n\tinitialState: linksInit,\r\n\treducers: {\r\n\t\tcreatelinksfull: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<SNA_Link>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({modelid, id, source, target, cluster, value1, value2}:\r\n\t\t\t\t\t\tSNA_Link) => ({ //prepares payload allowing custom functions\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\t\tmodelid: modelid,\r\n\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\tsource: source,\r\n\t\t\t\t\t\ttarget: target,\r\n\t\t\t\t\t\tcluster: cluster,\r\n\t\t\t\t\t\tvalue1: value1,\r\n\t\t\t\t\t\tvalue2: value2,\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\tdeletelinksfull: (state, {payload}: PayloadAction<{}>) => {\r\n\t\t\t//delete all\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t}\r\n\t}\r\n});\r\n\r\n\r\n//nodes full - from bigrams\r\nexport const nodesFullSlice = createSlice({\r\n\tname: 'nodesfull_action',\r\n\tinitialState: nodesInit,\r\n\treducers: {\r\n\t\tcreatenodesfull: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<SNA_Node>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t\t//console.log(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({id, name, cluster}: SNA_Node) => ({ //prepares payload allowing custom functions\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\tcluster: cluster,\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\tdeletenodesfull: (state, {payload}: PayloadAction<{}>) => {\r\n\t\t\t//delete all\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t}\r\n\t}\r\n})\r\n\r\n//nodes - from bigrams\r\nexport const nodesSlice = createSlice({\r\n\tname: 'nodes_action',\r\n\tinitialState: nodesInit,\r\n\treducers: {\r\n\t\tcreatenodes: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<SNA_Node>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t\t//console.log(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({id, name, cluster}: SNA_Node) => ({ //prepares payload allowing custom functions\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\t\tid: id,\r\n\t\t\t\t\t\tname: name,\r\n\t\t\t\t\t\tcluster: cluster,\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\tdeletenodes: (state, {payload}: PayloadAction<{}>) => {\r\n\t\t\t//delete all\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t}\r\n\t}\r\n})\r\n\r\n\r\nexport const pathSlice = createSlice({\r\n\tname: 'path_action',\r\n\tinitialState: pathInit,\r\n\treducers: {\r\n\t\tadd_path: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<Path>) => {\r\n\t\t\t\tstate.push(payload)\r\n\t\t\t},\r\n\t\t\tprepare: ({path}: Path) => ({ //prepares payload allowing custom functions\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\t\tpath: path\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\t\r\n\t\tdelete_path: (state, {payload}: PayloadAction<{}>) => {\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t}\r\n\t}\r\n})\r\n\r\n//manually export action creators\r\nexport const {\r\n\tmodel_select: snamodelActionCreator,\r\n\tload_vars: snavarsActionCreator,\r\n\trefresh_data: snarefreshDataActionCreator,\r\n\trefresh_var: snarefreshVarsActionCreator,\r\n\tselected_var: snaselectActionCreator,\r\n\tsecondary_sel_var: snasecondaryActionCreator,\r\n\tpath_select: pathselectActionCreator,\r\n\treset_values: resetvalsActionCreator,\r\n\tnum_cluster: numclustersActionCreator,\r\n\titem_select: itemSelectActionCreator,\r\n} = snavarsSlice.actions;\r\n\r\n\r\nexport const {\r\n\tbigramdata: bigramDataActionCreator,\r\n\tbigram_delete: bigramdeleteActionCreator,\r\n} = bigramDataSlice.actions;\r\n\r\n//nodes&links\r\nexport const {\r\n\tcreatelinks: links_createActionCreator,\r\n\tdeletelinks: links_deleteActionCreator,\r\n} = linksSlice.actions;\r\nexport const {\r\n\tcreatenodes: nodes_createActionCreator,\r\n\tdeletenodes: nodes_deleteActionCreator,\r\n} = nodesSlice.actions;\r\nexport const {\r\n\tcreatelinksfull: linksfull_createActionCreator,\r\n\tdeletelinksfull: linksfull_deleteActionCreator,\r\n} = linksFullSlice.actions;\r\nexport const {\r\n\tcreatenodesfull: nodesfull_createActionCreator,\r\n\tdeletenodesfull: nodesfull_deleteActionCreator,\r\n} = nodesFullSlice.actions;\r\n\r\nexport const {\r\n\tadd_path: pathaddActionCreator,\r\n\tdelete_path: pathdeleteActionCreator,\r\n} = pathSlice.actions;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { snavarsActionCreator } from '../sna_actions';\r\nimport  {SwatchesPicker} from 'react-color';\r\nimport * as d3 from 'd3';\r\n\r\n\r\nconst ModalNodeColor = () => {\r\n\t\r\n\tconst SNAstate = useSelector((state) => state.snavars);\r\n\r\n\tconst dispatcher = useDispatch();\r\n\t\r\n\tconst changeVal = (e) => {\r\n\r\n\t\td3.selectAll(\".circle1\")._groups[0].forEach(cir => {\r\n\t\t\tcir.attributes.style.value = \"stroke: \" + e.hex;\r\n\t\t})\r\n\t\t\r\n\t\tdispatcher(snavarsActionCreator({\r\n\t\t\t\t\t\trefresh: SNAstate.refresh,\r\n\t\t\t\t\t\tnodeColor:e.hex, \r\n\t\t\t\t\t\tlinkColor:SNAstate.linkColor, \r\n\t\t\t\t\t\tisHighlight: SNAstate.isHighlight\r\n\t\t}))\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"modalPopup\">\r\n\t\t\tClick to Change Node Color\r\n\t\t\t<SwatchesPicker onChangeComplete={e=> changeVal(e)}/>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default ModalNodeColor;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { snavarsActionCreator } from '../sna_actions';\r\nimport  {SwatchesPicker} from 'react-color';\r\nimport * as d3 from 'd3';\r\n\r\nconst ModalLinkcolor = () => {\r\n\t\r\n\tconst SNAstate = useSelector((state) => state.snavars);\r\n\t//const {nodecolor, linkcolor, highlight} = SNAstate;\r\n\r\n\tconst dispatcher = useDispatch();\r\n\t\r\n\tconst changeVal = (e) => {\r\n\t\r\n\t\td3.selectAll(\".snalinks\")._groups[0].forEach(lk => {\r\n\t\t\tlk.attributes.style.value = \"stroke: \"+e.hex;\r\n\t\t})\r\n\t\r\n\t\tdispatcher(snavarsActionCreator({\r\n\t\t\t\t\t\trefresh: SNAstate.refresh,\r\n\t\t\t\t\t\tnodeColor:SNAstate.nodeColor, \r\n\t\t\t\t\t\tlinkColor:e.hex, \r\n\t\t\t\t\t\tisHighlight: SNAstate.isHighlight\r\n\t\t\t\t}))\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"modalPopup\">\r\n\t\t\tClick to Change Link Color\r\n\t\t\t<SwatchesPicker onChangeComplete={e=> changeVal(e)}/>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default ModalLinkcolor;","import * as d3 from 'd3';\r\n\r\n\r\nconst Pathfind = (links, selectednode, secondarynode, maxdepth) => {\r\n\t\r\n\t//locations of end node\r\n\tlet secondaryNodeLoc = d3.select(\"#\" + secondarynode)._groups[0]\r\n\tlet ex = secondaryNodeLoc[0].__data__.x;\r\n\tlet ey = secondaryNodeLoc[0].__data__.y;\t\r\n\r\n\t//single iteration - create list of adjacent node IDs\r\n\tconst linkloop = (id, pathIDs, endpoint) => {\r\n\t\tlet newpaths = [];\r\n\t\tlet neighborList = []; //prevent duplicate pathing\r\n\t\tlet foundAPath = false\t\r\n\t\t\r\n\t\tif(pathIDs[pathIDs.length - 1]!==endpoint) { //path hasn't ended, iterate\r\n\t\t\t\r\n\t\t\tlinks.forEach(lk => {\r\n\t\t\t\tlet trailingpath = [...pathIDs]\r\n\t\t\t\t\tif (lk.source === id & pathIDs.indexOf(lk.target)===-1 & neighborList.indexOf(lk.target)===-1){\r\n\t\t\t\t\t\ttrailingpath.push(lk.target)\r\n\t\t\t\t\t\tnewpaths.push(trailingpath)\r\n\t\t\t\t\t\tneighborList.push(lk.target)\r\n\t\t\t\t\t\tfoundAPath = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (lk.target === id & pathIDs.indexOf(lk.source)===-1 & neighborList.indexOf(lk.source)===-1){\r\n\t\t\t\t\t\ttrailingpath.push(lk.source)\r\n\t\t\t\t\t\tnewpaths.push(trailingpath)\r\n\t\t\t\t\t\tneighborList.push(lk.source)\r\n\t\t\t\t\t\tfoundAPath = true\r\n\t\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (!foundAPath){ return [pathIDs] }\r\n\t\treturn(newpaths)\r\n\t}\r\n\t\r\n\t//after iterations, trim out paths\r\n\tconst trimPath = (paths, iter) => {\r\n\t\tlet exp_paths = []\r\n\r\n\t\t\tpaths.forEach(pl => {\r\n\t\t\t\t\tif (pl.length > iter - 3){ //dead end\r\n\t\t\t\t\t\tif (pl.length >= 5 & paths.length > 100){\r\n\t\t\t\t\t\t\t//must be getting closer within last 5 steps\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tlet bx = d3.select(\"#\" + pl[pl.length-5])._groups[0][0].__data__.x;\r\n\t\t\t\t\t\t\t\tlet by = d3.select(\"#\" + pl[pl.length-5])._groups[0][0].__data__.y;\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tlet x = d3.select(\"#\" + pl[pl.length-1])._groups[0][0].__data__.x;\r\n\t\t\t\t\t\t\t\tlet y = d3.select(\"#\" + pl[pl.length-1])._groups[0][0].__data__.y;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tlet starting_dist = Math.pow(Math.pow(bx - ex,2)+Math.pow(by - ey,2),.5)\r\n\t\t\t\t\t\t\t\tlet dist = Math.pow(Math.pow(x - ex,2)+Math.pow(y - ey,2),.5)\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (dist < starting_dist){ //is closer, pass to next\r\n\t\t\t\t\t\t\t\t\texp_paths.push(pl);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\t\tconsole.log(\"Cant find\")\r\n\t\t\t\t\t\t\t\tconsole.log(pl[pl.length - 5])\r\n\t\t\t\t\t\t\t\tconsole.log(pl[pl.length - 1])\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t//other criteria (too short) - pass through\r\n\t\t\t\t\t\t\tif ( pl.length < 6 | paths.length <= 100  | pl[pl.length-1]===secondarynode) { \r\n\t\t\t\t\t\t\t\texp_paths.push(pl) \r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\t\r\n\t\t\t});\r\n\t\treturn(exp_paths)\r\n\t}\r\n\r\n\tlet path_list = [];\t\r\n\tlet foundpaths = 0\r\n\tpath_list.push(selectednode);\r\n\tpath_list = linkloop(selectednode,path_list);\r\n\t//console.log(path_list);\r\n\t\r\n\t for (let m = 0; m <= maxdepth; m++){\r\n\t\tlet newpaths = [];\r\n\t\tif (foundpaths < 15){\r\n\t\t\tpath_list = path_list.map((p,i) => {\r\n\t\t\t\t\t\t\t\t\tlet nextpaths = linkloop(p[p.length-1], p, secondarynode);\r\n\t\t\t\t\t\t\t\t\tif (nextpaths.length===1){\r\n\t\t\t\t\t\t\t\t\t\tnextpaths = nextpaths[0];\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\tif (typeof(nextpaths[0])===\"object\"){\r\n\t\t\t\t\t\t\t\t\t\tnextpaths.forEach(np => {\r\n\t\t\t\t\t\t\t\t\t\t\tnewpaths.push(np);\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tnewpaths.push(nextpaths);\r\n\t\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t\treturn(nextpaths);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\tpath_list = newpaths;\t\r\n\t\t\tpath_list = trimPath(path_list, m)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\tpath_list.forEach(p => {\r\n\t\t\t\tif (p[p.length-1]===secondarynode){\r\n\t\t\t\t\tfoundpaths += 1\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t} \r\n\t\r\n\t//trim down on paths leading elsewhere\r\n\tlet paths = [];\r\n\tpath_list.forEach(pth => {\r\n\t\tif (pth[pth.length-1]===secondarynode){\r\n\t\t\tpaths.push(pth);\r\n\t\t}\r\n\t});\r\n\r\n\tpaths = paths.sort(function(a,b){\r\n\t\t\t\treturn a.length - b.length;\r\n\t\t\t})\r\n\t\r\n\tpaths = paths.slice(0,15)\r\n\t\r\n\tconsole.log(paths);\r\n\r\n\t\r\n\treturn(paths); \r\n\r\n};\r\n\r\nexport default Pathfind;","import React, {useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {snasecondaryActionCreator, \r\n\t\tpathaddActionCreator, pathdeleteActionCreator, pathselectActionCreator} from '../sna_actions';\r\nimport Pathfind from '../functions/Pathfind';\r\nimport * as d3 from 'd3';\r\n\r\n\r\nconst ModalPathfind = () => {\r\n\t\r\n\tconst [maxDepth, setMaxDepth] = useState(10);\r\n\tconst dispatcher = useDispatch();\r\n\tconst snanodes = useSelector((state) => state.sna_nodes);\r\n\tconst snalinks = useSelector((state) => state.sna_links);\r\n\tconst snavars = useSelector((state) => state.snavars);\r\n\tconst snapaths = useSelector((state) => state.sna_paths);\r\n\t\r\n\tlet scores = [];\r\n\t\r\n\tconst DropdownChange = (e) => {\r\n\t\ttry {\r\n\t\t\tif (snavars.secondaryNode){\r\n\t\t\t\td3.select(\"#\"+snavars.secondaryNode).attr(\"fill\",\"black\")\r\n\t\t\t}\r\n\t\t\tlet val = snanodes[e.target.selectedIndex - 1];\r\n\t\t\tdispatcher(snasecondaryActionCreator({secondaryNode: val['id']}));\r\n\t\t\td3.select(\"#\"+val['id']).attr('fill','lightgreen');\r\n\t\t\r\n\t\t} catch(err){ console.log(\"Node does not exist\")}\r\n\t\t\r\n\t}\r\n\r\n\t//\r\n\tconst SubmitPaths = () => {\r\n\t\tif (snavars.selectedNode!==\"\" & snavars.secondaryNode!==\"\"){\r\n\t\t\tlet paths = Pathfind(snalinks,snavars.selectedNode, snavars.secondaryNode, maxDepth);\r\n\t\t\t\r\n\t\t\tdispatcher(pathdeleteActionCreator({}));\r\n\t\t\tpaths.forEach((p,i) => {\r\n\t\t\t\tdispatcher(pathaddActionCreator({path: p}));\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\td3.selectAll(\".snalinks\")._groups[0].forEach(dlk => {\t\r\n\t\t\t\tdlk.style.stroke = snavars.linkColor; //reset color\r\n\t\t\t})\r\n\r\n\t\t\tScoresCreate()\r\n\t\t}\r\n\t}\r\n\r\n\t//path is selected, change link colors\r\n\tconst selectedPath = (e) => {\r\n\t\t\r\n\t\tlet pInt = e.target.attributes.value.value;\r\n\t\tdispatcher(pathselectActionCreator({pathInt: pInt}))\r\n\t\t\r\n\t\tsnapaths[pInt].path.forEach((lk,i) => {\r\n\t\t\td3.selectAll(\".snalinks\")._groups[0].forEach(dlk => {\t\r\n\t\t\t\tif (i < snapaths[pInt].path.length){\r\n\t\t\t\t\tif (lk + \"--\" + snapaths[pInt].path[i+1] === dlk.attributes.id.value |  snapaths[pInt].path[i+1] + \"--\" + lk === dlk.attributes.id.value){\r\n\t\t\t\t\t\tdlk.style.stroke = \"red\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\t\r\n\tconst ScoresCreate = () => {\r\n\t\t\t//scores\r\n\t\tlet pathscores = [];\r\n\t\tsnapaths.forEach(path => {\r\n\t\t\tlet ps = [];\r\n\t\t\tsnalinks.forEach(lk => {\r\n\t\t\t\tif (path.indexOf(lk['source'])>-1 & path.indexOf(lk['target'])>-1 & Math.abs(path.indexOf(lk['source']) - path.indexOf(lk['target']))===1){\r\n\t\t\t\t\t//found link\r\n\t\t\t\t\tps.push(lk['value1']);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tlet score = 0;\r\n\t\t\tps.forEach(p => {\r\n\t\t\t\tscore += +p\r\n\t\t\t})\r\n\t\t\t\r\n\t\t\tpathscores.push(Math.round(score/ps.length,3));\r\n\t\t})\r\n\t\tconsole.log(pathscores);\r\n\t\tscores = pathscores;\r\n\t\t\r\n\t}\r\n\t\r\n\tconst Listvalues = () => {\r\n\t\tif (snalinks.length > 1){\r\n\t\t\treturn(\t\t\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input type=\"number\" name=\"max_depth\" default=\"10\" min=\"1\" max=\"50\" value={maxDepth} onChange={e=>setMaxDepth(e.target.value)} />\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t\r\n\t\t\t\t\t{/* dropdown */}\r\n\t\t\t\t\t<select id=\"modaldropdown\" onChange={e=>DropdownChange(e)} >\t\t\r\n\t\t\t\t\t\t<option key='1'  >\r\n\t\t\t\t\t\t\tSelect A Node\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tsnanodes.map((d,i) => {\r\n\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t<option key={\"b\"+i} value = {d['id']} >\r\n\t\t\t\t\t\t\t\t\t\t{d.id}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<button type=\"submit\" onClick={SubmitPaths}> Submit </button>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn(<div></div>)\r\n\t\t}\r\n\t}\r\n\t\r\n\t//add path strings to modal for selection\r\n\tconst Pathing = () => {\r\n\r\n\t\tif (snapaths.length > 0){\r\n\t\t\tif (snapaths[0].path !==\"\"){\r\n\t\t\t\tlet strings = snapaths.map((pth,i) => { \r\n\t\t\t\t\tlet str1 = \"Path \" + i + \" (\"+ pth.path.length +\") [\" + scores[i] + \"] :   \"\r\n\t\t\t\t\tpth.path.forEach((p,i) => { if (i<8){ str1 = str1 + p + \" - \" } })\r\n\t\t\t\t\treturn(str1)\r\n\t\t\t\t})\r\n\r\n\t\t\t\treturn(\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tstrings.map((ss,i) => (\r\n\t\t\t\t\t\t\t\t<div key={i} className=\"modal_pathway\" value={i} onClick={e => selectedPath(e)}>\r\n\t\t\t\t\t\t\t\t\t{ss.substring(0,80)} ...\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t} else {\r\n\t\t\t\treturn(<div></div>)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn(<div>No Paths</div>)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"modalPopup\">\r\n\t\t\tSelect Secondary Node\r\n\t\t\t<br />\r\n\t\t\tPrimary Node:  {snavars.selectedNode}\r\n\t\t\t<Listvalues />\r\n\t\t\t<Pathing />\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default ModalPathfind;","import React, {useState} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport * as d3 from 'd3';\r\n\r\nconst ModalNearbyCommunity = () => {\r\n\r\n\tconst [radius, setRadius] = useState(15)\r\n\tconst snavars = useSelector((state) => state.snavars);\r\n\r\n\tconst applyNeighborhood = () => {\r\n\t\t\r\n\t\tif (snavars.selectedNode!==''){\r\n\t\t\t\r\n\t\t\tlet svg1 = d3.select(\"#\" + snavars.selectedNode)._groups[0]\r\n\t\t\tlet ax = svg1[0].__data__.x;\r\n\t\t\tlet ay = svg1[0].__data__.y;\r\n\t\t\t\r\n\t\t\tlet parentnode = d3.select(\"#node_\"+snavars.selectedNode)\r\n\t\t\tparentnode.lower();\r\n\t\t\t\r\n\t\t\tlet xx = parentnode.append(\"circle\")\r\n\t\t\t\t.attr(\"class\",\"circle2\")\r\n\t\t\t\t.attr(\"id\",\"neighborhood_circle\")\r\n\t\t\t\t.attr(\"r\", radius * 10)\r\n\t\t\t    .attr(\"fill\", \"grey\")\r\n\t\t\t    .attr(\"fill-opacity\", .3)\r\n\t\t\t\t.attr(\"cx\",ax)\r\n\t\t\t\t.attr(\"cy\",ay);\r\n\t\t\txx.lower();\r\n\t\t\t\r\n\t\t\t//nodesinrange\r\n\t\t\td3.selectAll(\".circle1\")._groups[0].forEach(node => {\r\n\t\t\t\tlet x = node.attributes.cx.value\r\n\t\t\t\tlet y = node.attributes.cy.value\r\n\t\t\t\tlet dist = Math.pow(Math.pow(x - ax,2)+Math.pow(y-ay,2),.5)\r\n\t\t\t\tif (dist < radius * 10){\r\n\t\t\t\t\tconsole.log(node.attributes.name.value + \" \" + dist)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tconst clearCircle = () => {\r\n\t\td3.selectAll(\"#neighborhood_circle\").remove();\r\n\t\t\t\r\n\t}\r\n\t\r\n\treturn(\r\n\t\t<div className=\"modalPopup\">\r\n\t\t\tSelected Node: {snavars.selectedNode}\r\n\t\t\t<br />\r\n\t\t\tradius: <input type=\"number\" name=\"comm_radius\" default=\"15\" min=\"1\" max=\"50\" value={radius} onChange={e=>setRadius(e.target.value)} />\r\n\t\t\t<button onClick={applyNeighborhood}>Submit </button>\r\n\t\t\t<div stlye={{height:'20px', width: '100%'}}></div>\r\n\t\t\t<button onClick={clearCircle}> Remove </button>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default ModalNearbyCommunity;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport {Review} from \"../../../type\";\r\n\r\ninterface ReviewPre {\r\n\tModelKey: string;\r\n\tReviewItem: string;\r\n\tSummary: string;\r\n\tDescription: string;\r\n\tRating: number;\r\n\tTopic: string;\r\n\tTopicScore: number;\r\n\tRating_Estimate: number;\r\n\tSentimentTrend: string;\r\n\tWordTrend: string;\r\n}\r\n\r\nconst reviewInit: Review[] = [{ \r\n\tModelKey: '',\r\n\tReviewItem: '',\r\n\tSummary: '',\r\n\tDescription: '',\r\n\tRating: 0,\r\n\tTopic: '',\r\n\tTopicScore: 0,\r\n\tRating_Estimate: 0,\r\n\tSentimentTrend: [0],\r\n\tWordTrend: [\"\"],\r\n}]\r\n\r\nconst converttoNumArry = (str1: string) => {\r\n\tlet arr1:number[] = [];\r\n\tlet txt:string[] = str1.replaceAll(\"'\",\"\").split(\",\");\r\n\ttxt.forEach(t => {\r\n\t\tarr1.push(+t)\r\n\t})\r\n\treturn(arr1)\r\n};\r\nconst converttoStrArry = (str1: string) => {\r\n \tlet arr1:string[] = [];\r\n\tlet txt:string[] = str1.split(\",\");\r\n\ttxt.forEach(t => {\r\n\t\tarr1.push(t)\r\n\t})\r\n\treturn(arr1) \r\n};\r\n\r\n\r\n//reviews\r\nexport const reviewDataSlice = createSlice({\r\n\tname: 'reviewdata_action',\r\n\tinitialState: reviewInit,\r\n\treducers: {\r\n\t\treviewdata: {\r\n\t\t\treducer: (state, {payload}: PayloadAction<Review>) => {\r\n\t\t\t\tstate.push(payload);\r\n\t\t\t},\r\n\t\t\tprepare: ({ModelKey, ReviewItem, Summary, Description, Rating, Topic, TopicScore, Rating_Estimate, SentimentTrend, WordTrend}: ReviewPre) => ({ \r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tModelKey: ModelKey,\r\n\t\t\t\t\tReviewItem: ReviewItem,\r\n\t\t\t\t\tSummary: Summary,\r\n\t\t\t\t\tDescription: Description,\r\n\t\t\t\t\tRating: Rating,\r\n\t\t\t\t\tTopic: Topic,\r\n\t\t\t\t\tTopicScore: TopicScore,\r\n\t\t\t\t\tRating_Estimate: Rating_Estimate,\r\n\t\t\t\t\tSentimentTrend: converttoNumArry(SentimentTrend),\r\n\t\t\t\t\tWordTrend: converttoStrArry(WordTrend)\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t},\r\n\t\treview_delete: (state, {payload}: PayloadAction<{}>) => {\r\n\t\t\tstate.splice(0,state.length);\r\n\t\t},\r\n\t}\r\n});\r\n\r\n\r\nexport const {\r\n\treviewdata: reviewDataActionCreator,\r\n\treview_delete: reviewdeleteActionCreator,\r\n} = reviewDataSlice.actions;","import { useSelector } from 'react-redux';\r\n\r\nconst ReviewItemsDropdown = (change) => {\r\n\t\r\n\tconst Reviews = useSelector((state) => state.reviewdata);\r\n\tlet Items = [];\r\n\t\t\r\n\treturn(\r\n\t\t<select id=\"dropdown_models\" onChange={change.change} >\t\t\r\n\t\t\t<option key='1'  >\r\n\t\t\t\tSelect Item Name\r\n\t\t\t</option>\r\n\t\t\t{\r\n\t\t\t\tReviews.map((d,i) => {\r\n\t\t\t\tif (Items.indexOf(d.ReviewItem)=== -1){\r\n\t\t\t\t\tItems.push(d.ReviewItem);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\treturn(\r\n\t\t\t\t\t\t<option key={\"r\"+i}  value={d.ReviewItem}>\r\n\t\t\t\t\t\t\t{d.ReviewItem}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</select>\t\r\n\t)\t\t\t\r\n};\r\nexport default ReviewItemsDropdown;","\r\n\r\nconst CleanString = (str1) => {\r\n\treturn(\r\n\t\tstr1.replace( /(<([^>]+)>)/ig ,\"\").replace(\"/\",\" \").replace(/[.,/#!^():']/g,\"\").toLowerCase()\r\n\t)\r\n};\r\n\r\nexport default CleanString;\r\n","import {ReviewModel_Review_Raw, Review, Review_Raw} from \"../../../type\";\r\nimport {reviewDataActionCreator} from \"./reviews_actions\";\r\nimport axios from 'axios';\r\n\r\nfunction ImportReviews(modelname: string, dispatcher: any) {\r\n\r\n\t//let dispatcher = useDispatch();\r\n\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t}\r\n\t};\r\n\r\n\t//axios call - reviews from particular model\r\n\t axios.post<any[]>(`${process.env.REACT_APP_API_URL}/api/reviews/review/`, {modelname}, config)\r\n\t\t .then(res => {\t\r\n\t\t\tconst dataset: ReviewModel_Review_Raw[] = res.data\r\n\t\t\tconst dset: Review_Raw[] = dataset[0].reviews\r\n\t\t\tdset.forEach(rv => {\r\n\t\t\t\tdispatcher(reviewDataActionCreator(rv))\r\n\t\t\t}) \r\n\t\t\tconsole.log(dset)\r\n\t\t })\r\n\t\t .catch(err => {\r\n\t\t\tconsole.log(err);\r\n\t\t });\r\n\r\n};\r\n\r\nexport default ImportReviews","\r\nconst Clusters = (nodes, links) => {\r\n\t\r\n\tlet nodegroups = [];\r\n\tlet nodenames = [];\r\n\r\n\tnodes.forEach((nd,i) => {\r\n\t\tnodenames.push(nd['Name'])\r\n\t\tnodegroups.push(i)\r\n\t});\r\n\t\r\n\tlinks.forEach(lk => {\r\n\t\tlet s_int = nodenames.indexOf(lk['Bigram_Term1'])\r\n\t\tlet t_int = nodenames.indexOf(lk['Bigram_Term2'])\r\n\t\tlet changefromval = nodegroups[t_int]\r\n\t\t\r\n\t\tnodegroups.forEach((ng,k) => {\r\n\t\t\tif (ng === changefromval){\r\n\t\t\t\tnodegroups[k] = nodegroups[s_int];\r\n\t\t\t}\r\n\t\t});\r\n\t});\r\n\r\n\tlet clusterids = [];\r\n\tnodegroups.forEach((ng,i) => {\r\n\t\tif (clusterids.indexOf(ng)===-1){\r\n\t\t\tclusterids.push(ng)\r\n\t\t}\r\n\t}); \r\n\tlet clustercounts = clusterids.map(c => 0);\r\n\tnodegroups.forEach(ng => {\r\n\t\tclustercounts[clusterids.indexOf(ng)] += 1\r\n\t});\r\n\tlet clustermap = clusterids.map((clust,c) => {\r\n\t\treturn { id: clust, count: clustercounts[c] }\r\n\t}).sort(function(a,b){\r\n\t\treturn b.count - a.count\r\n\t});\r\n\tlet clustersortedIDs = clustermap.map(c => {\r\n\t\treturn c.id\r\n\t})\r\n\t\r\n\tlet finalgroups = [];\t\r\n\tnodes.forEach((nd,i) => {\r\n\t\tlet intg = clustersortedIDs.indexOf(nodegroups[i])\r\n\t\tfinalgroups.push({id: nd.Name, cluster: intg})\r\n\t});\r\n\r\n\treturn(finalgroups)\r\n};\r\n\r\nexport default Clusters;","//import Loader from 'react-loader-spinner';\r\nimport {useState } from 'react';\r\nimport axios from 'axios';\r\nimport Clusters from '../../sna/functions/Clusters';\r\nimport {SNA_Node, SNA_Link} from '../../../type';\r\n\r\nimport {ReviewBigram, ReviewModel_Bigram} from \"../../../type\";\r\nimport {snarefreshDataActionCreator,\r\n\t\t bigramDataActionCreator,\r\n\t\tlinks_createActionCreator, \r\n\t\tlinksfull_createActionCreator,\r\n\t\tnodes_createActionCreator, \r\n\t\tnodesfull_createActionCreator, \r\n\t\tnumclustersActionCreator} from \"../../sna/sna_actions\";\r\n\t\r\nconst config = {\r\n\theaders: {\r\n\t\t'Content-Type': 'application/json'\r\n\t}\r\n};\r\n\t\r\nconst ReviewBigramsImport = (modelname: string, dispatcher: any):any => {\r\n\r\n\t\t//axios call - review bigrams for particular model\r\n\t\taxios.post<ReviewModel_Bigram[]>(`${process.env.REACT_APP_API_URL}/api/reviews/bigram/`, {modelname}, config)\r\n\t\t\t.then(res => {\r\n\t\t\t\r\n\t\t\tconst dataset: ReviewModel_Bigram[] = res.data\r\n\t\t\tconst dset: ReviewBigram[] = dataset[0].bigrams\r\n\r\n\t\t\tlet nn:any = getNodesfromLinks(dset,\"Bigram_Term1\",\"Bigram_Term2\")\r\n\t\t\tlet nn_clust = Clusters(nn,dset)\r\n\t\t\tlet nodenames = nn_clust.map(n => n['id']);\r\n\t\t\t\r\n\t\t\t//nodes----------\r\n\t\t\tlet clustnum:string[] = [];\r\n\t\t\tnn_clust.forEach((d:any) => {\r\n\t\t\t\t//store all nodes or just a portion\r\n\t\t\t\tlet nod: SNA_Node = {\r\n\t\t\t\t\tid: d['id'],\r\n\t\t\t\t\tname: d['id'],\r\n\t\t\t\t\tcluster: d['cluster']\r\n\t\t\t\t}\r\n\t\t\t\tdispatcher(nodesfull_createActionCreator(nod))\r\n\t\t\t\tdispatcher(nodes_createActionCreator(nod))\r\n\t\t\t\tif (clustnum.indexOf(d['cluster'])===-1){\r\n\t\t\t\t\tclustnum.push(d['cluster']);\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\tdispatcher(numclustersActionCreator({numClust: clustnum.length}))\t\t\t\r\n\t\t\t\r\n\t\t\t//links----\r\n\t\t\tdset.forEach(d => {\r\n\t\t\t    if (d['Bigram_Term1'] !== d['Bigram_Term2']){  //prevent single loops\t\t\t\t\r\n\t\t\t\t\tlet clust: number = nn_clust[nodenames.indexOf(d['Bigram_Term1'])]['cluster']\r\n\t\t\t\t\tlet lnk: SNA_Link = {\r\n\t\t\t\t\t\tmodelid: String(d[\"ModelKey\"]), \r\n\t\t\t\t\t\tid: String(d[\"id\"]), \r\n\t\t\t\t\t\tsource: d[\"Bigram_Term1\"], \r\n\t\t\t\t\t\ttarget: d[\"Bigram_Term2\"],\r\n\t\t\t\t\t\tcluster: clust,\r\n\t\t\t\t\t\tvalue1: d[\"Score\"],\r\n\t\t\t\t\t\tvalue2: d[\"Distance\"],\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdispatcher(bigramDataActionCreator(d));\t\t\t\t\r\n\t\t\t\t\t//store all links or just a portion\r\n\t\t\t\t\tdispatcher(linksfull_createActionCreator(lnk));\r\n\t\t\t\t\tdispatcher(links_createActionCreator(lnk));\r\n\t\t\t\t}\r\n\t\t\t}) \r\n\t\t\t//itemFilter()\t\r\n\t\t//reset 'refresh' to true\r\n\t\tdispatcher(snarefreshDataActionCreator({refreshData: true}))\t\t\t\r\n        })\r\n\t\t.catch(err => {\r\n\t\t\tconsole.log('data error - Bigram');\r\n        });\r\n\t\r\n};\r\n\r\nexport default ReviewBigramsImport;\r\n\r\n\r\n\r\n//////////helper functions/////////////\r\n///get nodes from links\r\nconst getNodesfromLinks = (data: any, linkfieldName1: string, linkfieldName2: string) => {\r\n\tlet new_nodes: any = [];\r\n\tlet uniquevals: any = [];\r\n\tdata.forEach((d:any) => {\r\n\t\tif (uniquevals.indexOf(d[linkfieldName1])===-1){\r\n\t\t\tuniquevals.push(d[linkfieldName1])\r\n\t\t\tnew_nodes.push({Name: d[linkfieldName1], id: d[linkfieldName1]})\r\n\t\t}\r\n\t\tif (uniquevals.indexOf(d[linkfieldName2])===-1){\r\n\t\t\tuniquevals.push(d[linkfieldName2])\r\n\t\t\tnew_nodes.push({Name: d[linkfieldName2], id: d[linkfieldName2]})\r\n\t\t}\r\n\t})\r\n\t\r\n\treturn new_nodes;\r\n};","import React, {useState, ChangeEvent} from 'react';\r\nimport axios from 'axios';\r\nimport {ReviewModel_Review, Review} from \"../../type\";\r\nimport {snarefreshDataActionCreator,\r\n\t\tbigramdeleteActionCreator, \r\n\t\tlinks_createActionCreator, links_deleteActionCreator,\r\n\t\t linksfull_deleteActionCreator,\r\n\t\tnodes_createActionCreator, nodes_deleteActionCreator,\r\n\t\t nodesfull_deleteActionCreator,\r\n\t\tsnamodelActionCreator, pathdeleteActionCreator,\r\n\t\t itemSelectActionCreator} from \"./sna_actions\";\r\n\t\t\r\nimport {reviewdeleteActionCreator} from '../data/Reviews/reviews_actions';\r\n\r\nimport {Modal} from 'react-bootstrap'; \r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {SNA_Node, SNA_Link} from '../../type';\r\nimport ReviewItemsDropdown from \"./modals/shared items/ReviewItemsDropdown\"; \r\nimport CleanString from './functions/CleanString';\r\n\r\nimport ReviewImport from '../data/Reviews/ReviewImport';\r\nimport ReviewBigramsImport from '../data/Reviews/ReviewBigramsImport';\r\nimport DeleteModel from \"../data/Reviews/DeleteModel\";\r\n\r\nconst SNAImport = () => {\r\n\r\n\t//const snavars: SNAvars = useSelector((state: any) => state.snavars);\r\n\tconst reviews: Review[] = useSelector((state: any) => state.reviewdata);\r\n\tconst snaNodes: SNA_Node[] = useSelector((state: any) => state.sna_fullnodes);\r\n\tconst snaLinks: SNA_Link[] = useSelector((state: any) => state.sna_fulllinks);\r\n\tconst [formData, setFormData] = useState({  modelname: 'tt' });\r\n\tconst [isModal0Visible,setIsModal0Visible] = useState(false);\r\n\tconst clicked0 = () => { setIsModal0Visible(true) };\r\n\tconst close0 = () => { setIsModal0Visible(false) };\r\n\r\n\tinterface ModelDataType {\r\n\t\tlabel: string;\r\n\t\tvalue: string;\r\n\t};\r\n\r\n\tconst [datamodels, setDatamodels] = useState<ModelDataType[]>([])\r\n\tconst [callData, setCallData] = useState(false)  //to prevent rerun of model import\r\n\tconst { modelname } = formData;\r\n\tconst dispatcher = useDispatch();\r\n\tconst Items: any = [];\r\n\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t}\r\n\t};\r\n\r\n\tconst DropdownModelChg = (e: ChangeEvent<EventTarget>):void => {\r\n\t\tlet dd: any = document.getElementById(\"dropdown_models\");\r\n\t\tconsole.log(dd.options[dd.selectedIndex].text);\r\n\t\tsetFormData({modelname: dd.options[dd.selectedIndex].text});\r\n\t};\r\n\r\n\tconst itemSelect = (e: ChangeEvent<HTMLSelectElement>) => {\r\n\t\tif (Items.length < 1){\r\n\t\t\treviews.map((d,i) => {\r\n\t\t\t\t\tif (Items.indexOf(d.ReviewItem)=== -1){\r\n\t\t\t\t\t\tItems.push(d.ReviewItem);\r\n\t\t\t\t\t}\r\n\t\t\t});\r\n\t\t};\r\n\t\tdispatcher(itemSelectActionCreator({ selectedItem: Items[e.target.selectedIndex - 1] }));\r\n\t\titemFilter(Items[e.target.selectedIndex - 1]);\t\r\n\t};\r\n\t\r\n\t\r\n\tconst itemFilter = (item: string) => {\r\n\t\t//create items list - only provided with selectedindex from child node\r\n\t\tlet desc_str: string = \"\";\r\n\t\treviews.forEach(rv => {\r\n\t\t\tif (rv.ReviewItem===item){\r\n\t\t\t\tconsole.log(rv.Description);\r\n\t\t\t\tdesc_str = desc_str + String(rv.Description)\r\n\t\t\t};\r\n\t\t});\r\n\t\tdispatcher(nodes_deleteActionCreator({}));\r\n\t\tdispatcher(links_deleteActionCreator({}));\r\n\t\t\r\n\t\tlet terms = CleanString(desc_str).split(\" \");\r\n\t\tconsole.log(item);\r\n\t\tconsole.log(terms);\r\n\r\n\r\n\t\t//apply full nodes/links to sample nodes/links\r\n\t\tsnaNodes.forEach((d:SNA_Node) => {\r\n\t\t\tif (terms.indexOf(d['id'])>-1){\r\n\t\t\t\tdispatcher(nodes_createActionCreator(d));\r\n\t\t\t};\t\r\n\t\t});\r\n \t\tsnaLinks.forEach((d:SNA_Link) => {\r\n\t\t\tif ( (terms.indexOf(d['source'])>-1 && terms.indexOf(d['target'])>-1)){\r\n\t\t\t\tdispatcher(links_createActionCreator(d));\r\n\t\t\t};\r\n\t\t}); \r\n\t\t//reset 'refresh' to true\r\n\t\tdispatcher(snarefreshDataActionCreator({refreshData: true}))\r\n\t};\r\n\r\n\t//------list of models\r\n    const reviewmodelretrieve = () => {\r\n\t\tsetCallData(true); //only run once\r\n\r\n\t\t//axios call\r\n        axios.post<ReviewModel_Review[]>(`${process.env.REACT_APP_API_URL}/api/reviews/models/`, {modelname}, config)\r\n        .then(res => {\r\n\r\n\t\t\tconst dataset: ModelDataType[] = []\r\n\t\t\tres.data.forEach(d => {\r\n\t\t\t\tdataset.push({label : d.ModelKey, value: d.ModelType})\r\n\t\t\t})\r\n\t\t\tsetDatamodels(dataset);\r\n        })\r\n        .catch(err => {\r\n\t\t\tconsole.log('data error - Model');\r\n        })\r\n    };\r\n\t\r\n\r\n\t//------chosen model data\r\n    const reviews_retrieve = () => {\r\n\t\t\r\n\t\tdispatcher(snamodelActionCreator({modelName: modelname}));\r\n\t\t//need to delete previous instance\r\n\t\tdispatcher(nodesfull_deleteActionCreator({}))\r\n\t\tdispatcher(linksfull_deleteActionCreator({}))\r\n\t\tdispatcher(pathdeleteActionCreator({}))\r\n\t\tdispatcher(reviewdeleteActionCreator({}))\r\n\t\tdispatcher(bigramdeleteActionCreator({}))\r\n\t\tdispatcher(nodes_deleteActionCreator({}));\r\n\t\tdispatcher(links_deleteActionCreator({}));\r\n\t\t\t\t\r\n\t\tReviewImport(modelname,dispatcher);\r\n\t\t \r\n\t\tReviewBigramsImport(modelname,dispatcher); \r\n\t\t\r\n    };\r\n\r\n\tconst DeleteModel = () => {\r\n\r\n\t\taxios.post(`${process.env.REACT_APP_API_URL}/api/reviews/delete/`, {modelname}, config)\r\n        .then(res => {\r\n\t\t\tconsole.log('deleted ' + modelname);\r\n        })\r\n        .catch(err => {\r\n\t\t\tconsole.log('data error - Model');\r\n        });\r\n\t\r\n\t};\r\n\r\n\tif (callData===false){\r\n\t\treviewmodelretrieve() //run just once on open\r\n\t};\r\n    return (\r\n       <div>\r\n\t\t\t<div onChange={e=>DropdownModelChg(e)} >\r\n\t\t\t\t<select id=\"dropdown_models\" >\t\t\r\n\t\t\t\t\t\t\t<option key='1'>\r\n\t\t\t\t\t\t\t\tSelect Model Name\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tdatamodels.map((d,i) => {\r\n\t\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t\t<option key={\"b\"+i}  value={d.label}>\r\n\t\t\t\t\t\t\t\t\t\t\t{d.label}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t</select>\r\n\t\t\t\t<button type=\"submit\" onClick={reviews_retrieve}>Get Data</button>\r\n\t\t\t</div>\r\n\t\t\t<ReviewItemsDropdown change={itemSelect}/>\r\n\t\t\t<br />\r\n\r\n\t\t\t<div onClick={clicked0} style={{'border': '2px solid', 'width': '150px', 'marginTop':'3px', 'cursor':'pointer'}} > \r\n\t\t\t\tDelete selected? \r\n\t\t\t</div>\r\n\t\t\t<Modal show={isModal0Visible} size='sm' >\r\n\t\t\t\t<div style={{color: 'red'}}>\r\n\t\t\t\t\tThis will permanently delete the model from the data\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<button type=\"submit\" onClick={DeleteModel}> Delete </button>\r\n\t\t\t\t\t<button onClick={close0}> Close </button>\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t   </div>\r\n    );\r\n};\r\n\r\nexport default SNAImport;\r\n\r\n//////////helper functions/////////////\r\n","import SNAImport from '../SNAImport';\r\nimport {useSelector} from 'react-redux';\r\n\r\nconst ModalImport = () => {\r\n\r\n\tconst snavars = useSelector((state) => state.snavars);\t\r\n\tconst snanodes = useSelector((state) => state.sna_nodes)\r\n\tconst snanodesfull = useSelector((state) => state.sna_fullnodes)\r\n\tconst snalinks = useSelector((state) => state.sna_links)\r\n\tconst snalinksfull = useSelector((state) => state.sna_fulllinks)\r\n\tconst reviews = useSelector((state) => state.reviewdata)\r\n\r\n\treturn (\r\n       <div className=\"modalPopup\">\r\n\t\t\t<SNAImport />\r\n\t\t\t<br />\r\n\t\t\t\r\n\t\t\t<div> Model Facts: </div>\r\n\t\t\t<div> # Nodes: {snanodesfull.length} </div>\r\n\t\t\t<div> # Links: {snalinksfull.length} </div>\r\n\t\t\t<div> # Reviews: {reviews.length} </div>\r\n\t\t\t<div> # Distinct Clusters: {snavars.numClust} </div>\r\n\t\t\t<div> Filtered Nodes: {snanodes.length} </div>\r\n\t\t\t<div> Filtered Links: {snalinks.length} </div>\r\n\t\t\tItems: \r\n\r\n\t   </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ModalImport;\r\n","import React, {useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport * as d3 from 'd3';\r\nimport ReviewItemsDropdown from \"./shared items/ReviewItemsDropdown\";\r\nimport CleanString from \"../functions/CleanString\";\r\n\r\n\r\nconst ModalLinkcolor = () => {\r\n\t\r\n\tconst Reviews = useSelector((state) => state.reviewdata);\r\n\tconst SNANodes = useSelector((state) => state.sna_nodes);\r\n\tconst SNALinks = useSelector((state) => state.sna_links);\r\n\r\n\tconst [selectedItem, setSelectedItem] = useState('');\r\n\t//const [selectedReview, setSelectedReview] = useState('');\r\n\tlet Items = [];\r\n\r\n\tfunction DropdownChg(e){\r\n\t\tif (Items.length < 1){\r\n\t\t\tReviews.map((d,i) => {\r\n\t\t\t\t\tif (Items.indexOf(d.ReviewItem)=== -1){\r\n\t\t\t\t\t\tItems.push(d.ReviewItem);\r\n\t\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tsetSelectedItem(Items[e.target.selectedIndex - 1]);\r\n\r\n\t};\r\n\r\n\tconst EnumerateReviews = () => {\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div style={{marginTop: \"15px\"}}> \r\n\t\t\t\t{\t\r\n\t\t\t\t\tReviews.map((rev,i) => {\r\n\t\t\t\t\t\tif (rev.ReviewItem === selectedItem){\r\n\t\t\t\t\t\tlet str1 = rev.Summary\t\r\n\t\t\t\t\t\tif (rev.Summary.length > 30){ let str1 = rev.Summary.substring(0,30)+\"...\"} \r\n\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t<div className=\"Modal_ReviewItems\" key={i} value={i} onClick={e=> ClickReview(e)} >\r\n\t\t\t\t\t\t\t\t\tReview  {i}: \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tScore: {rev.Rating} - Summary: {str1} \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tconst ClickReview = (e) => {\r\n\t\tlet xx = e.target.attributes.value.value\r\n\t\tlet terms = CleanString(Reviews[xx].Description).split(\" \");\r\n\t\tlet foundNodes = [];\r\n\t\t\r\n\t\tSNANodes.forEach(nd => {\r\n\t\t\td3.select(\"#\"+nd['id']).attr('fill','black'); //reset to black\r\n\t\t\tif (terms.indexOf(nd['id']) > -1){\r\n\t\t\t\tfoundNodes.push(nd['id']);\r\n\t\t\t}\r\n\t\t})\r\n\t\tconsole.log(foundNodes)\r\n\t\tfoundNodes.forEach(nd => {\r\n\t\t\td3.select(\"#\"+nd).attr('fill','orange').attr(\"r\",10);\r\n\t\t})\r\n\t\t\r\n\t\tlet foundLinks = [];\r\n\t\tSNALinks.forEach(lk => {\r\n\t\t\t//not directly next to, but if both are contained\r\n\t\t\tif (foundNodes.indexOf(lk['source'])>-1 & foundNodes.indexOf(lk['target'])>-1){\r\n\t\t\t\tconsole.log(\"found link - \" + lk['source'] + \"-\" + lk['target'])\r\n\t\t\t\t//is directly next to\r\n\t\t\t\tif (Math.abs(foundNodes.indexOf(lk['source']) - foundNodes.indexOf(lk['target'])) === 1){\r\n\t\t\t\t\tconsole.log(\"direct \" + lk['source'] + \"-\" + lk['target'])\r\n\t\t\t\t\tfoundLinks.push(lk);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t})\r\n\t\tconsole.log(foundLinks); \r\n\t\t\r\n\t\t//add links to diagram?\r\n\t\t//console.log(d3.select(\"#linksg\"))\r\n\t\t\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"modalPopup\">\r\n\t\t\tItems: \r\n\t\t\t<ReviewItemsDropdown change={e => DropdownChg(e)} />\r\n\r\n\t\t\t<br />\r\n\t\t\t<EnumerateReviews />\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default ModalLinkcolor;","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport * as d3 from 'd3';\r\n\r\n\r\nconst ModalScores = () => {\r\n\r\n\tconst snalinks = useSelector((state) => state.sna_links);\r\n\r\n\tconst ScoreColors = () => {\r\n\t\tsnalinks.forEach(lk => {\r\n\t\t\t\tlet line = d3.select(\"#\"+lk['source']+\"--\"+lk['target'])._groups[0][0]\r\n\r\n\t\t\t\tlet range = [4,5]\r\n\t\t\t\tlet bg1 = Math.min( ((lk.value1-range[0])/(range[1]-range[0]))*255, 255)\r\n\t\t\t\tlet bg2 = Math.max(255 - ((lk.value1 - range[0])/(range[1]-range[0]))*255, 0)\r\n\t\t\t\t\r\n\t\t\t\tline.attributes.style.value = \"stroke: rgb(0,\" + bg1 + \",\" + bg2 +\")\"\r\n\t\t})\r\n\t\t\t\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"modalPopup\">\r\n\t\t\tApply score colors to links\r\n\t\t\t<button onClick={ScoreColors} > Scores </button>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default ModalScores;","import {useState} from 'react';\r\nimport {useSelector} from 'react-redux';\r\n//import {nodes_deleteActionCreator, links_deleteActionCreator} from '../sna_actions';\r\nimport * as d3 from 'd3';\r\n\r\nconst ModalClusters = () => {\r\n\t//const snanodes = useSelector((state) => state.sna_nodes);\r\n\t//const snalinks = useSelector((state) => state.sna_links);\r\n\tconst snavars = useSelector((state) => state.snavars);\r\n\tconst [hasbeenrun, setHasbeenrun] = useState(false);\r\n\tconst [colors, setColors] = useState([]);\r\n\r\n\t//let dispatcher = useDispatch();\r\n\t\r\n\tif (hasbeenrun === false){\r\n\t\tlet colors1 = [];\r\n\t\tfor (var c=1; c<=snavars.numClust; c++){\r\n\t\t\tcolors1.push(\"rgb(\" + randomint() + \",\" + randomint() + \",\" + randomint() + \")\");\r\n\t\t}\r\n\t\tsetColors(colors1);\r\n\t\tsetHasbeenrun(true);\r\n\t}\r\n\tconst runClustColors = () => {\r\n\t\t\r\n\t\td3.selectAll(\".circle1\")._groups[0].forEach(cir => {\r\n\t\t\tcir.attributes.style.value = \"stroke: \"+ colors[cir.attributes.cluster.value];\r\n\t\t});\r\n\t\t\r\n\t};\r\n\t\r\n\tconst DropdownChange = (e) => {\r\n\r\n\t\td3.selectAll(\".circle1\")._groups[0].forEach(cir => {\r\n\t\t\tif (cir.attributes.cluster.value !== e.target.value){\r\n\t\t\t\tcir.attributes.style.value = \"stroke: #FFFFFF\";\r\n\t\t\t} else {\r\n\t\t\t\tcir.attributes.style.value = \"stroke: \" + colors[cir.attributes.cluster.value];\r\n\t\t\t}\r\n\t\t});\r\n\t\td3.selectAll(\".snalinks\")._groups[0].forEach(lnk => {\r\n\t\t\tif (lnk.attributes.cluster.value !== e.target.value){\r\n\t\t\t\tlnk.attributes.style.value = \"stroke: #FFFFFF\";\r\n\t\t\t} else {\r\n\t\t\t\tlnk.attributes.style.value = \"stroke: \" + snavars.linkColor;\r\n\t\t\t}\r\n\t\t});\t \r\n\t\t\r\n\t};\r\n\t\r\n\treturn(\r\n\t\t<div className=\"modalPopup\">\r\n\t\t\tColor Nodes by Cluster\r\n\t\t\t<button onClick={runClustColors}>Color Nodes</button>\r\n\t\t\t\r\n\t\t\t<div> Filter Cluster </div>\r\n\t\t\t<select id=\"modaldropdown\" onChange={e=>DropdownChange(e)} >\t\t\r\n\t\t\t\t\t<option key='1'  >\r\n\t\t\t\t\t\tSelect A Node\r\n\t\t\t\t\t</option>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcolors.map((d,i) => {\r\n\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t<option key={\"c\"+i} value = {i} style={{color: colors[i]}}>\r\n\t\t\t\t\t\t\t\t\tCluster {i}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t</select>\r\n\t\t\t<button >Select</button>\r\n\t\t</div>\r\n\t)\r\n};\r\nexport default ModalClusters;\r\n\r\n\r\nfunction randomint(){\r\n\treturn Math.floor(Math.random()*255);\r\n}","import {useSelector} from 'react-redux';\r\nimport * as d3 from 'd3';\r\n\r\n\r\nconst ModalNodeDropdown = () => {\r\n\t\r\n\tconst snanodes = useSelector((state) => state.sna_nodes);\r\n\t//const dispatcher = useDispatch();\r\n\t\r\n\tconst centernode = (e) => {\r\n\t\ttry {\r\n\t\tlet nodeid = snanodes[e.target.selectedIndex].id;\t\t\r\n\t\tlet nodeSelect = d3.select(\"#\"+nodeid)._groups[0][0]\r\n\t\t\r\n\t\tlet cx = +nodeSelect.attributes.cx.value  - 850/2\r\n\t\tlet cy = +nodeSelect.attributes.cx.value  - 750/2\r\n\t\td3.select(\"#g_focus\")._groups[0][0].attributes.transform.value = \"translate(\" + -cx + \",\" + -cy + \")\"\r\n\t\td3.select(\"#\"+nodeid).attr('fill','blue');\r\n\t\t} catch(err){\r\n\t\t\tconsole.log('node not found');\r\n\t\t}\r\n\t};\r\n\t\t\r\n\tconst Nodedropdown = () => {\r\n\t\t\r\n\t\tif (snanodes.length > 1){\r\n\t\t\treturn(\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<select onChange = {e => centernode(e)}>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tsnanodes.map((d,i) => {\r\n\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t<option key={\"b\"+i} value = {d['id']} >\r\n\t\t\t\t\t\t\t\t\t\t{d.id}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn(<div></div>);\r\n\t\t}\r\n\t};\r\n\t\r\n\treturn(\r\n\t\t\t<div className=\"modalPopup\">\r\n\t\t\t\t<Nodedropdown />\r\n\t\t\t</div>\r\n\t\t)\r\n};\r\n\r\nexport default ModalNodeDropdown;","import * as d3 from 'd3';\r\nimport {useEffect} from 'react';\r\nimport {useSelector, useDispatch } from 'react-redux';\r\nimport {snavarsActionCreator, snaselectActionCreator, \r\n\t\tpathdeleteActionCreator, resetvalsActionCreator} from './sna_actions';\r\n\r\nconst Network2D = () => {\r\n\t\r\n\tlet dispatcher = useDispatch();\r\n\tlet SNAstate = useSelector((state) => state.snavars);\r\n\r\n\t//before creating nodes via backend\r\n\t\tconst getNodeNames = (data, linkfieldName1, linkfieldName2) => {\r\n\t\t\tlet new_nodes = [];\r\n\t\t\tlet uniquevals = [];\r\n\t\t\tdata.forEach(d => {\r\n\t\t\t\tif (uniquevals.indexOf(d[linkfieldName1])===-1){\r\n\t\t\t\t\tuniquevals.push(d[linkfieldName1])\r\n\t\t\t\t\tnew_nodes.push({name: d[linkfieldName1], id: d[linkfieldName1], cluster: d['cluster']})\r\n\t\t\t\t};\r\n\t\t\t\tif (uniquevals.indexOf(d[linkfieldName2])===-1){\r\n\t\t\t\t\tuniquevals.push(d[linkfieldName2])\r\n\t\t\t\t\tnew_nodes.push({name: d[linkfieldName2], id: d[linkfieldName2], cluster: d['cluster']})\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t\treturn new_nodes;\r\n\t\t};\r\n\tlet links = useSelector((state) => state.sna_links);\r\n\tlet nodes = getNodeNames(links,\"source\",\"target\");\r\n\t//let nodes = useSelector((state) => state.sna_nodes);\r\n\t\r\n\t//code begin\r\n\tuseEffect(() => {\r\n\t\tif (SNAstate.refreshData){\r\n\t\t\tconsole.log('refresh sna');\r\n\t\t\td3.selectAll(\"#sna_svg\").remove()\r\n\r\n\t\t\tsvg = d3.select(\"#SVGContainer\")\r\n\t\t\t\t\t\t.append(\"svg\")\r\n\t\t\t\t\t\t.attr(\"id\",\"sna_svg\")\r\n\t\t\t\t\t\t.attr(\"width\", width)\r\n\t\t\t\t\t\t.attr(\"height\", height)\r\n\t\t\t\t\t\t.attr(\"style\", \"outline: thin solid black\");\r\n\r\n\t\t\tg = svg.append(\"g\").attr(\"id\",\"g_focus\").attr(\"transform\",\"translate(0,0)\"); //requried to prevent zoom/drag from crashing svg parent\r\n\t\t\t\r\n\t\t\tfixLinkformat();\r\n\t\t\tinitializeSimulation();\r\n\t\t\trerun();\r\n\t\t\t\r\n\t\t\t//apply defaults\r\n\t\t\tcircles.style(\"stroke\",SNAstate.nodeColor).attr(\"stroke-width\", 2)\r\n\t\t\tlink.style(\"stroke\",SNAstate.linkColor)\t\t\r\n\t\t};\r\n\t});\r\n\r\n\t//edit data to be readable by force network\r\n\tconst fixLinkformat = () => {\r\n\t\tRevlinks = [];\r\n\t\tlinks.forEach((ln) => {\r\n\t\t\tRevlinks.push({id: ln.source + \"-\" + ln.target, \r\n\t\t\t\t\t\t\tsource: ln.source, \r\n\t\t\t\t\t\t\ttarget: ln.target,\r\n\t\t\t\t\t\t\tvalue: ln.value,\r\n\t\t\t\t\t\t\tcluster: ln.cluster})\r\n\t\t})\r\n\t};\r\n\t\r\n\t// set up the simulation and event to update locations after each tick\r\n\tconst initializeSimulation = () => {\r\n\t  simulation.nodes(nodes);\r\n\t  simulation.on(\"tick\", ticked);\r\n\t};\r\n\t\r\n\t// add forces to the simulation\r\n\tconst initializeForces = () => {\r\n\t\t// add forces and associate each with a name\r\n\t\tsimulation\r\n\t\t\t.force(\"link\", d3.forceLink())\r\n\t\t\t.force(\"charge\", d3.forceManyBody())\r\n\t\t\t.force(\"collide\", d3.forceCollide())\r\n\t\t\t.force(\"center\", d3.forceCenter())\r\n\t\t\t.force(\"forceX\", d3.forceX())\r\n\t\t\t.force(\"forceY\", d3.forceY());\r\n\t\t// apply properties to each of the forces\r\n\t\tupdateForces();\r\n\t\tzoom_handler(svg);  \r\n\t};\r\n\t\r\n\t\r\n\tconst initializeNodeDisplay = () => {\r\n\t  // set the data and properties of node circles\r\n\t\tnode = g.append(\"g\")\r\n\t\t\t\t.attr(\"class\", \"nodes\")\r\n\t\t\t\t.selectAll(\"g\")\r\n\t\t\t\t.data(nodes)\r\n\t\t\t\t.enter().append(\"g\")\r\n\t\t\t\t.attr(\"name\",function(d){ return d.name })\r\n\t\t\t\t.attr(\"id\",function(d){ return \"node_\"+d.id });\r\n\t\t\t\t\r\n\t\tcircles = node.append(\"circle\")\r\n\t\t\t\t.attr(\"class\",\"circle1\")\r\n\t\t\t\t.attr(\"id\",function(d){ return d.id })\r\n\t\t\t    .attr(\"name\",function(d){ return d.name })\r\n\t\t\t    .attr(\"cluster\",function(d){ return d.cluster })\r\n\t\t\t\t.attr(\"r\", 5)\r\n\t\t\t    .attr(\"fill\", \"black\")\r\n\t\t\t    .attr(\"stroke-opacity\", 1)\r\n\t\t\t    .call(d3.drag()\r\n\t\t\t\t  .on(\"start\", dragstarted)\r\n\t\t\t\t  .on(\"drag\", dragged)\r\n\t\t\t\t  .on(\"end\", dragended))\r\n\t\t\t\t.on(\"mouseover\",function(d){\r\n\t\t\t\t\td3.select(this).transition().duration(50).attr('r',8);\r\n\t\t\t\t})\r\n\t\t\t\t.on(\"mouseout\",function(d){\r\n\t\t\t\t\td3.select(this).transition().duration(50).attr('r',5);\r\n\t\t\t\t})\r\n\t\t\t    .on(\"click\",function(d){\r\n\t\t\t\t\tClickedNode( d3.select(this).attr(\"id\"));\t\t\t\t\t\r\n\t\t\t\t});\r\n\r\n\t  // node tooltip\r\n\t  node.append(\"title\")\r\n\t\t  .text(function(d) { return d.name; });\r\n\t  \r\n\t  // visualize the graph\r\n\t\tlabels = node.append(\"text\")\r\n\t\t\t  .text(function(d) {\r\n\t\t\t\treturn d.name;\r\n\t\t\t  })\r\n\t\t\t  .attr(\"font-size\",8)\r\n\t\t\t  .attr('x', 8)\r\n\t\t\t  .attr('y', 6);\r\n\t};\r\n\r\n\tconst ClickedNode = (selID) => {\r\n\t\t//reset variables, coloring\t\t\r\n\t\tdispatcher(pathdeleteActionCreator({}))\r\n\t\tdispatcher(resetvalsActionCreator({}))\r\n\t\tdispatcher(snaselectActionCreator({selectedNode: selID}))\r\n\t\r\n\t\td3.selectAll(\".snalinks\")._groups[0].forEach(dlk => {\t\r\n\t\t\tdlk.style.stroke = SNAstate.linkColor; //reset color\r\n\t\t})\r\n\t\td3.selectAll(\".circle1\").attr(\"fill\",\"black\").attr(\"r\",5); \r\n\t\t\r\n\t\tif (SNAstate.secondaryNode){\r\n\t\t\td3.select(\"#\" + SNAstate.secondaryNode).attr(\"fill\",\"lightgreen\");\r\n\t\t}\r\n\t\td3.select(\"#\"+selID).transition().duration(50).attr('fill','yellow');\r\n\r\n\t};\r\n\r\n\t// generate the svg objects and force simulation\r\n\tconst initializeLinkDisplay = () => {\r\n\r\n\t\t  // set the data and properties of link lines\r\n\t\t  link = g.append(\"g\")\r\n\t\t\t\t\t.attr(\"id\",\"linksg\")\r\n\t\t\t\t\t.selectAll(\"line\")\r\n\t\t\t\t\t.data(Revlinks)\r\n\t\t\t\t\t.enter().append(\"line\")\r\n\t\t\t\t\t.attr(\"class\", \"snalinks\")\r\n\t\t\t\t\t.attr(\"stroke-opacity\", 1)\r\n\t\t\t\t\t.attr(\"stroke-width\", 2)\r\n\t\t\t\t\t.attr(\"id\",function(d,i){ return d.source + \"--\" + d.target; })\r\n\t\t\t\t\t.attr(\"title\",function(d){return \"Title\"})\r\n\t\t\t\t\t.attr(\"source\",function(d){ return d.source })\r\n\t\t\t\t\t.attr(\"target\",function(d){ return d.target })\r\n\t\t\t\t\t.attr(\"cluster\",function(d){ return d.cluster })\r\n\t\t\t\t\t.attr(\"stroke-opacity\",d => {return 1- 1/(+d.value)})\r\n\t\t\t\t\t.attr(\"data-tip\",\"\")\r\n\t\t\t\t\t.attr(\"data-for\",\"registerTip\")\r\n\t\t\t\t\t.on(\"mouseover\",function(d){\r\n\t\t\t\t\t\td3.select(this).transition().duration(50).attr('stroke-width',5);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.on(\"mouseout\",function(d){\r\n\t\t\t\t\t\td3.select(this).transition().duration(20).attr('stroke-width',2);\r\n\t\t\t\t\t});\r\n\r\n\t\t  link.append(\"title\")\r\n\t\t\t  .text(function(d) { //console.log(d3.select(this)._groups[0][0].__data__); \r\n\t\t\t\t\treturn d.source + \" - \" + d.target; \r\n\t\t\t  }) \t\r\n\t\t  \r\n\t};\t\r\n\t\r\n\t// apply new force properties\r\n\tconst updateForces = () => {\r\n\t\t// get each force by name and update the properties\r\n\t\tsimulation.force(\"center\")\r\n\t\t\t.x(width * forceProperties.center.x)\r\n\t\t\t.y(height * forceProperties.center.y);\r\n\t\tsimulation.force(\"charge\")\r\n\t\t\t.strength(forceProperties.charge.strength * forceProperties.charge.enabled)\r\n\t\t\t.distanceMin(forceProperties.charge.distanceMin)\r\n\t\t\t.distanceMax(forceProperties.charge.distanceMax);\r\n\t\tsimulation.force(\"collide\")\r\n\t\t\t.strength(forceProperties.collide.strength * forceProperties.collide.enabled)\r\n\t\t\t.radius(forceProperties.collide.radius)\r\n\t\t\t.iterations(forceProperties.collide.iterations);\r\n\t\tsimulation.force(\"forceX\")\r\n\t\t\t.strength(forceProperties.forceX.strength * forceProperties.forceX.enabled)\r\n\t\t\t.x(width * forceProperties.forceX.x);\r\n\t\tsimulation.force(\"forceY\")\r\n\t\t\t.strength(forceProperties.forceY.strength * forceProperties.forceY.enabled)\r\n\t\t\t.y(height * forceProperties.forceY.y);\r\n\t\tsimulation.force(\"link\")\r\n\t\t\t.id(function(d) { return d.id;})\r\n\t\t\t.distance(forceProperties.link.distance)\r\n\t\t\t.iterations(forceProperties.link.iterations)\r\n\t\t\t.links(forceProperties.link.enabled ? Revlinks : []);\r\n\r\n\t\t// updates ignored until this is run\r\n\t\t// restarts the simulation (important if simulation has already slowed down)\r\n\t\tsimulation.alpha(1).restart();\r\n\r\n\t};\r\n\t\r\n\tconst rerun = () => {\r\n\r\n\t\tinitializeLinkDisplay();\r\n\t\tinitializeNodeDisplay();\r\n\t\tinitializeForces();\r\n\t\tupdateForces();\r\n\t\t\r\n\t\tdispatcher(snavarsActionCreator({\r\n\t\t\t\t\t\trefreshData: false,\r\n\t\t\t\t\t\tnodeColor:SNAstate.nodeColor, \r\n\t\t\t\t\t\tlinkColor:SNAstate.linkColor, \r\n\t\t\t\t\t\tisHighlight: SNAstate.isHighlight,\r\n\t\t\t\t}))\r\n\t};\t\t\r\n\t\r\n\r\n\treturn(\r\n\t\t<div id=\"SVGContainer\" ></div>\r\n\t)\r\n};\r\n\r\n/////variables///////\r\nlet width = 850,\r\n\theight = 750;\r\nlet svg;\r\nlet g; \r\nlet labels;\r\nlet Revlinks = []; //holding array for formatted link data\r\n\r\n// values for all forces\r\nvar forceProperties = {\r\n    center: {\r\n        x: 0.5,\r\n        y: 0.5\r\n    },\r\n    charge: {\r\n        enabled: true,\r\n        strength: -30,\r\n        distanceMin: 1,\r\n        distanceMax: 1000\r\n    },\r\n    collide: {\r\n        enabled: true,\r\n        strength: .7,\r\n        iterations: 1,\r\n        radius: 5\r\n    },\r\n    forceX: {\r\n        enabled: false,\r\n        strength: .1,\r\n        x: .5\r\n    },\r\n    forceY: {\r\n        enabled: false,\r\n        strength: .1,\r\n        y: .5\r\n    },\r\n    link: {\r\n        enabled: true,\r\n        distance: 30,\r\n        iterations: 1\r\n    }\r\n}\r\n\r\n// svg objects\r\nvar link, node, circles;\r\n\r\n// force simulation\r\nvar simulation = d3.forceSimulation();\r\n\r\n// update the display positions after each simulation tick\r\nconst ticked = () => {\r\n\r\n\t\tlink\r\n\t\t\t.attr(\"x1\", function(d) { return d.source.x; })\r\n\t\t\t.attr(\"y1\", function(d) { return d.source.y; })\r\n\t\t\t.attr(\"x2\", function(d) { return d.target.x; })\r\n\t\t\t.attr(\"y2\", function(d) { return d.target.y; });\r\n\r\n\t\tnode\r\n\t\t\t.attr(\"cx\", function(d) { return d.x; })\r\n\t\t\t.attr(\"cy\", function(d) { return d.y; });\r\n\r\n\t\tcircles\r\n\t\t\t.attr(\"cx\", function(d) { return d.x; })\r\n\t\t\t.attr(\"cy\", function(d) { return d.y; });\r\n\r\n\t\tlabels\r\n\t\t\t.attr(\"x\", function(d) { return d.x+4; })\r\n\t\t\t.attr(\"y\", function(d) { return d.y-3; });\r\n\r\n\t\td3.select('#alpha_value').style('flex-basis', (simulation.alpha()*100) + '%');\r\n\r\n}\r\n\r\n//////////// UI EVENTS ////////////\r\n\r\nfunction dragstarted(event,d) {\r\n  if (!event.active) simulation.alphaTarget(0.1).restart();\r\n  d.fx = d.x;\r\n  d.fy = d.y;\r\n}\r\n\r\nfunction dragged(event,d) {\r\n  d.fx = event.x;\r\n  d.fy = event.y;\r\n}\r\n\r\nfunction dragended(event,d) {\r\n  if (!event.active) simulation.alphaTarget(0.0001);\r\n  d.fx = null;\r\n  d.fy = null;\r\n}\r\n\r\n\r\n//add zoom capabilities \r\nvar zoom_handler = d3.zoom()\r\n    .on(\"zoom\", zoom_actions);\r\n\r\nfunction zoom_actions(event){\r\n    g.attr(\"transform\", event.transform)\r\n}\r\n\r\nexport default Network2D;","import {useState} from 'react';\r\nimport { ProSidebar, Menu, MenuItem, SubMenu, SidebarHeader } from 'react-pro-sidebar';\r\nimport 'react-pro-sidebar/dist/css/styles.css';\r\nimport './css/sidebar.css'\r\n//import {Link} from 'react-router-dom';\r\nimport {Modal} from 'react-bootstrap';\r\nimport ModalNodeColor from './modals/ModalNodeColor';\r\nimport ModalLinkColor from './modals/ModalLinkColor';\r\nimport ModalPathfind from './modals/ModalPathfind';\r\nimport ModalNearbyCommunity from './modals/ModalNearbyCommunity';\r\nimport ModalImport from './modals/ModalImport';\r\nimport ModalReview from './modals/ModalReview';\r\nimport ModalScores from './modals/ModalScores';\r\nimport ModalClusters from './modals/ModalClusters';\r\nimport ModalNodeDropdown from './modals/ModalNodeDropdown';\r\n\r\n\r\nconst SNASidebar = () => {\r\n\r\n\tlet [isModal0Visible,setIsModal0Visible] = useState(false);\r\n\tlet [isModal1Visible,setIsModal1Visible] = useState(false);\r\n\tlet [isModal2Visible,setIsModal2Visible] = useState(false);\r\n\tlet [isModal3Visible,setIsModal3Visible] = useState(false);\r\n\tlet [isModal4Visible,setIsModal4Visible] = useState(false);\r\n\tlet [isModal5Visible,setIsModal5Visible] = useState(false);\r\n\tlet [isModal6Visible,setIsModal6Visible] = useState(false);\r\n\tlet [isModal7Visible,setIsModal7Visible] = useState(false);\r\n\tlet [isModal8Visible,setIsModal8Visible] = useState(false);\r\n\r\n\r\n\tconst clicked0 = () => { setIsModal0Visible(true) };\r\n\tconst close0 = () => { isModal0Visible ? setIsModal0Visible(false) : setIsModal0Visible(true) };\t\r\n\t\r\n\tconst clicked1 = () => { isModal1Visible ? setIsModal1Visible(false) : setIsModal1Visible(true) };\r\n\tconst clicked2 = () => { isModal2Visible ? setIsModal2Visible(false) : setIsModal2Visible(true) };\r\n\t\r\n\tconst clicked3 = () => { setIsModal3Visible(true) };\r\n\tconst close3 = () => { setIsModal3Visible(false) };\t\t\r\n\t\r\n\tconst clicked4 = () => { setIsModal4Visible(true) };\r\n\tconst close4 = () => { setIsModal4Visible(false) };\r\n\t\r\n\tconst clicked5 = () => { setIsModal5Visible(true) };\r\n\tconst close5 = () => { setIsModal5Visible(false) };\r\n\t\r\n\tconst clicked6 = () => { setIsModal6Visible(true) };\r\n\tconst close6 = () => { setIsModal6Visible(false) };\r\n\r\n\tconst clicked7 = () => { setIsModal7Visible(true) };\r\n\tconst close7 = () => { setIsModal7Visible(false) };\r\n\t\t\r\n\tconst clicked8 = () => { setIsModal8Visible(true) };\r\n\tconst close8 = () => { setIsModal8Visible(false) };\r\n\t\t\r\n\treturn(\r\n\t\t<div className=\"sidebar\">\r\n\t\t\t<ProSidebar>\r\n\t\t\t   <SidebarHeader>\r\n\t\t\t\t\t<div style={{color: 'white', marginLeft: '20px'}}> X Options </div>\r\n\t\t\t   </SidebarHeader>\r\n\t\t\t  <Menu iconShape=\"square\">\r\n\r\n\t\t\t\t<div className=\"box\" > \r\n\t\t\t\t\t<MenuItem className=\"menu-item\"  onClick = {clicked0} >\r\n\t\t\t\t\t\tChange Data Model\r\n\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t<Modal show={isModal0Visible} >\r\n\t\t\t\t\t\t<ModalImport />\r\n\t\t\t\t\t<button onClick={close0}> Close </button>\r\n\t\t\t\t\t</Modal>\r\n\t\t\t\t</div>\r\n\t\t\t  \r\n\t\t\t\t<div className=\"box\"> \r\n\t\t\t\t\t<SubMenu title=\"Color\" >\r\n\t\t\t\t\t\t<MenuItem className=\"menu-item\" onClick = {clicked1}>\r\n\t\t\t\t\t\t\tNode Color\r\n\t\t\t\t\t\t\t<Modal show={isModal1Visible} >\r\n\t\t\t\t\t\t\t\t<ModalNodeColor />\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t<MenuItem className=\"menu-item\" onClick = {clicked2} >\r\n\t\t\t\t\t\t\tLink Color\r\n\t\t\t\t\t\t\t<Modal show={isModal2Visible}>\r\n\t\t\t\t\t\t\t\t<ModalLinkColor />\r\n\t\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t</SubMenu>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t{/* Selected Actions Dropdown  */}\r\n\t\t\t\t<div className=\"box\"> \r\n\t\t\t\t\t<SubMenu title=\"Selected Actions\" >\r\n\t\t\t\t\t\t<MenuItem className=\"menu-item\" onClick = {clicked3} >\r\n\t\t\t\t\t\t\tPathfinding\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t<Modal show={isModal3Visible} >\r\n\t\t\t\t\t\t\t<ModalPathfind />\r\n\t\t\t\t\t\t\t<button onClick={close3}> Close </button>\r\n\t\t\t\t\t\t</Modal>\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<MenuItem className=\"menu-item\" onClick = {clicked4} >\r\n\t\t\t\t\t\t\t\tNearby Community\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t<Modal show={isModal4Visible} >\r\n\t\t\t\t\t\t\t\t<ModalNearbyCommunity />\r\n\t\t\t\t\t\t\t\t<button onClick={close4}> Close </button>\r\n\t\t\t\t\t\t</Modal>\t\r\n\r\n\t\t\t\t\t\t<MenuItem className=\"menu-item\" onClick = {clicked8} >\r\n\t\t\t\t\t\t\t\tFind Node\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t<Modal show={isModal8Visible} >\r\n\t\t\t\t\t\t\t\t<ModalNodeDropdown />\r\n\t\t\t\t\t\t\t\t<button onClick={close8}> Close </button>\r\n\t\t\t\t\t\t</Modal>\t\t\t\t  \r\n\t\t\t\t\t</SubMenu>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"box\"> \r\n\t\t\t\t\t<SubMenu title=\"Groupings\" >\r\n\t\t\t\t\t\t<MenuItem className=\"menu-item\" onClick = {clicked5} >\r\n\t\t\t\t\t\t\tReviews\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t<Modal show={isModal5Visible} size={'lg'}>\r\n\t\t\t\t\t\t\t<ModalReview />\r\n\t\t\t\t\t\t\t<button onClick={close5}> Close </button>\r\n\t\t\t\t\t\t</Modal>\t\r\n\t\t\t\t\t  \r\n\t\t\t\t\t    <MenuItem className=\"menu-item\" onClick = {clicked6} >\r\n\t\t\t\t\t\t\tScores\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t<Modal show={isModal6Visible} size={'md'}>\r\n\t\t\t\t\t\t\t<ModalScores />\r\n\t\t\t\t\t\t\t<button onClick={close6}> Close </button>\r\n\t\t\t\t\t\t</Modal>\t\r\n\r\n\t\t\t\t\t    <MenuItem className=\"menu-item\" onClick = {clicked7} >\r\n\t\t\t\t\t\t\tClusters\r\n\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t<Modal show={isModal7Visible} size={'md'}>\r\n\t\t\t\t\t\t\t<ModalClusters />\r\n\t\t\t\t\t\t\t<button onClick={close7}> Close </button>\r\n\t\t\t\t\t\t</Modal>\r\n\t\t\t\t\t</SubMenu>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t  </Menu>\r\n\t\t\t  \t\r\n\t\t\t</ProSidebar>\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default SNASidebar;","import React from 'react';\r\nimport SNASidebar from \"./SNAsidebar\";\r\nimport Network2D from \"./Network2D\";\r\nimport {useSelector } from 'react-redux';\r\nimport Navbar from '../../hocs/Navbar';\r\n\r\nimport './css/snaCSS.css';\r\n\r\nconst SNABase = () => {\r\n\t\r\n\t//need tsx notation\r\n\tlet SNAstate = useSelector((state: any) => state.snavars);\r\n\r\n    return (\r\n\t\t\r\n\t<div>\t\r\n\t\t<Navbar />\r\n       <div id=\"networkpage\">\r\n\r\n\t\t\t<SNASidebar />\r\n\t\t\t\t<div className=\"importbar\"> \r\n\t\t\t\t\t<h2>Social Network Analysis: {SNAstate.modelName} </h2> \r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t<Network2D />\r\n\t   </div>\r\n\t   </div>\r\n    );\r\n};\r\n\r\n\r\nexport default SNABase;\r\n","import axios from 'axios';\r\nimport {useState} from 'react';\r\nimport {Modal} from 'react-bootstrap'; \r\n\r\nconst DeleteModel = (props: modelname) => {\r\n\r\n\tlet modelname = props.modelname\r\n\tif (modelname===\"\"){\r\n\t\tmodelname=\"(No Model Selected)\"\r\n\t}\r\n\r\n\tconst [isModal0Visible,setIsModal0Visible] = useState(false);\r\n\tconst clicked0 = () => { setIsModal0Visible(true) };\r\n\tconst close0 = () => { setIsModal0Visible(false) };\r\n\tconst [alertMsg, setAlertMsg] = useState(\" \");\r\n\t\r\n\tconst config = { headers: { 'Content-Type': 'application/json' } };\r\n\r\n\tconst DeleteModel = () => {\r\n\t\taxios.post(`${process.env.REACT_APP_API_URL}/api/reviews/delete/`, {modelname}, config)\r\n        .then(res => {\r\n\t\t\tconsole.log('deleted ' + {modelname});\r\n\t\t\tsetAlertMsg(\"Deleted!\")\r\n        })\r\n        .catch(err => {\r\n\t\t\tconsole.log('data error - Model');\r\n\t\t\tsetAlertMsg(\"There was an error deleting\")\r\n        });\r\n\t\t\r\n\t};\r\n\t\r\n\r\n\treturn(<div>\r\n\t\t\t\t<div onClick={clicked0} style={{'backgroundColor':'pink', 'border': '2px solid', 'width': '150px', 'overflow':'hidden','marginTop':'3px', 'cursor':'pointer'}} > \r\n\t\t\t\t\tDelete This Model? \r\n\t\t\t\t</div>\r\n\t\t\t\t<Modal show={isModal0Visible} size='sm' >\r\n\t\t\t\t\t<div style={{color: 'red'}}>\r\n\t\t\t\t\t\tThis will permanently delete the model {modelname} from the data\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t<button type=\"submit\" onClick={DeleteModel}> Delete </button>\r\n\t\t\t\t\t\t<button onClick={close0}> Close </button>\r\n\t\t\t\t\t\t\t<div style={{'color':\"blue\"}}> {alertMsg} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t)\r\n};\r\nexport default DeleteModel;","\r\nimport React, {useState, ChangeEvent} from 'react';\r\nimport axios from 'axios';\r\nimport {useDispatch} from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport {reviewdeleteActionCreator} from \"./reviews_actions\";\r\nimport {ReviewModel_Review} from \"../../../type\";\r\n\r\nimport {snarefreshDataActionCreator, snamodelActionCreator, \r\n\t\tnodes_deleteActionCreator, nodesfull_deleteActionCreator,\r\n\t\tlinksfull_deleteActionCreator, links_deleteActionCreator,\r\n\t\tpathdeleteActionCreator, bigramdeleteActionCreator } from \"../../sna/sna_actions\";\r\n\t\t\r\nimport ReviewImport from \"./ReviewImport\";\r\nimport ReviewBigramsImport from \"./ReviewBigramsImport\";\r\nimport DeleteModel from './DeleteModel';\r\n\r\n\t\r\ninterface ModelDataType {\r\n\tlabel: string;\r\n\tvalue: string;\r\n};\r\n\r\n\r\nconst ImportReviews = () => {\r\n\r\n\tlet dispatcher = useDispatch();\r\n\tlet defaultStyle = {backgroundColor: '#cfe2f3'}\r\n\t\r\n\tconst [formData, setFormData] = useState({  modelname: '' });\r\n\t\r\n\tconst [importedReviews, setimportedReviews] = useState(\"\");\r\n\tconst [importedBigrams, setimportedBigrams] = useState(\"\");\r\n\tconst [buttonRstyle, setButtonRstyle] = useState(defaultStyle)\r\n\tconst [buttonBstyle, setButtonBstyle] = useState(defaultStyle)\r\n\t\r\n\tconst [datamodels, setDatamodels] = useState<ModelDataType[]>([])\r\n\tconst { modelname } = formData;\t\r\n\tconst [callData, setCallData] = useState(false)  //to prevent rerun of model import\r\n\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'application/json'\r\n\t\t}\r\n\t};\r\n\t\r\n\r\n\t\r\n\tconst DropdownModelChg = (e: ChangeEvent<EventTarget>):void => {\r\n\t\tlet dd: any = document.getElementById(\"dropdown_models\");\r\n\t\tconsole.log(dd.options[dd.selectedIndex].text);\r\n\t\tsetFormData({modelname: dd.options[dd.selectedIndex].text});\r\n\t\tdispatcher(snamodelActionCreator({modelName: dd.options[dd.selectedIndex].text}));\t\r\n\r\n\t\t//reset store values\r\n\t\tdispatcher(nodesfull_deleteActionCreator({}))\r\n\t\tdispatcher(linksfull_deleteActionCreator({}))\r\n\t\tdispatcher(pathdeleteActionCreator({}))\r\n\t\tdispatcher(reviewdeleteActionCreator({}))\r\n\t\tdispatcher(bigramdeleteActionCreator({}))\r\n\t\tdispatcher(nodes_deleteActionCreator({}));\r\n\t\tdispatcher(links_deleteActionCreator({}));\r\n\t\tdispatcher(snarefreshDataActionCreator({refreshData: true}))\r\n\t\t\r\n\t\t//reset values\r\n\t\tsetimportedReviews(\"\")\r\n\t\tsetButtonRstyle(defaultStyle)\r\n\t\tsetimportedBigrams(\"\")\r\n\t\tsetButtonBstyle(defaultStyle)\t\t\r\n\t};\r\n\r\n\t\r\n\t//------create list of models, once\r\n    const reviewmodelretrieve = () => {\r\n\t\tsetCallData(true); //only run once\r\n\t\t//axios call\r\n        axios.post<ReviewModel_Review[]>(`${process.env.REACT_APP_API_URL}/api/reviews/models/`, {modelname}, config)\r\n        .then(res => {\r\n\t\t\tconst dataset: ModelDataType[] = []\r\n\t\t\tres.data.forEach(d => {\r\n\t\t\t\tdataset.push({label : d.ModelKey, value: d.ModelType})\r\n\t\t\t})\r\n\t\t\tsetDatamodels(dataset);\r\n        })\r\n        .catch(err => {\r\n\t\t\tconsole.log('data error - Model');\r\n        })\r\n    };\r\n\t\r\n\r\n\tconst reviews_retrieve = () => {\r\n\t\t\r\n\t\tconsole.log('reviews retrieve')\r\n\t\tReviewImport(modelname, dispatcher)\r\n\r\n\t\tsetimportedReviews(\"Done\")\r\n\t\tsetButtonRstyle({backgroundColor: '#fe87fe'})\r\n\t\t\r\n\t}\r\n\r\n\tconst bigrams_retrieve = () => {\r\n\r\n\t\tsetimportedBigrams(\"Done\")\r\n\t\tsetButtonBstyle({backgroundColor: '#fe87fe'})\r\n\t\t\r\n\t\tReviewBigramsImport(modelname, dispatcher)\r\n\r\n\t}\r\n\t\r\n\tif (callData===false){\r\n\t\treviewmodelretrieve() //run just once on open\r\n\t};\t\r\n\r\n\t\r\n    return(\r\n\t\t<div>\r\n\t\t<div onChange={e=>DropdownModelChg(e)} >\r\n\t\t\t<select id=\"dropdown_models\" >\t\t\r\n\t\t\t\t\t\t<option key='1'>\r\n\t\t\t\t\t\t\tSelect Model Name\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdatamodels.map((d,i) => {\r\n\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t<option key={\"b\"+i}  value={d.label}>\r\n\t\t\t\t\t\t\t\t\t\t{d.label}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t</select>\r\n\t\t</div>\t\r\n\r\n\t\t\t<button type=\"submit\" onClick={reviews_retrieve} style = {buttonRstyle}>Get Data</button>\r\n\t\t\t<button type=\"submit\" onClick={bigrams_retrieve} style = {buttonBstyle}>Get Bigrams</button>\r\n\t\t\t\r\n\t\t\t<div> \r\n\t\t\t\t<li> Selected Dataset: {modelname} </li>\r\n\t\t\t\t<li> Imported Reviews: { importedReviews }</li>\r\n\t\t\t\t<li> Imported Review Bigrams: { importedBigrams }</li>\r\n\t\t\t</div>\r\n\r\n\t\t<div style={{'height':'150px'}}>\r\n\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/reviews/analyze\" >Look into the data</Link>\r\n\t\t\t  <Link className=\"nav-link active\" aria-current=\"page\" to=\"/sna\" >Check out using Network Graph!</Link>\r\n\t\t</div>\r\n\t\t\r\n\t\t<div style={{'height':'60px', 'width':'250px', 'border':'1px solid black'}}>\r\n\t\t\t<label> Looking to delete this model? </label>\r\n\t\t\t<DeleteModel modelname = {modelname} />\t\t\r\n\t\t</div> \r\n\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ImportReviews","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\n\r\n//import {Review} from \"../../type\";\r\n\r\nconst ReviewImport = () => {\r\n\r\n\tconst [modelname, setModelname] = useState('xx');\r\n\tconst [reviewFile, setReviewFile] = useState([]);\r\n\t\t\t\t\r\n\tconst config = {\r\n\t\theaders: {\r\n\t\t\t'Content-Type': 'multipart/form-data'\r\n\t\t}\r\n\t};\r\n\t\r\n\t//submit to backend\r\n    const review_posttobackend = (event) => {\r\n\t\tconsole.log(modelname);\r\n\t\tconsole.log(reviewFile);\r\n\t\t\r\n\t\tevent.preventDefault()\r\n\t\t\r\n\t\tlet dataArray = new FormData();\r\n\t\tdataArray.append(\"modelname\",modelname);\r\n\t\tdataArray.append(\"reviewFile\",reviewFile);\r\n\t\t\r\n\t\t//axios call\r\n        axios.post(`${process.env.REACT_APP_API_URL}/api/reviews/upload/`, \r\n\t\t\t\t\t//{modelname: modelname, reviewFile: reviewFile}, \r\n\t\t\t\t\tdataArray,\r\n\t\t\t\t\tconfig\r\n\t\t\t\t)\r\n        .then(res => {\r\n\t\t\tconsole.log('posted data')\r\n        })\r\n        .catch(err => {\r\n\t\t\tconsole.log('data error');\r\n        })\r\n    };\r\n\t\r\n\tconst csrf = async () => {\r\n\t\tconst response = await axios.get('/getCSRFToken');\r\n\t\t\r\n\t\taxios.defaults.headers.post['X-CSRF-Token'] = response.data.CSRFToken ;\r\n\t};\r\n\t\r\n    return (\r\n       <div>\r\n\r\n\t\t\t<div className='lead'> Alternatively, Upload a new Reviews File </div>\r\n\t\t\t<form onSubmit={review_posttobackend}>\r\n\t\t\t\t<input type=\"file\" name=\"reviewFile\" onChange={e => setReviewFile(e.target.files[0])}/>\r\n\t\t\t\t<div > Model name:  </div>\r\n\t\t\t\t<input type=\"text\" name=\"modelname\" onChange={e => setModelname(e.target.value)}/>\r\n\t\t\t\t\r\n\t\t\t\t<button type=\"submit\" >Get Data</button>\r\n\t\t\t</form>\t\r\n\t   </div>\r\n    );\r\n};\r\n\r\n\r\nexport default ReviewImport;\r\n","import React from 'react';\r\nimport Navbar from '../../../hocs/Navbar';\r\nimport {Link} from 'react-router-dom'\r\nimport ReviewModelSelector from \"./ReviewModelSelector\";\r\nimport ReviewUpload from './ReviewUpload';\r\n\r\nconst ReviewExplorer = () => {\r\n\t\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<Navbar />\r\n\t\t\t<div className=\"reviewwrapper\" style={{'height':'580px'}}>\r\n\t\t\t\t<div className=\"home-body\" >\r\n\t\t\t\t\t\r\n\t\t\t\t\t<h1 className='display-4'>Reviews</h1>\r\n\t\t\t\t\t<p className='lead'>For Basic Analysis of Review</p>\r\n\t\t\t\t\t<hr className='my-4'/>\r\n\r\n\t\t\t\t</div>\r\n\t\t\t<br />\r\n\t\t\t<p> Using the below, Import a Saved Model to Analyze: </p>\r\n\t\t\t<ReviewModelSelector />\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t\t<ReviewUpload />\t\t\t\r\n\t\t</div>\r\n\t)\r\n\r\n};\r\n\r\nexport default ReviewExplorer;\r\n\r\n\r\n","import * as d3 from 'd3'\r\n\r\nconst BarchartTest = (pars) => {\r\n\t\r\n\tconsole.log(\"barchart\")\r\n\t\r\n\tlet bardata = pars.data\r\n\t\r\n\tlet margin = {top: 10, right: 10, bottom: 10, left: 20},\r\n\twidth = 600 - margin.left - margin.right,\r\n\theight = 100 - margin.top - margin.bottom;\r\n\t\r\n\t// set the ranges\r\n\tlet x = d3.scaleBand()\r\n\t\t\t  .range([0, width])\r\n\t\t\t  .padding(0.1);\r\n\tx.domain(bardata.map(function(d) { return d[0]; }));\t\t\t  \r\n\t\r\n\tlet y = d3.scaleLinear()\r\n\t\t\t  .range([height, 0]);\t\t\r\n\r\n\tlet mina = d3.max([0,d3.min(bardata,function(d) { return d[1]; }) - d3.deviation(bardata,function(d) { return d[1]; })]); //causes errors\r\n\ty.domain([mina, d3.max(bardata,function(d){ return d[1]; }) ]);\r\n\r\n\t\r\n\td3.selectAll(\"svg\").remove()\r\n\r\n\tlet svg = d3.select(\"#line1\")\r\n\t\t\t\t.append(\"svg\")\r\n\t\t\t\t.attr(\"width\", width + margin.left + margin.right)\r\n\t\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\r\n\t\t\t\t.attr(\"transform\",\"translate(\" + (margin.left - 5) + \",\" + (margin.top + 0) + \")\");\r\n\t\t\r\n\t\t\tsvg.selectAll(\"rect\")\r\n\t\t\t\t  .data(bardata)\r\n\t\t\t\t  .enter().append(\"rect\")\r\n\t\t\t\t  .attr(\"class\", \"bar\")\r\n\t\t\t\t  .attr(\"x\", function(d) { return x(d[0]); })\r\n\t\t\t\t  .style(\"fill\", function(d) { return \"pink\" })\r\n\t\t\t\t  .attr(\"width\", x.bandwidth())\r\n\t\t\t\t  .attr(\"y\", function(d) { return y(mina); })\r\n\t\t\t\t  .attr(\"height\", function(d) { return height - y(mina); })\r\n\r\n\t\t\tsvg.selectAll(\"rect\")\r\n\t\t\t\t\t.transition()\r\n\t\t\t\t\t.duration(400)\r\n\t\t\t\t\t.attr(\"y\",function(d) { return y(d[1]); })\r\n\t\t\t\t\t.attr(\"height\",function(d) { return height - y(d[1]); })\r\n\r\n\t\t\t // add the y Axis\r\n\t\t\tsvg.append(\"g\")\r\n\t\t\t\t.attr(\"transform\",\"translate(2,0)\")\r\n\t\t\t\t.call(d3.axisLeft(y))\r\n\t\t\r\n\t\t\td3.selectAll(\"text\").append(\"text\")\r\n\t\t\t\t.attr(\"class\",\"charttitle\")\r\n\t\t\t\t.attr(\"x\",width/2)\r\n\t\t\t\t.attr(\"y\",0 - (margin.top/2))\r\n\t\t\t\t.attr(\"text-anchor\",\"middle\")\r\n\t\t\t\t.style(\"font-size\",\"14px\")\r\n\t\t\t\t.style('fill','black')\r\n\t\t\t\t.text(\"Graph\")\r\n\t\t\t\r\n\t\t//console.log(bardata)\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t</div>\r\n\t)\r\n\t\r\n}\r\nexport default BarchartTest","import CleanString from \"../../../sna/functions/CleanString\";\r\nimport * as d3 from 'd3';\r\n\r\nconst DescStringParse = (pars) => {\r\n\r\n\tlet cmax, cmin, dist = 0\r\n\r\n\tlet review = pars.review\r\n\tconsole.log(review.WordTrend)\r\n\r\n\tconst mouseoverWord = (e) => {\r\n\t\tlet idx = e.target.attributes[0].value\r\n\t\t\r\n\t}\r\n\r\n\tconst createitems = () => {\r\n\t\t\r\n\t\tcmin = d3.min(review.SentimentTrend,function(d) { return d; }) \r\n\t\tcmax = d3.max(review.SentimentTrend,function(d) { return d; }) \r\n\t\tconsole.log(cmin + \"|\" + cmax)\r\n\t\t\r\n\t\tdist = review.WordTrend.length - review.SentimentTrend.length\r\n\t\tconsole.log(dist)\r\n\t\t\r\n\t}\r\n\t\r\n\tconst transformvals = (i) => {\r\n\t\tif (i > dist){\r\n\t\t\tlet colornum = (review.SentimentTrend[i-dist] - cmin)/(cmax - cmin) * 255\r\n\t\t\treturn(colornum)\r\n\t\t} else {\r\n\t\t\treturn(0)\r\n\t\t}\r\n\t}\r\n\t\r\n\tcreateitems()\r\n\t\r\n\treturn(\r\n\t\t<div style = {{'height':'100px', 'overflow':'hidden'}}>\r\n\t\t\t<div style={{'fontWeight':\"bold\"}}> Sentiment Trend: </div>\r\n\r\n\t\t\t{\r\n\t\t\t\treview.WordTrend.map( (wrd,i) => {\r\n\t\t\t\t\treturn(<a index={i} key={'a'+i} \r\n\t\t\t\t\t\t\t\tonMouseOver={e => mouseoverWord(e)} \r\n\t\t\t\t\t\t\t\tstyle={{'color':'rgb(' + transformvals(i)/2 + ',' + 0 + ',' + transformvals(i) +')'}}\r\n\t\t\t\t\t>{wrd} </a>)\t\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default DescStringParse;","\r\nimport {useState, ChangeEvent} from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {Review} from '../../../type';\r\nimport \"./css/reviewanalyze.css\";\r\nimport BarchartTest from \"../../../hocs/d3/BarchartTest.js\";\r\nimport DescStringParse from \"./functions/DescStringParse\";\r\nimport * as d3 from 'd3';\r\n\r\nconst ReviewAnalyze = () => {\r\n\r\n\tconst reviewInit: Review = {\r\n\t\tModelKey: '',\r\n\t\tReviewItem: '',\r\n\t\tSummary: '',\r\n\t\tDescription: '',\r\n\t\tRating: 0,\r\n\t\tTopic: '',\r\n\t\tTopicScore: 0,\r\n\t\tRating_Estimate: 0,\r\n\t\tSentimentTrend: [0],\r\n\t\tWordTrend: [\"\"],\r\n\t}\r\n\t\r\n\tconst reviews = useSelector((state:any) => state.reviewdata);\r\n\tconst modelname = useSelector((state:any) => state.snavars);\r\n\tconst [selectedItem, setSelectedItem] = useState(\"\")\r\n\tconst [selectedReview, setSelectedReview] = useState(reviewInit)\r\n\tconst [isrunonce, setIsrunonce] = useState(false)\r\n\tconst [isclicked_I, setIsclicked_I] = useState(false)\r\n\tconst [isclicked_R, setIsclicked_R] = useState(false)\r\n\tconst [senttrend, setSenttrend] = useState([0])\r\n\t\r\n\tconsole.log(reviews)\r\n\t\r\n\t//let imgstyle = {backgroundImage: `url(${snablur})`, backgroundSize:'100%'}\r\n\tlet Items: any[] = [];\r\n\tlet SingleItemReviews: Review[] = []\r\n\r\n\tlet rstyle:object = {'width': isclicked_I ? '200px' : '10px'}\r\n\r\n\tconst ClickedItem = (e: ChangeEvent<HTMLInputElement>):void => {\r\n\t\tsetSelectedItem(e.target.id)\r\n\t\tsetIsclicked_I(true)\r\n\t\tsetIsclicked_R(false)\r\n\t\r\n\t\td3.selectAll(\"svg\").remove()\r\n\r\n\t}\r\n\r\n\tconst ClickedReview = (e: ChangeEvent<HTMLInputElement>):void => {\r\n\t\tsetIsclicked_R(true)\r\n\t\tsetSelectedReview(SingleItemReviews[Number(e.target.id)])\r\n\r\n\t\tlet trendvals:any[] = []\r\n\t\tSingleItemReviews[Number(e.target.id)].SentimentTrend.forEach((sen,i) => {\r\n\t\t\ttrendvals.push([i,sen]);\r\n\t\t});\r\n\t\tsetSenttrend(trendvals);\r\n\t}\r\n\r\n\tconst GroupItems: any = () => {\r\n\t\tconsole.log(\"Groupitems\")\r\n\t\t\treviews.forEach((d: Review, i: number) => {\r\n\t\t\t\tif (Items.indexOf(d.ReviewItem)=== -1){\r\n\t\t\t\t\tItems.push(d.ReviewItem);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tif (Items.length > 0){\r\n\t\t\t\treturn (<div>\r\n\t\t\t\t\t<div style={{'marginLeft':'15px', 'fontWeight':'bold', 'letterSpacing':'1px'}}>Items:</div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tItems.map((d: any, i:number) => {\r\n\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t<div key={\"ii\"+i} className=\"listitem_i\" id={d} onClick={(e:any) => ClickedItem(e)}>\r\n\t\t\t\t\t\t\t\t\t{d}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t}\r\n\r\n\tconst GroupReviews: any = () => {\r\n\t\tconsole.log(\"Groupreviews\")\r\n\t\tif (isclicked_I ===true) {\r\n\t\t\tSingleItemReviews = [];\r\n\r\n\t\t\treviews.forEach((d: Review, i: number) => {\r\n\t\t\t\tif (d.ReviewItem === selectedItem){\r\n\t\t\t\t\tSingleItemReviews.push(d)\r\n\t\t\t\t}\t\r\n\t\t\t});\r\n\r\n\t\t\t\treturn (<div>\r\n\t\t\t\t\t<div style={{'marginLeft':'15px', 'fontWeight':'bold', 'letterSpacing':'1px'}}>Reviews:</div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tSingleItemReviews.map((d: Review, i: number) => {\r\n\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t<div key={'rr'+i} className=\"listitem_r\" id={String(i)} onClick={(e:any) => ClickedReview(e)}> \r\n\t\t\t\t\t\t\t\t\t{d.Summary}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t} else {\r\n\t\t\treturn(<div></div>)\r\n\t\t}\r\n\t}\r\n\r\n\tconst ReviewPage: any = () => {\r\n\t\tconsole.log(\"Reviewpage\")\r\n\t\tif (isclicked_R ===true){\r\n\t\t\tconsole.log(selectedReview);\r\n\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<h3 style={{margin:'5px'}}>Item {selectedReview.ReviewItem}: {selectedReview.Summary}</h3>\r\n\t\t\t\t<div className=\"reviewSub\"> \r\n\t\t\t\t\t<div > Score: {selectedReview.Rating} </div>\r\n\t\t\t\t\t<div > ModelEstimated Score: {selectedReview.Rating_Estimate} </div>\r\n\t\t\t\t\t<div > Topic: {Math.round(selectedReview.Topic,0)} </div>\r\n\t\t\t\t\t<div > Topic Score: {Math.round(selectedReview.TopicScore*100,1)}% </div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"reviewDesc\" style={{color:'white'}}> \r\n\t\t\t\t\t<a style={{'fontWeight':'bold' }}>Description:  </a> {selectedReview.Description}\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<BarchartTest data={senttrend} />\r\n\t\t\t\t<DescStringParse review={selectedReview} />\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t\t} else {\r\n\t\t\treturn(<div></div>)\r\n\t\t}\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div id='a_review'>\t\t\t\r\n\t\t\t\t<div className=\"display-6\" style={{marginLeft:'10px'}}>Analyze Reviews</div>\r\n\t\t\t\t<div className=\"lead\" style={{marginLeft: '15px'}}>Model: {modelname.modelName}</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"gridcomponent_r\" >\r\n\t\t\t\t<div className=\"vertList\" id=\"v_list1\" >\r\n\t\t\t\t\t<GroupItems />\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"vertList\" id=\"v_list2\" style={rstyle}>\r\n\t\t\t\t\t<GroupReviews />\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"reviewclass\" id=\"revid1\">\r\n\t\t\t\t\t<ReviewPage />\r\n\t\t\t\t\t<div id=\"line1\" style={{'font':'black'}}>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t)\r\n};\r\n\r\nexport default ReviewAnalyze;","import React from 'react';\nimport  {BrowserRouter, Route, Switch } from 'react-router-dom';\n\n//import Layout from './hocs/Layout'\nimport Home from './pages/home';\nimport Dashboard_Home from './pages/dashboard/Dashboard_Home';\nimport Login from './pages/login';\nimport ToolkitApp from './ToolkitApp';\nimport DataImport from './pages/data/DataImport';\nimport DataUpload from './pages/data/DataUpload.js';\n\nimport SNABase from './pages/sna/SNABase';\nimport ReviewExplorer from './pages/data/Reviews/ReviewExplorer';\nimport ReviewAnalyze from './pages/data/Reviews/ReviewAnalyze';\n\n\n/*import Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Activate from './pages/Activate';\nimport ResetPassword from './pages/ResetPassword';\nimport ResetPasswordConfirm from './pages/ResetPasswordConfirm';\n */\n\n\nfunction App() {\n  return (\n\t\t<BrowserRouter >\n\t\t\t\t<div style={{'marginLeft': '30px', 'marginRight':'30px'}}>\n\n\t\t\t\t<Switch>\n\n\t\t\t\t\t<Route exact path='/' component={Home}/>\n\t\t\t\t\t<Route exact path='/toolkit' component={ToolkitApp}/>\n\t\t\t\t\t<Route exact path='/data' component={DataImport}/>\n\t\t\t\t\t<Route exact path='/login' component={Login}/>\n\t\t\t\t\t<Route exact path='/reviews' component={ReviewExplorer}/>\n\t\t\t\t\t<Route exact path='/sna' component={SNABase}/>\n\t\t\t\t\t<Route exact path='/dashboard' component={Dashboard_Home}/>\n\t\t\t\t\t<Route exact path='/dataupload' component={DataUpload}/>\n\t\t\t\t\t<Route exact path='/reviews/analyze' component={ReviewAnalyze}/>\t\t\t\t\t\n\n\t\t\t\t</Switch>\n\t\t\t\t</div>\t\n\t\t</BrowserRouter>\n  );\n}\n\nexport default App;\n\n\n/* \n\t\t\t\t\t<Route exact path='/login' component={Login}/>\n\t\t\t\t\t<Route exact path='/signup' component={Signup}/>\n\t\t\t\t\t<Route exact path='/reset-password' component={ResetPassword}/>\n\t\t\t\t\t<Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm}/>\n\t\t\t\t\t<Route exact path='/activate/:uid/:token' component={Activate}/> */","import {todoSlice, selectedTodoSlice, counterSlice} from './redux-toolkit'\r\nimport {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\r\n//import {logger} from 'redux-logger';\r\nimport {userSlice} from './auth/user_actions'\r\nimport {empdataSlice} from './pages/data/data_actions'\r\nimport {snavarsSlice, bigramDataSlice, \r\n\t\tlinksSlice, nodesSlice, linksFullSlice, nodesFullSlice, pathSlice} from './pages/sna/sna_actions'\r\n\r\nimport {reviewDataSlice} from './pages/data/Reviews/reviews_actions';\r\n\r\n//combines reducers - toolkit will understand object\r\nconst reducer = {\r\n\ttodos: todoSlice.reducer,\r\n\tselectedTodo: selectedTodoSlice.reducer,\r\n\tcounter: counterSlice.reducer,\r\n\tuser: userSlice.reducer,\r\n\tempdata: empdataSlice.reducer,\r\n\treviewdata: reviewDataSlice.reducer,\r\n\tbigramdata: bigramDataSlice.reducer,\r\n\tsnavars: snavarsSlice.reducer,\r\n\tsna_nodes: nodesSlice.reducer,\r\n\tsna_fullnodes: nodesFullSlice.reducer,\r\n\tsna_links: linksSlice.reducer,\r\n\tsna_fulllinks: linksFullSlice.reducer,\r\n\tsna_paths: pathSlice.reducer,\r\n};\r\n\r\n\r\n//store: comes with redux-thunk & devtools\r\nexport default configureStore({\r\n\treducer,\r\n\tmiddleware: [...getDefaultMiddleware(), \r\n\t\t\t\t//logger\r\n\t\t\t\t]\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n\t  <React.StrictMode>\n\t\t<App />\n\t  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}